name: Sombra
scopeName: source.coffee
fileTypes: [so, sombra, coffee]
patterns: [include: "#core"]

information_for_contributors: |
  Sombra is a modern functional, imperative and object-oriented programming language
  with a syntax inspired by Python, and compile(s) to JavaScript and WebAssembly.

  Sombra is additionally inspired by Ruby, Elixir, Clojure, LiveScript, Haskell, OCaml, Go,
  Scala, Flix, Nim, Bash and YAML.

  Should you want to provide a fix or improvement, or even a new feature,
  please create a pull request against this repo: https://github.com/nxltm/sombra-lang
  and I will be very happy to receive them.

  Once accepted, I am happy to receive your request and feedback.

  This document is always under construction, and there's still a couple of things that
  need to be fixed. All this info would be on my Trello which I will be posting very soon.
  I will come back to fix them if I have the time.

comment: |
  To-Do:

  - Add function labels
  - Add keywords for types from SQL
  - Add grammars for Unicode character entities
    - HTML5, AGL and LaTeX
    - Locale and Unicode script codes
    - Transformation rules

  - Add standard library functions, types, classes,
    modules, properties, variables in this order:
    - JavaScript/TypeScript
    - Swift
    - Java, Scala, Kotlin, Flix
    - Haskell, OCaml
    - Go, Rust
    - R
    - Python (names, methods, etc), Perl, Ruby, Lua
    - C, Objective C(++)
    - PHP (needs a bit of cleanup)

  Done:
  - Standardized modifier and declaration keywords
  - Syntax changed, mirrors C# now.
  - Oniguruma uses \w to refer to _\d\p{L}\p{M}, use character
    set operations && and ^ to perform set subtractions
  - Added extended JSX syntax (might still need some modifications)

define:
  number-literal: &number-literal
    1: {name: storage.type.numeric.so}
    2: {name: punctuation.separator.decimal.period.so}
    3: {name: constant.numeric.other.separator.so}
    4: {name: constant.numeric.other.exponent.so}
    5: {name: constant.numeric.other.density.so}
    6: {name: storage.type.numeric.so}

  entity-name: &entity-name |
    (?x)\s*\b
    (?!(?<!(?:(?<!\.)\.|[?!:]:)=?|->)
    \b(?:# don't match keywords
    in|of|as|is|new|infer|unset
    |typeof|nameof|sizeof|pairof|keyof|valueof
    |length|delete|to|til|thru|at|by
    |n?and|x?n?or|not|parallel|series|spawn|discard
    |func?|function|proc|process|macro
    |let|var|val|const|declare
    |class|given|constraint|enum|relation|lattice
    |project|attribute|protocol|member|extend|fragment|interface|struct
    |module|package|namespace|object|record|label
    |raw|data|query|schema|style|component|element|trait|friend|alias|type
    |if|else\s*(?:if|unless)?|els?if|ell?ess|unless|guard
    |for|each|repeat\s*\b\s*(?:while|until)?|while|until|repeat|do|redo
    |switch|case|fail|default|match|when|pass|fallthru
    |try|retry|throw|raise|catch|rescue|finally
    |with|ref|defer|refer|show|hide|enter|exit
    |then|begin|end|debug|check|assert
    |break|continue|halt|skip|fixed|lock
    |(?:return|give|await|yield|throw|raise)s?
    |import|export|show|hide|open|close
    |from|where|join|equals?|[io]nto|order
    |take|drop|fold|scan|select|group|use|using
    )\b
    )
    ([\p{Pc}\p{L}]\w*)
    \b

  posix-class: &posix-class |
    (?xi)
    \\o|
    \\p(?:
    # POSIX
    alpha|alnum|ascii|blank|cntrl|x?digit
    |graph|lower|print|punct|space|upper|word
    # Extended-POSIX
    |symbol|open|close|dash|link|start|final|math|money
    |number|letter|title|mark|modify
    |bin|qua|sen|oct|dec|doz|hex
    )

repository:
  core:
    patterns:
      - comment: The following are placeholders.
          Will redo embedded HTML and CSS syntax later.
      - include: "#jsx"
      - include: "#clauses"
      - include: "#declarations"
      - include: "#keywords"
      - include: "#comments"
      - include: "#brackets"
      - include: "#punctuation"
      - include: "#type-annotation"
      - include: "#literals"
      - include: "#support"
      - include: "#calls"
      - include: "#variables"
      - include: "#operators"
      - include: "#illegal"

  illegal:
    patterns:
      - match: '\p{N}[\w.+-/\\]*?'
        name: invalid.illegal.numeric.other.so
      - match: '[\w]+?'
        name: invalid.illegal.variable.other.so
      - match: '[({\[)}\]]+?'
        name: invalid.illegal.missing-bracket.so
      - match: '\S+?'
        name: invalid.illegal.syntax.so

  illegal-keywords:
    match: |
      \s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(
      in|of|as|is|new|infer|unset
      |typeof|nameof|sizeof|pairof|keyof|valueof
      |length|delete|to|til|thru|at|by
      |n?and|x?n?or|not|parallel|series|spawn|discard
      |func?|function|proc|process|macro
      |let|var|val|const|declare
      |class|given|constraint|enum|relation|lattice
      |project|attribute|protocol|member|extend|fragment|interface|struct
      |module|package|namespace|object|record|label
      |raw|data|query|schema|style|component|element|trait|friend|alias|type
      |if|else\s*(?:if|unless)?|els?if|ell?ess|unless|guard
      |for|each|repeat\s*\b\s*(?:while|until)?|while|until|repeat|do|redo
      |switch|case|fail|default|match|when|pass|fallthru
      |try|retry|throw|raise|catch|rescue|finally
      |with|ref|defer|refer|show|hide|enter|exit
      |then|begin|end|debug|check|assert
      |break|continue|halt|skip|fixed|lock
      |(?:return|give|await|yield|throw|raise)s?
      |import|export|show|hide|open|close
      |from|where|join|equals?|[io]nto|order
      |take|drop|fold|scan|select|group|use|using
      )\b\s*
    name: invalid.illegal.keyword.so

  unicode-named-chars:
    comment: Support for the Unicode Named Character encoding, inspired
      by LaTeX, HTML, AGL, Unicode and regular expressions.
    repository:
      aglfn:
        patterns:
          - match: (?x)\bk(?:(?:eheh(?:T(?:wodotshorizontalabove|hreedots(?:(?:up)?below|above))|Dotabove)\-a|afTwodotshorizontalabove\-a|(?:a(?:fThreedots|sraDot|fDot)below|a(?:s(?:ra(?:tanCurly|small|Curly)|hidaFina)|fswash|fRing)|hah_hah)\-a|afDotabove\-a|(?:Bold)?\-fraktu|(?:oomuu|akaba)t\-khme|(?:ha\-myanm|a(?:shida\-|\-myanm))a|descende|h(?:an?|o)\-khme|[ao]\-khme)r|i(?:ss(?:ing(?:CatFaceWithClosed|FaceWith(?:Smiling|Closed))Eyes|Mark)|ndergarten\-han\.circled|(?:(?:yeok(?:(?:Sioskiyeok|Nieun|Rieul|Pieup)Jong|(?:Khieuk|Hieu)hJong|C(?:h(?:ieuchJong|o)|ompa)|TikeutCho|SiosCompa|(?:Sios)?Jong|aParen|Paren)|ng?|bs|l[bghmpst]|n[hj]|g[gs]?|[clm]|[dhjk])\-k|ss?\-k|b\-k|mon)o|(?:Blackfoot|i)\-canadian|eem\-bamum\.phaseB|yeoka?\-ko\.circle|r(?:ghiz(?:yu|oe)\-ar\.isol|o(?:(?:meetor|guram)u|watto)?Square)|rghiz(?:yu|oe)\-ar\.fina|q\-bamum\.phaseB|(?:a[bv]|v)\-pahawhhmong|b\-pahawhhmong|\-(?:bamum\.phaseE|k(?:ata\.(?:circled|half)|o)|canadian|ethiopic|hira)|ng(?:Black|White)Chess|(?:tRadical|e[px]|e|x)?\-yi|rghiz(?:yu|oe)\-ar|talic\-math|ck\-shavian|ss(?:ingFace)?|wifruit|nferior|\-(?:bamum|kata)|t\-(?:yi|ko)|p(?:\-(?:yi|ko))?)|(?:(?:(?:(?:apyeoun(?:ssangpieup|p(?:hieuph|ieup)|mieum)C|hieukhC)ompa|(?:apyeoun(?:ssangpieup|p(?:hieuph|ieup)|mieum)C|hieukhC)ho|(?:apyeoun(?:p(?:hieuph|ieup)|mieum|rieul)|hieukh)Jong|apyeounrieulCho|hieukha?Paren|(?:w(?:a(?:e[bs]|[bs])|i[bs]|e[bs])|y(?:u[bs]|[io][bs]|e[bs]|a[bs])|os)s|(?:w(?:ae?|[ei])|y[aeiou]|o)n[ghj]|(?:weo|y(?:eo|ae)|oe|ae)(?:[bs]s|n[ghj]|[cdhjkmpt])|(?:w(?:ae?|[ei])|weo|y(?:eo|ae)|y[aeiou]|oe|ae|e[ou]|u|o|a)l[bghmpst]|w(?:a(?:e[cdhjkmp]|[cdhjkmpt])|i[cdhjkmpt]|e[cdhjkmpt])|e(?:u(?:ss|[cdhjt])|ubs|un[ghj]|o(?:[bs]s|n[ghj]|[cdhjkmpt])|ss|l[bghmpst]|n[ghj]|[cdjkm])|y(?:u[cdhjkmpt]|[io][cdhjkmpt]|e[cdhjkmpt]|a[cdhjkmp])|u(?:ss|n[ghj]|[cdhjkm])|o(?:bs|g[gs]|[cdjk])|a(?:ss|bs|n[hj]|j)|[eu]bs)\-|(?:w(?:ae?|[ei])|weo|y(?:eo|ae)|y[aeiou]|oe|ae|e(?:u|o)?|u|a)g[gs]?\-|(?:w(?:a(?:e[bs]|[bs])|i[bs]|e[bs])|y(?:u[bs]|[io][bs]|e[bs]|a[bs])|os)\-|(?:w(?:ae?|[ei])|y[aeiou]|o)n\-|(?:weo|y(?:eo|ae)|oe|ae)(?:[bs]|n)?\-|(?:w(?:ae?|[ei])|weo|y(?:eo|ae)|y[aeiou]|oe|ae|e[ou]|u|o|a)l\-|(?:wae|yat|us|o[ghm])\-|e(?:u(?:k|s)?|ub|un|o(?:[bs]|n)?|s|l)\-|a(?:[chks]\-|\-n))k|h(?:oKh(?:uay|ai)|mu(?:Ny|G)o)\-la|\-bopomof|(?:aran|oLa)\-la|oKai\-la|(?:waet|un)\-k|a(?:ng?|[dm])\-k|e(?:u[mp]|h|t|n)\-k|w[aei]\-k|y[aeiou]\-k|ut\-k|[ao]b\-k|[eu]b\-k)o|(?:uopnkaarae|paraq)\-bamum\.phaseC|(?:(?:hah_(?:alefMaksura|yeh)|af_(?:alefMaksura|meem(?:_meem)?|meem_yeh|alef|lam|yeh)|eheh|hah|af)\-ar\.fin|unddaliya\-sinhal|aaf\-osmany|usmall\-kat|asmall\-kat|esmall\-kat|(?:a(?:ng)?|la)?\-lepch|a(?:comb)?\-dev|h(?:a(?:a\-chakm|\-(?:o(?:sman|ri)y|kannad|sinhal|lepch|dev))|ha\-dev)|aa\-chakm|a\-kannad|a\-sinhal|a\-oriy|oal)a|e(?:u(?:(?:otmbuae|aetmeun|p)\-bamum\.phaseD|keutnda\-bamum\.phaseA|m\-bamum\.phase[CD])|u(?:s(?:heuaep|eux)|kaq)\-bamum\.phaseC|n(?:(?:fatigue|law)\-bamum\.phaseC|\-(?:bamum\.phaseF|arm))|t\-bamum\.phase[AC-F]|h\-arm)|(?:(?:uRuKhaBzhiMigCan|(?:uRuKh|ss|k)?a|ssaSub|aSub)\-tibe|commaaccen|ha(?:Sub)?\-tibe|ay\-desere)t|(?:(?:(?:stroke)?diagonal|oblique)strok|hieukha\-ko\.circl|hieukh\-ko\.circl|eyboardAndMous|a(?:\-cheroke|cut)|y?a\-osag|ha\-osag)e|(?:af_(?:(?:meem(?:_meem)?|lam)\-ar\.i|k?hah\-ar\.i|jeem\-ar\.i)|hah_[jm]eem\-ar\.i|eheh\-ar\.i|hah\-ar\.i|af\-ar\.i)nit|(?:w(?:(?:oo?|ii?|e)WestCree|a(?:a(?:WestCree|Naskapi)|WestCree|y))|k(?:ee|e|a|[iou])?Carrier|h(?:ee?|u|i|a|o)Carrier|[aeo]Blackfoot|Ojibway|w(?:aa?|[ei])|w(?:oo|ii|o)?|aai|ay|oo|o|e)?\-canadian|eu(?:yeux|aem|puq)\-bamum\.phaseB|(?:habClan|ooClan|wmClan|oo[bv]|a(?:a[bv]|i[bv])|e(?:e[bv]|v)|(?:ua|a[uw])[bv]|[ao]v|w[bv]|uv)\-pahawhhmong|hah_(?:alefMaksura|[jm]eem|yeh)\-ar|a(?:(?:verticalstroke|descender|vykacomb|bashkir|stroke|vyka|hook)\-cy|f(?:dagesh|rafe)?\-hb|\-(?:ko|cy))|(?:haphSogdian|aph)\-syriac|(?:ako(?:comb)?\-glagolit|h(?:ei(?:(?:Akhmim|Bohair)ic)?|i(?:ro)?)\-copt|greenland|oppaArcha|ad\-manda|a(?:pa|i)\-copt|si\-copt)ic|af_alefMaksura\-ar|(?:waet|un)\-bamum\.phaseD|(?:peux|euae|uop|uet)\-bamum\.phaseE|yee\-bamum\.phase[DF]|u(?:om|q)\-bamum\.phaseD|(?:[pu]oq|a(?:fa|q))\-bamum\.phaseA|(?:(?:Chillu\-malaya|a\-malaya|(?:af|po)\-ad)la|o(?:qndon|ghom|vuu)\-bamu|ha(?:\-(?:(?:malaya|ad)l|ch)|(?:High|Low)\-th)a|(?:x?aHigh\-t|Final\-c|x?aLow\-t)ha|a\-cha)m|eux\-bamum\.phaseE|(?:yathosBase\-gree|doubleStruc|palatalhoo|hoo)k|u(?:t\-bamum\.phase[CE]|\-bamum\.phase[DF])|aa\-bamum\.phaseC|pa\-bamum\.phaseF|asra(?:tan)?\-ar\.isol|am\-bamum\.phaseB|(?:bold)?script\-math|bolditalic\-math|(?:har\-(?:old)?|an\-(?:old)?)georgian|(?:oto\-han)?\.circled|night(?:Black|White)Chess|(?:a(?:f_(?:mee|la)m|sra)\-ar\.med|h(?:o(?:Rakhang|Kh(?:wai|uat|on)|Khai|mut)\-tha|ha\-gurmukh|a\-(?:gu(?:jarat|rmukh)|kayahl))|e(?:heh\-ar\.med|t\-y|\-y)|hah\-ar\.med|eRadical\-y|a\-gu(?:jarat|rmukh)|af\-ar\.med|a\-kayahl|oKai\-tha|(?:u(?:op|t)?|o)\-y|a\-(?:bug|y)|(?:u(?:r|o)?|o|a|e)x\-y|u[or]\-y)i|o(?:\-(?:bamum\.phase[EF]|ko)|_ko\-kata\.box)|a\-bamum\.phaseF|(?:m(?:squar|cub)ed|(?:uruzeir|oop)o|uroone|a(?:rori|ir)i|aratto|o(?:runa|hm)|yurii|eesu|cal|pa|hz|g|l|t|w|m|v)Square|[ao]b\-pahawhhmong|[eu]b\-pahawhhmong|(?:e(?:pho\-sgawkare|ycapTe|lvi)|\.pare|caro)n|a\-kata\.(?:circled|half)|o\-kata\.(?:circled|half)|[eu]\-k(?:ata\.(?:circled|half)|o)|a(?:Aligali|Manchu|Todo|Sibe)\-mong|(?:aaf\-samarit|he\-elbas|e\-(?:elbas|avest)|h?a\-sh)an|(?:x(?:w(?:aa|i)|w?ee|aa|[iou])|e(?:nat|e)|w(?:aa?|[ei])|y(?:ee?|[iou]|a)|x(?:wa|w?e|a)|wee|yaa|urt|aa?|oa|u|o)\-ethiopic|(?:eheh\-ar\.is|hah\-ar\.is|a(?:(?:ppa|i)Symb|f\-ar\.is))ol|aa?\-canadian|(?:asmall|e(?:small)?|[aou])\-hira|a(?:(?:sra(?:tan)?|f_(?:mee|la)m)\-ar|ppa)|af_k?hah\-ar|af_jeem\-ar|af_alef\-ar|(?:(?:omi(?:dz?|[lnstz]))?j|omid)e\-cy|oroniscomb|e\-ethiopic|yee\-bamum|af_yeh\-ar|eux\-bamum|(?:line|dot)below|ha\-telugu|bold\-math|pa\-bamum|e(?:t\-bamum|n\-bamum|heh\-ar|y(?:board)?)|a\-telugu|u\-bamum|o(?:\-bamum|ronis|ppa)|a\-bamum|oppa\-cy|(?:a\-tami|\.ful)l|aSquare|(?:ha\-(?:be|mo)|a\-(?:be|mo))ng|stroke|hah\-ar|a\-kata|o\-kata|[eu]\-kata|turned|af\-ar|si\-cy|(?:o[pt]|up|a[pt]|ep)\-(?:yi|ko)|comb|mod)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bg(?:(?:reater(?:Than(?:Above(?:SlantedEqualAboveLessThanAboveSlanted|LessThanAboveDoubleLine|SimilarOr)|ClosedByCurveAboveSlanted)E|overe)qua|(?:ClefOttava(?:Bass|Alt)a|r(?:aceNote(?:No)?Slash|egorian[CF]Clef)|lissando(?:Down|Up)|Clef)\-musica|(?:roupSeparatorContr|hain\-ar\.is|(?:ueh|af)\-ar\.is)o|scriptcrossedtai|lottalstopsmal|old\-alchemica|um\-alchemica|r(?:eater(?:sma|\.fu)|ave\.fu)l|i(?:mels|rlsS)ymbo|\.ful)l|(?:reaterThan(?:(?:Above(?:DoubleLineEqual|Similar)Abov|Besid)e|Overlapping)LessTh|lottalstop\-canadi|(?:h(?:ee?|[iu]|a|o)|wa|aa?|wu|u|i|o)Carrier\-canadi|raveFinal\-canadi|(?:han\-(?:old)?georg|a(?:n\-(?:old)?georg|g\-shav))i|(?:h(?:amma|e)|je)\-elbas|uardsm|ha\-sh|a\-sh)an|(?:r(?:e(?:ater(?:ThanOrSlantedEqualToWithDotAboveLef|thando)|enHear)|eaterorequivalen|owingHear|adien)|h(?:ain(?:_[jm]eem\-ar\.in|\-ar\.in)i|os)|uil(?:lemet|singl)righ|ammasubscrip|uil(?:lemet|singl)lef|(?:comma|dot)accen|(?:ueh|af)\-ar\.ini)t|(?:r(?:e(?:aterThan(?:Or(?:SlantedEqualToWithDotInsid|Approximat)|With(?:QuestionMarkAbov|CircleInsid)|AndNotApproximat)|enAppl)|inningfacewithonelargeandoneey)|(?:lottalinverted)?strok|(?:(?:uramut|ar)on|hz)Squar|rimacingFac|i(?:r(?:udaaSquar|affeFac)|(?:nii|ga)Squar)|(?:uramu|pa|al|y)Squar|anmaSquar|ha\-osag|ameDi|singl|brev|acut)e|r(?:eater(?:Than(?:OrSlantedEqualTo(?:WithDotAbove)?|ClosedByCurve)|equal)?|inningFace|ave)|(?:reaterThanAndSingleLineNotEqualT|reaterthanbutnotequivalentt|reaterthanbutnotequalt|u?\-bopomof|n\-bopomof|h(?:\-bopomof|a\-la)|(?:g?wi|g?we|gwa|g[aeiou]|wa|y[aeiou]|um|a[gn])\-k|(?:g(?:it|u[pt]|ot|e[pt]|a[pt])|gop|ap|it|u[pt]|at|ip|op|ot)\-k|im\-k)o|(?:h(?:a(?:in(?:_(?:meem_(?:alefMaksura|meem|yeh)\-ar\.|alefMaksura\-ar\.|yeh\-ar\.)f|\-ar\.f)in|a\-chakm|\-(?:kannad|oriy|dev))|ha\-dev)|(?:lottalstop|apfiller|rave|ga|a)\-dev|(?:ueh|af)\-ar\.fin|h?a\-sinhal|la\-lepch|aa\-chakm|a\-kannad|a\-osmany|a\-(?:lepch|kat)|a\-oriy|orill|[aiou]\-hir)a|(?:rinning(?:CatFaceWithSmiling|FaceWithS(?:miling|tar))Ey|lov)es|(?:(?:ter(?:YigMgo(?:Um(?:GterTsheg|RnamBcad)Ma|TruncatedA)|tsheg)|ru(?:Med|Can)Rgyings|ugRtagsGyon|ugRtagsGyas|aSub)\-tib|ha(?:Sub)?\-tib|ay\-deser|a\-tib)et|e(?:(?:min(?:Vowellength|ation)comb|e)\-ethiopic|m(?:consonantmodcomb\-adlam|in(?:ation\-adlam|i))|(?:ometricallyequivalentt|[pt]\-k)o|ometricproportion|e?Carrier\-canadian|ometricallyequal|mination\-mandaic|r(?:shayim(?:accent)?|esh(?:muqdam|accent)?)\-hb|n(?:i(?:tive\-myanmar|e)|[ghj]?\-ko)|strokehook\-cy|ar(?:With(?:Handles|outHub))?|descender\-cy|(?:pRadical|x|p|t)\-yi|rmanpenny|\-(?:e(?:thiopic|lbasan)|c(?:herokee|y)|avestan|hira|k(?:ata|o)|yi)|rmandbls|tamark|(?:(?:u[bs]|b)s|u?l[bghmpst]|un[ghj]|u?g[gs]|o(?:[bs]s|l[bghmpst]|n[ghj]|g[gs]|[cdhjkpt])|u[bs]|u?l|un|u?g|o(?:[bs]|m|l|n|g)?|u[cdhjkmpt]|ss|[dmsu]|b|[chjk])\-ko|mStone)|(?:lottalstopreversedsuperio|(?:Bold)?\-fraktu|olfe)r|(?:obliquestroke\-phaistosDis|(?:auntlet|rater)\-phaistosDis|(?:amal(?:garshuni)?|hamalPersian)\-syria)c|r(?:eaterThanAboveRightArrow|aduationCap)|(?:a(?:ngia(?:Cryptogrammic|Old)?\-c|mma\-c)op|lagoli(?:comb)?\-glagoli)tic|h(?:eu(?:ae(?:(?:gheu|r)ae\-bamum\.phaseA|\-bamum\.phase[DE])|ghe(?:uaem|n)\-bamum\.phaseB)|a(?:ManchuAligali\-mong|(?:rae|p)\-bamum\.phaseC|a\-bamum\.phaseD|\-(?:t(?:ailaing|elugu)|beng))|(?:aamae|e(?:u[nx]|t))\-bamum\.phaseE|om\-bamum\.phaseE)|(?:(?:lottalstop(?:strokerevers|invert)|\.circl)e|lottalstop(?:reversed)?mo|r(?:e(?:aterThan\.circle|enSala)|avelowmo))d|bieefon\-bamum\.phaseA|hain(?:_(?:alefMaksura|[jm]eem|yeh))?\-ar|(?:af(?:Invertedstroke|Threedots|Ring)\-|afTwodotsbelow\-|hainDotbelow\-|turnedinsul|(?:lowingS|ui)t|insul)ar|(?:hwa\-easternpwokare|amma(?:mod)?\-lati|\.pare|(?:mac|ca)ro)n|lottalstop(?:reversed|stroke)?|(?:(?:ra(?:ve(?:acutegrave|macron|dotted|below|tone)?|phemejoiner)|bridgeabove)com|imel(?:dagesh)?\-h)b|bayi\-bamum\.phaseC|be(?:ux|t)\-bamum\.phaseE|(?:r(?:eater(?:equal)?orles|ape)|lobeMeridian)s|(?:ammadoubleStruc|doubleStruc|palatalhoo|r(?:amma\-gree|eenBoo)|lassOfMil|hoo)k|boldscript\-math|bolditalic\-math|he(?:middlehook|stroke|upturn)\-cy|aman\-samaritan|obliquestroke|(?:ba(?:kurunen)?\-n|(?:(?:(?:g(?:y(?:eo|ae|[iou])|oe|e[ou]|ae)|g?weo|gwae|wae|y(?:eo|ae)|ae|oe)[bs]|g(?:y(?:e[bs]|a[bs])|i[bs]|u[bs]|o[bs]|e[bs]|a[bs])|g?wi[bs]|g?we[bs]|gwa[bs]|wa[bs]|y(?:[iou][bs]|e[bs]|a[bs])|u[bs]|a[bs]|i[bs]|os)s|(?:g(?:y(?:eo|ae|[iou])|oe|e[ou]|ae)|g?weo|gwae|g(?:y[ae]|i|u|o|e|a)|g?wi|g?we|gwa|wae|y(?:eo|ae)|wa|y[aeiou]|ae|oe|u|i)l[bghmpst]|(?:g(?:y(?:eo|ae|[iou])|oe|e[ou]|ae)|g?weo|gwae|g(?:y[ae]|i|u|o|e|a)|g?wi|g?we|gwa|wae|y(?:eo|ae)|wa|y[aeiou]|ae|oe|u|o)n[ghj]|(?:g(?:y(?:eo|ae|[iou])|oe|e[ou]|ae)|g?weo|gwae|g(?:y[ae]|i|u|o|e|a)|g?wi|g?we|gwa|wae|y(?:eo|ae)|wa|y[aeiou]|ae|oe|o)g[gs]|(?:g(?:y(?:eo|ae|[iou])|oe|e[ou]|ae)|g?weo|gwae|wae|y(?:eo|ae)|ae|oe)[cdhjkmpt]|g(?:y(?:e[cdhjkmpt]|a[cdhjkmpt])|i[cdhjkmp]|u[cdhjkm]|o[cdhjkm]|e[cdhjkm]|a[cdhjkm])|g?wi[cdhjkmpt]|g?we[cdhjkmpt]|gwa[cdhjkmpt]|wa[cdhjkmpt]|y(?:[iou][cdhjkmpt]|e[cdhjkmpt]|a[cdhjkmpt])|u(?:g[gs]|[cdhjk])|a(?:l[bghmpst]|n[hj]|g[gs]|[dhjk])|i(?:n[ghj]|g[gs]|[cdhjk])|o(?:bs|l[bghmpst]|[cdhjkm]))\-|(?:(?:g(?:y(?:eo|ae|[iou])|oe|e[ou]|ae)|g?weo|gwae|wae|y(?:eo|ae)|ae|oe)[bs]|g(?:y(?:e[bs]|a[bs])|i[bs]|u[bs]|o[bs]|e[bs]|a[bs])|g?wi[bs]|g?we[bs]|gwa[bs]|wa[bs]|y(?:[iou][bs]|e[bs]|a[bs])|u[bs]|a[bs]|i[bs]|os)\-|(?:g(?:y(?:eo|ae|[iou])|oe|e[ou]|ae)|g?weo|gwae|g(?:y[ae]|i|u|o|e|a)|g?wi|g?we|gwa|wae|y(?:eo|ae)|wa|y[aeiou]|ae|oe|u|i)l\-|(?:g(?:y(?:eo|ae|[iou])|oe|e[ou]|ae)|g?weo|gwae|g(?:y[ae]|i|u|o|e|a)|g?wi|g?we|gwa|wae|y(?:eo|ae)|wa|y[aeiou]|ae|oe|u|o)n\-|(?:g(?:y(?:eo|ae|[iou])|oe|e[ou]|ae)|g?weo|gwae|g(?:y[ae]|i|u|o|e|a)|g?wi|g?we|gwa|wae|y(?:eo|ae)|wa|y[aeiou]|ae|oe|o)g\-|(?:g(?:y(?:eo|ae|[iou])|oe|e[ou]|ae)|g?weo|gwae|wae|y(?:eo|ae)|ae|oe)\-|gy[ae]\-|a(?:ng|l|c|m)\-|ug\-|i[gn]\-|o[bl]\-)ko|(?:g?wee|gwaa|g?wi|g?we|gwa|g(?:ee|aa)|waa|y(?:ee|aa)|g[aeiou]|wa|y[aeiou]|aa?|oa|u|i|o)\-ethiopic|(?:(?:guo|a)Radical\-y|(?:gop|ot)Radical\-y|h(?:ha\-gurmukh|a(?:in\-ar\.med|\-gu(?:jarat|rmukh)))|(?:ueh|af)\-ar\.med|a\-gu(?:jarat|rmukh)|a\-(?:kayahl|bug|y)|a\-khamt|(?:g(?:i(?:e[px]|x)|u(?:r?x|o[ptx])|ox|ex|ax)|ur?x|uo[ptx]|i(?:e[ptx]|x)|ax|ox)\-y|u(?:aran|\-y)|(?:g(?:ie|u[or])|ur|uo|ie)\-y|(?:g(?:it|u[pt]|ot|e[pt]|a[pt])|gop|ap|it|u[pt]|at|ip|op|ot)\-y|g[aeiou]\-y|i\-y|o\-y)i|h?a\-malayalam|a(?:(?:a(?:Sibe|Todo)|Sibe|Todo)\-mo|\-tailai|\-(?:be|mo))ng|italic\-math|(?:reatSa\-t|Final\-c|ha\-c)ham|c(?:ircumflex|omb)|leichStark|h?a\-myanmar|[gh]e\-avestan|a\-cherokee|[iouv]\-cherokee|anda\-beng|bold\-math|a\-telugu|(?:be|a)\-adlam|amma(?:mod)?|(?:had\-ar|a\-cha|im\-ar)m|turned|script|(?:ueh|af)\-ar|oa(?:lNe)?t|[iou]\-k(?:ata|o)|je\-cy|a\-ko|irl|mod)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bn(?:(?:egateddoubleverticalbardoublerightturnstil|o(?:rtheastPointingAirplan|bliquestrok|t(?:t(?:oSquar|ru)|ePag))|ieuna?\-ko\.circl|a(?:(?:useatedF|rrownbsp)ac|postroph|meBadg|\-osag|cut)|middletild|e(?:wMoon|utral|rd)Fac|(?:ano|f)Squar|extpag|aSquar|[msvw]Squar|eckti|bspac|eptun|grav|tild)e|(?:eitherapproximatelynoractuallyequalt|either(?:greater|less)thannorequivalentt|eitherasu(?:per|b)setofnorequalt|o(?:tsquare(?:original|image)oforequalt|tnormalsubgroupoforequalt|rmalsubgroupoforequalt|ta(?:symptotically|lmost)equalt|tequivalentt|Nok\-la)|(?:iggahita|yo(?:Vowel|Nyung))\-la|gg?\-bopomof|n?\-bopomof|(?:goNgu|na)\-la|ine\-la|(?:y(?:e[ht]?|am|[iu])|w[aei]|en)\-k|ya\-la|(?:y(?:i[pt]|op)|y(?:u[pt]|ot)|ep|ap|it|ot|ip|op)\-k|a[eh]\-k)o|o(?:rth(?:East(?:A(?:rrowCrossingNor|ndSou)thWest|Arrow(?:Crossing|And)SouthEast|Feathered(?:Heavy)?Black|SansSerif|Double|Heavy|White|Black)|West(?:A(?:rrow(?:Crossing|And)Nor|ndSou)thEast|SansSerif|ToLongbar|Double|White|Black))Arrow|t(?:(?:c(?:hed(?:Righ|Lef)tSemicircleWithThreeDot|ontain)|greaternorles|precede)s|ePad)|(?:(?:MobilePhon|minalshap|Bicycl)e|Pedestrian)s|\-ko|se)|(?:Ary(?:Square(?:Intersect|Un)ion|(?:Circled)?Times|CircledPlus|CircledDot)Operato|(?:o(?:rth(?:Ea|We)stTriangleArrowToB|tsimil)|AryWhiteVerticalB|(?:(?:ny?|y|g)?a|ine)\-myanm)a|o(?:tebookDecorativeCov|rthWestArrowToCorn|\-khm)e|oon(?:(?:T(?:hreedots|ah)|ghunna|V)?above|(?:Twodots|Dot)below|African|Ring)\-a|Bold\-fraktu|arylogicalo|(?:(?:i(?:kahit|ne)|[gny]o)\-khm|descend|ewspap)e|in(?:e(?:inf|sup)|f)erio|\-fraktu|eute)r|axianfivehundred\-ancientGreek|(?:o(?:on(?:_(?:[jm]eem_alefMaksura|hah_(?:alefMaksura|yeh)|alefMaksura|jeem_(?:meem|hah)|(?:meem_y|jeem_y|r)eh|meem|(?:noo|zai)n|yeh)|ghunna)?\-ar\.fin|mism)|(?:y(?:etthyoomtarol|indo)|ga|a)?\-lepch|ine(?:tyArchaic|Archaic|lith)\-sinhal|(?:ndd|yj)a\-sinhal|goeh\-ar\.fin|(?:ine(?:comb)?|acomb|(?:nn?|y|g)?a)\-dev|(?:ng|d|g)a\-sinhal|(?:yeh|g)\-ar\.fin|(?:ine|[gy]?a)\-kannad|ine\-osmany|[ny]?a\-sinhal|(?:[gny]?aa\-chak|ine(?:\-chak|_com))m|na\-kannad|(?:ine|ya)\-lepch|(?:ine|a)\-oriy|[gny]a\-oriy|air)a|(?:(?:eitherlessthannorgreatert|[ny]?a\-s)h|equdaa(?:comb)?\-samarit|(?:(?:w(?:a(?:a(?:WestCree|Naskapi)|WestCree)|(?:oo?|ii?)Ojibway|eWestCree)|[aei]Blackfoot|o(?:Blackfoot|y)|(?:ee?|g|a|i|o)Carrier|Ojibway|ng(?:oo|ii|aa)|g(?:aa?i|ii|oo)|a(?:ai|y)|ii)\-canad|ar(?:Mod\-|\-(?:old)?)georg|(?:gaa?|aa?|i|e|o)\-canad|(?:nga|w[aei]|g[io]?)?\-canad|(?:ng(?:o|i)?|w(?:oo?|ii|aa)|oo|h)\-canad|ine\-pers|[gy]i\-nub)i|u(?:Carrier\-canadi|n(?:avuth\-canadi|\-s(?:amarit|havi)))|in(?:ojiten\-h|e\-(?:rom|sh))|(?:g[vy]?|y|n)?e\-avest)an|(?:yirmkparaqmeun|g(?:gu(?:(?:aennya)?m|eet|on)|k(?:uemaemba|aq)|aq)|d(?:eu(?:aeree|t)|ombu)|(?:s(?:uotng)?o|zeu)m|teungba|ansanaq|seuaen|tumbit|s(?:haq|un|a)|dida|t(?:aa|en))\-bamum\.phaseC|(?:yitmongkeuaeq|daanggeuaet|daleeraewa|g(?:kuenzeum|angu)|gkuemfon|zunmeut|tap(?:nt|mf)aa|k(?:aarae|indi)|toqpen|zamfon|aamfon)\-bamum\.phaseA|(?:g(?:g(?:u(?:aeshaenyam|rae|p)|eeee)|k(?:eu(?:aem|x)|aami|u[mp])|geuaet|eureut|uaet|oq)|d(?:aasoftness|ia?q)|daamyhouse|yi(?:cleaver|between)|g(?:ge)?uae|shuop|shue|gka|gop|dun|tum|z[au]q|kom|ae)\-bamum\.phaseE|(?:i(?:ne(?:\.(?:(?:sansSerifB|b)lackC|sansSerifC|doubleC|c)|\-han\.c)|ght\-han\.c)|(?:ame\-han)?\.c)ircled|(?:e(?:gativeAcknowledg|wlin)eContro|(?:o(?:(?:OneUnderEighteen|Smoking)Symb|nPotableWaterSymb|on(?:ghunna)?\-ar\.is)|(?:goeh|yeh|g)\-ar\.is|ewMoonSymb)o|(?:ote(?:headBlack|dbl)|ebenstimme|atural(?:Down|Up))\-musica|ot(?:greater|less)norequa|(?:i(?:tre|ght)\-alchem|otident)ica|(?:atural|ote)\-musica|ot(?:paralle|equa)|(?:ine)?\.ful|cur)l|(?:AryUnionOperatorWithPlu|ationalshape|ightStar)s|(?:tieesheuoq|yinteum|dunjaa|yaemae|s(?:huet|en))\-bamum\.phaseB|g(?:g(?:(?:uoqlarge|eumbu)\-bamum\.phaseB|aam\-bamum\.phase[BD]|uoq\-bamum\.phaseB)|kindimvop\-bamum\.phaseB|om\-bamum\.phase[BC])|(?:AryUnionOperatorWithDo|(?:gasbzung(?:sgorrtags|nyizla)|yi(?:s(?:tshegshad|Tsheg|shad)|ZlaNaaDa)|[gny]aSub|aSub)\-tibe|o(?:on(?:_(?:jeem_(?:meem|hah)|h(?:ah(?:_meem)?|eh)|meem|khah|jeem)\-ar\.in|\-ar\.in)i|rBu(?:(?:Bzhi|Gsum)Khyil|NyisKhyil)?\-tibe|tsu(?:per|b)se|telemen)|goeh\-ar\.ini|ewline(?:Righ|Lef)|(?:yeh|g)\-ar\.ini|(?:comma|dot)accen|(?:ine|[gny]?a)\-tibe|hooklef)t|o(?:r(?:th(?:East(?:Triangle)?|West(?:Triangle)?)Arrow|malsubgroupof)?|on(?:_(?:alefMaksura|meem|khah|jeem|yeh|hah)|ghunna)?\-ar|tnormalsubgroupof|t(?:greater|e(?:book)?|less)|Entry)|(?:o(?:r(?:th(?:Ea|We)stArrowWithHoo|dicMar)|tCheckmar)|doubleStruc|palatalhoo|ationalPar)k|j(?:e(?:e(?:e(?:poch\-bamum\.phaseE|e\-bamum\.phaseC)|\-bamum\.phaseE)|u(?:(?:aem|t)\-bamum\.phaseD|x\-bamum\.phase[CE])|\-(?:elbasan|cy)|e\-bamum)|aemli\-bamum\.phaseE|a(?:em\-bamum\.phase[CF]|m\-bamum\.phase[AC])|u(?:eq\-bamum\.phase[CD]|ae\-bamum\.phaseF)|(?:iee|ap)\-bamum\.phaseD|i\-bamum\.phaseD|aemli\-bamum|aem\-bamum|uae\-bamum|(?:y(?:rx|[ptx])|u(?:[or]x|[px])|yr?|u[or]?|o[ptx]|o)\-yi|i(?:e[ptx]|e|[ptx])?\-yi)?|(?:(?:ga(?:Manchu)?|na)Aligali\-mo|(?:t[hs]au|chau|qig|kau|tuj|lau|au)\-pahawhhmo|i(?:ne\-(?:pahawhh)?|(?:aTodo|rugu)\-)mo|legrightlo|(?:ine|[ny]a)\-tailai|onforki|[gy]?a\-be|a\-mo)ng|(?:g(?:g(?:aamae|waen|eux|uom|ap)|k(?:eu(?:aeq|ri)|iee|yee|un|ap))|s(?:iee[pt]|hut|um)|d(?:e(?:ux|e)|on)|teum|shee|yue)\-bamum\.phaseD|(?:ashi(?:comb)?\-glagoli|i\-cop)tic|(?:a(?:s(?:alizationcomb\-n|\-)|woloso\-n|t\-|m\-|c\-|\-n|n\-)|(?:i(?:eun(?:(?:Pansios|Tikeut|Hieuh|Sios)Compa|(?:Pansios|Kiyeok|Tikeut|Hieuh|Sios)?Jong|ThieuthJong|C(?:h(?:ieuchJong|o)|(?:ieucC)?ompa|ieucJong|ieucCho)|(?:Kiyeok|Pieup)Cho|(?:Tikeut|Hieuh|Sios)Cho|RieulJong|a?Paren)|gs|n[ghj]|[cdhjm])|(?:y(?:ae?|[eou])|w[aei]|eu|ae)n[ghj]|(?:w(?:eo|ae)|yeo|eo)(?:n[ghj]|[cdhjkmpt])|(?:y(?:ae?|[eiou])|w(?:eo|ae)|yeo|w[aei]|eu?|ae?|eo|i)l[bghmpst]|(?:y(?:a(?:e[bs]|[bs])|u[bs]|o[bs]|e[bs])|(?:w(?:eo|ae)|yeo|eo)[bs]|w(?:i[bs]|e[bs]|a[bs])|e(?:u[bs]|s)|a(?:e[bs]|b)|oe[bs]|i[bs])s|(?:y(?:ae?|[eiou])|w(?:eo|ae)|yeo|w[aei]|eu|ae?|eo|oe?)g[gs]|y(?:i(?:bs|n[ghj]|[dhjkm])|a(?:e[cdhjkpt]|[cdhjkpt])|u[cdhjkm]|o[cdhjkm]|e[cdjkmp])|o(?:e(?:n[ghj]|[cdhjkmpt])|e?l[bghmpst]|bs|n[ghj]|ss|[cdhjk])|w(?:i[cdhjkmpt]|e[cdhjkmpt]|a[cdhjkmpt])|e(?:u[cdhjkmp]|bs|n[ghj]|g[gs]|[dhjkmt])|a(?:e[cdhjkmpt]|ss|n[ghj]|[djk]))\-|yawoloso\-n|y(?:i(?:ss?|c|b|n)\-|a(?:em?\-|\-n))|i(?:n(?:e\-n|\-)|(?:gg?|k)\-)|(?:y(?:ae?|[eou])|w[aei]|eu|ae)n\-|(?:w(?:eo|ae)|yeo|eo)n?\-|(?:y(?:ae?|[eiou])|w(?:eo|ae)|yeo|w[aei]|eu?|ae?|eo|i)l\-|(?:y(?:a(?:e[bs]|[bs])|u[bs]|o[bs]|e[bs])|(?:w(?:eo|ae)|yeo|eo)[bs]|w(?:i[bs]|e[bs]|a[bs])|e(?:u[bs]|s)|a(?:e[bs]|b)|oe[bs]|i[bs])\-|(?:y(?:ae?|[eiou])|w(?:eo|ae)|yeo|w[aei]|eu|ae?|eo|oe?)g\-|e(?:ut?|c|b|g)\-|o(?:en?|e?l|b|m|n|s)\-|\-n)ko|u(?:ll(?:Notehead\-musica|Contro)l|\-(?:bamum\.phase[DF]|k(?:ata\.(?:circled|half)|o)|cherokee|ethiopic|hira)|m(?:ber(?:sign(?:\.fu|sma)ll|mark\-ar|\-(?:tamil|ar))|er(?:al\-greek|o)|\-ko)|n(?:(?:hafukha|dagesh)\-hb|\-(?:adlam|hb))|(?:kta\-(?:kannad|lepch|oriy|dev)|un\-osmany|small\-kat)a|tAndBolt|kta\-beng|n\-syriac|e\-cham|(?:ss|bs|l[bghmpst]|g[gs]|n[ghj]|[bgkls]|[cdhj])\-ko|[npt]\-ko)|gkwaen\-bamum\.phaseF|shiee\-bamum\.phase[AE]|(?:(?:na\-easternpwok|ame\-han\.p|ine(?:\-han)?\.p|\.p)are|o(?:nbreakinghyphe|EntrySig)|(?:a(?:ry(?:intersect|un)i|Medial\-m)|ga\-m|car)o)n|(?:(?:n(?:Chillu|na)|Chillu|na|ya|ga|a)\-malaya|ine\-(?:malaya|ad))lam|(?:ggen|aq)\-bamum\.phase[AC]|sha\-bamum\.phase[AF]|y(?:et\-bamum\.phase[AD]|i\-bamum\.phase[ADF]|o\-ko|a\-ko)|tap\-bamum\.phase[AE]|i(?:ka\-bamum\.phaseA|ne\-(?:hangzhou|t(?:elugu|ha[im])|cham|ar)|talic\-math)|ottildeabovecomb|(?:tee|i)\-bamum\.phase[DF]|(?:(?:retroflex|left)hookmo|arylogicalan|orth(?:Ea|We)stBu|ine_perio|mo)d|orth(?:East(?:Vine)?|West(?:Vine)?)Leaf|dam\-bamum\.phase[CD]|(?:da|gg)a\-bamum\.phaseF|uae\-bamum\.phaseF|(?:o(?:on(?:_(?:meem|heh)\-ar\.m|\-ar\.m)ed|N(?:en|u)\-tha|\-y)|u(?:kta\-gu(?:jarat|rmukh)|[pt]\-y|\-y)|(?:(?:zup|bie)Radical|y(?:ipRadical|o(?:pRadical|x)|[iu]x)|b(?:i(?:e[px]|[ptx])|o[ptx])|g(?:uo[tx]|e[px]|o[tx]|a[ptx])|(?:zie|yuo|gie|ro)[px]|(?:zu[or]|d(?:ur|ie)|(?:r[uy]|zy|b[uy])r|ur)x|(?:yie|ba)[ptx]|r(?:e[px]|a[ptx])|z(?:o[px]|ux|ex|a[ptx]|i[ptx])|d(?:u[ptx]|e[px]|o[px]|a[tx]|i[ptx])|i(?:e[px]|x)|u(?:o[px]|x)|(?:r[uy]|zy|b[uy])[ptx]|ox)\-y|ikhahit\-tha|goeh\-ar\.med|(?:ine|[gny]?a)\-gu(?:jarat|rmukh)|i(?:ne\-kayahl|\-y)|(?:yeh|g)\-ar\.med|[gy]a\-kayahl|goNgu\-tha|a\-kayahl|y?a\-khamt|(?:yc?|gk|r)a\-bug|ga\-bug|(?:d(?:ap?|e)|g(?:op?|e|a)|[rz]a|y[iou]|e)\-y|a\-(?:bug|y)|(?:y(?:i[pt]|op)|y(?:u[pt]|ot)|ep|ap|it|ot|ip|op)\-y|(?:ret?|z(?:up?|e|i)|d(?:ot?|u|i)|b(?:ie?|o)|guo|zie|yuo|gie|zu[or]|d(?:ur|ie)|(?:r[uy]|zy|b[uy])r|yie|ex|ax|ie|ro|uo|r[uy]|zy|b[uy]|ur|ba)\-y)i|tuu\-bamum\.phaseD|yam\-bamum\.phaseD|dap\-bamum\.phase[CE]|ggu\-bamum\.phaseC|(?:bold)?script\-math|bolditalic\-math|en\-bamum\.phaseA|(?:circumflex|line|dot)below|(?:(?:g(?:(?:Sign)?Final|ue)|Final|h(?:ja|ue))\-c|gaFinal\-t|ineHora\-t|ya\-t|ga\-c|ga\-t|ha\-c|a\-t)ham|za\-bamum\.phaseC|g?a\-bamum\.phaseE|(?:inety|y(?:aa?|[eiou])|i(?:ne)?|y(?:[ow]a|ee)|wa|aa|ee|oa?)\-ethiopic|a\-kata\.(?:circled|half)|o\-kata\.(?:circled|half)|[ei]\-k(?:ata\.(?:circled|half)|o)|hookretroflex|gkwaen\-bamum|(?:ah|v)\-cherokee|(?:crossedta|ine\-tam|[ny]a\-tam)il|a\-cherokee|[eio]\-cherokee|[ae]\-ethiopic|\-kata\.half|de\-elbasan|sha\-bamum|tuu\-bamum|(?:tee|i)\-bamum|u(?:m(?:bersign)?|\-(?:bamum|kata))?|(?:da|gg)a\-bamum|uae\-bamum|ailPolish|bold\-math|[gny]?a\-telugu|nna\-tamil|[ae]\-elbasan|yi\-bamum|g?a\-bamum|(?:ine|na)\-beng|[hy]a\-adlam|g?a\-tamil|goeh\-ar|oPiracy|(?:yeh|g)\-ar|a\-kata|o\-kata|[ei]\-kata|(?:a\-cha|ow\-ar)m|(?:e|a|i|o)?\-hira|\-kata|comb|a(?:\-ko|nd)|ine)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bc(?:(?:ircle(?:DividedByHorizontalBarAndTopHalfDividedByVertic|WithHorizont)alBa|(?:(?:ompleted|a)\-myanm|ontainsoverb|lickalveol|uberoot\-|alend)a|(?:Bold)?\-fraktu|urlyo|ba)r|(?:o(?:n(?:tains(?:verticalbaratendof|long)horizontalstrok|gruentWithDotAbov|venienceStor|f(?:ound|us)edFac)|(?:(?:rporation|verkg)?Squa|unterbo)r|okedRic|wFac)|(?:ircledInformationSour|urryAndRi)c|(?:rosshatchFill|upOnBlack|m(?:squar|cub)ed|al|[cdm])Squar|lamshellMobilePhon|urrencyExchang|cedillaacut|a(?:rouselHors|cut|ndl)|(?:ryingCat|lown)Fac|(?:urlingSt|ycl)on|entigrad|ryingFac|strok)e|(?:lo(?:ckwiseRightAndLeftSemicircleArrow|sedIntersectionWithSerif)|ircledCrossFormeeWith(?:Four|Two)Dot|a(?:rdIndexDivider|ctu)|linkingBeerMug|o(?:n(?:stantineCros|trolKnob)|cktailGlas|lonequal)|linkingGlasse|rossed(?:Sword|Flag)|elticCros|ustom|ere)s|(?:losedUnionWithSerifsAndSmashProduc|ircleT(?:woHorizontal|ow)StrokesRigh|(?:urvedStemParagraphSignOrnam|dotacc|ircusT)en|(?:a(?:ret(?:DzudRtags(?:BzhiMi|MeLon)gCan|yigmgophurshadma)|ngTeU|Sub)\-tib|a\-tib|rick)e|o(?:rnerbracket(?:righ|lef)t\.ver|m(?:ma(?:\.full|\-han)\.ver|plemen|e)|upleHear|lon\.ver|p(?:yrigh|roduc))|(?:aretinsertionpoi|roissa)n|lub(?:White|Black)Sui|reverseddo|utOfMea|oconu|arro)t|o(?:(?:m(?:bining(?:(?:S(?:prechgesangStem|napPizzicato|t(?:accat(?:issim)?o|em)|mear)|AugmentationDot|(?:(?:Marcato|Accent)Stacca|Tenu)to|Harmonic|Tremolo[1-3]|Do(?:wnBow|it)|Flag[1-5]|UpBow|Bend|Flip|Rip)\-|(?:TripleTongu|DoubleTongu|Lour)e\-|(?:Marcato|Accent)\-)|monTime\-)mus|pper(?:Antimoniat|Or)e\-alchem|da\-mus)ical|n(?:joiningmacron(?:below)?comb|t(?:inuousunderlinesymbo|ainsasmemberSmal|ourintegra)l|fettiBall)|mma(?:reversedabove|turnedabove|a(?:boverigh|ccen)t|above)comb|(?:(?:mpositions|llisionS)ymbo|lon\.ful|lonsmal)l|uchAndLamp|mma\-arm|eng\-ko|okie|\-ko|at)|(?:o(?:ntainsasnormalsubgrouporequalt|rrespondst|Cok\-la|p\-k|t\-k)|lo(?:sedSu(?:per|b)setOrEqualT|udTornad)|\-bopomof|ruzeir|(?:w[ae]|i|u)\-k|il\-k|a[nt]\-k|(?:i[pt]|u[pt]|ap)\-k|ep\-k|e\-k)o|(?:a(?:rystianfivehundred\-ancientGree|psloc)|yrenaictwodrachmas\-ancientGree|lockFace(?:(?:El|S)even|(?:T(?:welv|hre)|Fiv)e|Eight|Four|(?:Ni|O)ne|Six|T(?:en|wo))Ocloc|ityscapeAtDus|doubleStruc|Palatalhoo|losedBoo|rossMar)k|(?:o(?:lon(?:(?:S(?:kewed(?:leftSupra|rightSub)|u(?:pra|b))linear|Horizontal)\-|Skewed(?:righ|lef)t\-)|ntraction\-)syria|ryptogrammic(?:eie|ni)\-copti|(?:c(?:h(?:h(?:ee|[iou])|h?aa|ee|[iou])|ee|aa)|ee)\-ethiopi|(?:o(?:lon|mma)?|che|wa|aa?|i|u)\-ethiopi|(?:c(?:h(?:he|h?a)|[ei]|a|o|u)|oa)\-ethiopi|e\-ethiopi)c|lo(?:ckwise(?:(?:Triangle)?Open|(?:Gapp|Clos)ed)CircleArr|udSn)ow|rossPommeeWithHalfCircleBelow|(?:(?:(?:im(?:haislusntogntog|cuamtshooj|t(?:xwvchwv|ub)|TsovRog|nrestos|pubdawb|(?:chee|tau|ho)m|khav|s(?:uam|o)|kes)|imtxwv|au)\-pahawhh|(?:(?:yaManchu|a(?:Manchu)?)Aligali|ommaManchu)\-|o(?:lon|mma)\-)mo|a(?:ndraBindu)?\-be)ng|(?:(?:l(?:usterNoteheadBlack|i(?:macu|vi)s)|ircleXNotehead|rescendo|aesura|Clef|roix)\-music|lusterNoteheadWhite\-music|(?:r(?:ocusOf(?:Copper2|Iron)|ucible[2-5])|r(?:ocusOfCopper|ucible)|a(?:putMortuum|lx)|aduceus|innabar)\-alchemic|utTime\-music|lickdent)al|(?:eongchieum(?:s(?:sangcieuc|(?:sangs)?ios)|cieuc)|eongchieumchieuch|ieucIeung)Cho\-ko|(?:a(?:rpentryPlan|ptiv)e|o(?:lumn|mb)|lub)\-phaistosDisc|(?:o(?:ngratulation|rrect|py)\-han\.circle|(?:ross(?:ingLanes|Pommee)\.|entre\-han\.|\.)circle|lapperBoar|stretche|(?:allMeH|urly)an|reditCar|lipboar|ustar|mo)d|o(?:n(?:t(?:ainsasnormalsubgroup|rol)|gruent)?|rnerbracket(?:righ|lef)t|mma(?:reversed|\.full|small|\-(?:han|ar))?|lon|w)|(?:lockwiseringoverlay|lockwisearrowabove|(?:ircumflex|aron)below|ircumflexdbl|a(?:ndraBindu|ron)|ircumflex|cedilla|edilla)comb|lockwisecontourintegral|(?:a(?:ndrabindu(?:avagraha|halant|t(?:hree|wo))\-|(?:ndraBindu)?\-|ret\-)dev|andrabindu\-kannad|andrabindu\-chakm|a(?:ndraBindu)?\-oriy|(?:uatrillocom|ine)m|losedUmbrell|ayn\-osmany|aa\-chakm|a\-kannad|a\-sinhal|adaun)a|(?:(?:o(?:uncil(?:emphatictone|tone[23])\-s|mmasmall\-)h|e(?:nturial\-rom|\-avest)|e\-elbas|lose\-h|a\-sh)a|(?:ongratulation\-han|all\-han)?\.pare|(?:urlybracketextens|aut)io|(?:w(?:(?:oo?|ii?|e)WestCree|a(?:a(?:WestCree|Naskapi)|WestCree))|Ojibway|w(?:oo?|ii|aa)|aai|w[aei]|oo|ii|i|e|a|o)?\-canadia|irculationFunctio|(?:ommercialMinu|lappingHand)sSig|(?:onstruction|aret)Sig|(?:(?:il|an)\-old|(?:il|an)\-)georgia|a(?:rriageretu|prico)r|(?:rescentMo|car)o|aa\-canadia|o(?:mpress|njunct)io|olonsig|(?:loudRa|off)i|row)n|(?:losedMailboxLoweredFla|losedMailboxRaisedFla|jkStroke(?:Szw|H[px]w|Bx|[WX])|ookin)g|h(?:e(?:d(?:escender(?:abkhasian)?|ieresis)|verticalstroke|khakassian|abkhasian)?\-cy|i(?:tueum(?:s(?:sangcieuc|(?:sangs)?ios)|chieuch|cieuc)Cho\-ko|(?:neseToneY(?:ang(?:(?:Sha|Pi)ng|[QR]u)|in(?:(?:Sha|Pi)ng|[QR]u)))?mod|euch(?:(?:Khieuk|Hieu)hCho\-ko|a?\-ko\.circle|(?:a?Paren|Jong)\-ko|C(?:ompa|ho)\-ko)|(?:(?:Carrier\-canad|n\-(?:old)?georg)ia|\-(?:canadia|lati)|cke)n|l(?:d(?:\-phaistosDisc|renCrossing)?|ow(?:leftserif|rightring))|(?:ret)?\-ethiopic|subscript|\-adlam|pmunk|\-mong|ron)?|(?:a(?:rtUpTrendAndYenSig|\-sha)|(?:ee?|o|[au])Carrier\-canadia|(?:ar\-(?:old)?georg|urch\-shav)ia|e\-elbasa)n|(?:rivi(?:comb)?\-glagolit|(?:aa?|ee|u|o)\-ethiop|[ow]a\-ethiop|e\-ethiop)ic|(?:ee(?:ringMegaphon|seWedg)|ristmasTre|aracterti|a\-osag)e|amko\-ko\.circle|a(?:(?:u\-pahawhh|Sibe\-|Todo\-)mo|\-(?:shwepalau|be|mo))ng|(?:a(?:dRtags|Sub)?\-tibe|e(?:(?:Mgo\-tib|e\-deser)e|stnu))t|(?:artDownTren|eckerBoar)d|(?:(?:e(?:Radical|[ptx])|y(?:rx|[ptx])|u(?:o[ptx]|rx|[px])|a[ptx])\-y|a\-(?:gurmukh|gujarat|khamt|y)|(?:yr?|u[or])\-y|u\-y|e\-y)i|o(?:(?:Ch(?:ing|ang?|oe)\-tha|p\-y|[tx]\-y)i|colateBar|psticks|\-(?:khmer|yi))|(?:e(?:rryBlosso|h\-ar)|a\-ar)m|a\-malayalam|equeredFlag|artUpTrend|(?:(?:Final|ha)\-c|a(?:(?:High|Low)\-t|\-c))ham|a(?:a\-chakma|\-(?:(?:kannad|sinhal|oriy|dev)a|telugu|lepcha))|a\-myanmar|(?:\-bopomof|a\-la)o|a\-khmer|(?:eckmar|oo)k|(?:errie|ain)s|a\-nko|urch)|ircle(?:WithSuperimpose|dBol)dX|a(?:ndra(?:binduabove|Bindu))?\-telugu|(?:o(?:rnerbracket(?:righ|lef)t|mma\-han)\.hal|areo)f|(?:ieuc(?:Ssangpieup|Pieup)?Jong|ieuc[au]Paren|ieucParen|(?:w(?:eo|ae)|y(?:eo|ae|[iou])|w[aei]|y[ae]|eu|u)n[ghj]|(?:w(?:eo|ae)|y(?:eo|ae|[iou])|w[aei]|y[ae]|e[ou]|ae|u)l[bghmpst]|(?:(?:w(?:eo|ae)|y(?:eo|ae|[iou]))[bs]|w(?:i[bs]|e[bs]|a[bs])|y(?:e[bs]|a[bs])|e(?:u[bs]|o[bs]|[bs])|ae?b|i[bs])s|(?:w(?:eo|ae)|y(?:eo|ae|[iou])|w[aei]|y[ae]|e(?:u|o)?|ae?|i|u)g[gs]|(?:w(?:eo|ae)|y(?:eo|ae|[iou]))[cdhjkmpt]|e(?:o(?:n[hj]|[cdhjkmpt])|u[cdhjkmpt]|l[bghmps]|n[ghj]|[chjkmt])|a(?:e(?:ss|n[ghj]|[cdhjkmpt])|ss|l[bghmpst]|n[hj]|[hjk])|o(?:e(?:l[bghmpst]|n[hj]|[cdhjkmpt])|(?:e[bs]|[bs])s|e?g[gs]|l[bghmpst]|nh|[hjk])|w(?:i[cdhjkmpt]|e[cdhjkmpt]|a[cdhjkmpt])|y(?:e[cdhjkmpt]|a[cdhjkmpt])|i(?:l[bghmpst]|n[ghj]|[cdhjk])|u(?:ss|bs|[dhjkm]))\-ko|onsonantmodcomb\-adlam|(?:(?:olontriangularhalf|rossaccent)m|o(?:lon(?:triangular)?|mma(?:revers|turn)ed)m|annedFo|curlm)od|l(?:o(?:sed(?:UnionWithSerifs|Su(?:per|b)set)|ud)|ear)|(?:a(?:rriageReturn|ncel)Contro|learscreensymbo|entrelinesymbo|(?:redit|a)\-tami|rystalBal|(?:ent)?\.ful)l|(?:lo(?:ckFace(?:(?:El|S)even|(?:T(?:welv|hre)|Fiv)e|Eight|Four|(?:Ni|O)ne|Six|T(?:en|wo))Thirt|sedLockWithKe)|atFaceWithTearsOfJo|ylindricit|rossedo\-c|che\-c)y|(?:ryptogrammicDot|aHigh|aLow)\-tham|a(?:ndrabindu)?\-malayalam|(?:o(?:nsonantjoiner\-tif|[pt]?\-y)|a(?:ndraBindu)?\-gujarat|(?:(?:uop|ip|y[pt]|y)Radical|yr?x|i(?:e[ptx]|x)|u(?:r|o)?x|ex|ax|ox)\-y|wi\-kayahl|a\-gurmukh|a(?:\-(?:kayahl|bug|y)|t\-y)|a\-khamt|(?:u(?:op?|r)|yr?|ie|y[pt])\-y|(?:i[pt]|u[pt]|ap)\-y|ep\-y|[eiu]\-y)i|amnucpiikuuh\-khmer|(?:a(?:tFaceWithWrySmi|st)|rocodi)le|i(?:rc(?:ledCrossFormee|umflex)|tyscape)|(?:on(?:structionWork|icalTap)|ucumb|a\-khm)er|lockwiseintegral|(?:l(?:assicalBuild|oudLightn)|a(?:rSlid|mp))ing|(?:bold(?:script|italic)?|script|italic)\-math|ieuca\-ko\.circle|at\-phaistosDisc|ieuc\-ko\.circle|jkStroke(?:H(?:z(?:z(?:zg|p)|wg|[gt])|g)|S(?:zz|w[gz]|[gpt])|P[dgz]|Tn|[DNQ])|(?:lickretro|circum)flex|jkStroke(?:H(?:z(?:zz?|w)?|p)?|S(?:z|w)?|P|T)|r(?:oss(?:ingLanes|Pommee)?|eversed)|a(?:n(?:ce(?:llationX|r)|dy)|meraFlash|rdFileBox|\-ko)|ieucC(?:ompa|ho)\-ko|upWithStraw|licklateral|(?:erw)?a\-lepcha|(?:arpStrea|o(?:eng)?\-kh)mer|ountersink|(?:(?:o(?:lon|mma)\-bam|apitul)u|[ao]\-ar)m|u(?:atrillo|rrency|beroot)|a(?:r(?:dIndex|on)|duceus|t(?:Face)?|mera)|(?:urlyLoo|loseu)p|(?:o(?:m(?:ma\-n|\-)|(?:e(?:l|n)?|e[bs]|e?g|c|[bs]|d|l)\-|n(?:g|j)?\-)|(?:e(?:o(?:ng?)?|lt?|u|d|n)|(?:w(?:eo|ae)|y(?:eo|ae|[iou])|w[aei]|y[ae]|eu|u)n|(?:w(?:eo|ae)|y(?:eo|ae|[iou])|w[aei]|y[ae]|e[ou]|ae|u)l|(?:w(?:eo|ae)|y(?:eo|ae|[iou]))[bs]|(?:w(?:eo|ae)|y(?:eo|ae|[iou])|w[aei]|y[ae]|e(?:u|o)?|ae?|i|u)g|w(?:eo|ae)|y(?:eo|ae|[iou])|a(?:e(?:s|n)?|ng|s|m|l|d|c)|w(?:i[bs]|e[bs]|a[bs])|y(?:e[bs]|a[bs])|e(?:u[bs]|o[bs]|[bs])|ae?b|y[ae]|i[mn]|u[bcs]|i[bs])\-)ko|c(?:edilla|url)|ircledX|e(?:di(?:lla)?|nt)|wi\-ko|(?:com|ra)b)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bj(?:(?:e(?:em(?:_(?:meem_alefMaksura|hah_(?:alefMaksura|yeh)|alefMaksura|meem_hah|meem_yeh|yeh))?\-ar\.f|h\-ar\.f)in|nya\-sinhal|ha(?:a\-chakm|\-sinhal)|a(?:inom\-dev|a\-chakm|\-(?:sinhal|o(?:sman|ri)y|lepch|dev))|ha\-oriy|(?:jy?|h)a\-dev)a|apaneseSymbolForBeginner|e(?:e(?:(?:m(?:_(?:meem(?:_hah)?|hah)\-ar\.in|\-ar\.in)i|\-desere)t|m\-ar\.isol)|rusalemCross|h\-ar\.isol|ans|\-cy)|u(?:deospanishvarika\-hb|eui\-ko\.circle|piter|no)|(?:haManchuAligali|aSibe)\-mong|(?:(?:j(?:ee?|[iou]|a)|wa|ee?|a|o|u)Carrier\-canad|uu?Sayisi\-canad|udge\-shav)ian|e(?:em(?:_(?:alefMaksura|meem|yeh|hah))?|h)\-ar|(?:eem(?:Twodots)?above\-a|allajalalouhou\-a|(?:Bold)?\-fraktu|h?a\-myanma)r|i(?:hvamuliya\-kannada|talic(?:DoubleStruck|\-math)|(?:Carrier|Sayisi)\-canadian|l\-(?:old)?georgian|aTodo\-mong|\-(?:ethiopic|yi)|(?:\-(?:bopomof|k)|[lpt]\-k)o|im\-adlam|(?:e[ptx]|e|x|p|t)\-yi|(?:bs|l[bghmpst]|n[ghj]|g[gs]|[bghn]|[cdjkm])\-ko|s(?:s?\-ko)?)|apaneseBankSymbol|(?:apanese(?:PostOffic|Ogr)|strok)e|dotlessstrokehook|(?:dotlessstroke|crossedtail)?mod|(?:bold(?:italic|script)?|script)\-math|han\-(?:old)?georgian|dotless(?:stroke)?|apaneseCastle|(?:a(?:paneseGobli|ckOLanter)|ha\-mo|\.pare|caro|oi)n|(?:(?:j(?:ie|ut|y)Radical|o(?:Radical|x)|j(?:i(?:e[ptx]|x)|u(?:o[px]|x)|y[ptx]|ox)|(?:ju|y)rx|ur?x|uo[ptx]|y[ptx])\-y|ha\-(?:gu(?:rmukh|jarat)|khamt)|eem\-ar\.med|a\-(?:gurmukh|gujarat|khamt|bug)|(?:j(?:ie|uo|y)|(?:ju|y)r|ur|uo|y)\-y|(?:j(?:ut?|i|o)|j(?:i[pt]|up|o[pt])|up|o[pt]|ut)\-y|o\-y|u\-y)i|apaneseDolls|h?a\-malayalam|doubleStruck|crossedtail|(?:h?a\-tailai|ha\-be|uggli|a\-(?:be|mo))ng|(?:wa|aa?|ee|oa|o|u)\-ethiopic|circumflex|(?:a(?:Sub)?\-tibe|subscrip)t|aTodo\-mong|h?a\-kannada|e\-ethiopic|(?:o(?:n(?:a(?:ch|[jr])a\-n|\-)|e\-)|(?:(?:j(?:y(?:ae|[iou])|wi|oe|e[ou]|ae)|(?:j[wy]|w)eo|jwae|j(?:ya|i|u|o|e|a)|(?:j[wy]|w)e|jwa|w(?:ae|i)|y(?:eo|ae|[iou])|wa|y[ae]|ae|e[ou]|oe?|e)l[bghmpst]|(?:(?:j(?:y(?:ae|[iou])|wi|oe|e[ou]|ae)|(?:j[wy]|w)eo|jwae|w(?:ae|i)|y(?:eo|ae|[iou])|ae|e[ou])[bs]|j(?:ya[bs]|i[bs]|u[bs]|o[bs]|e[bs]|a[bs])|(?:j[wy]|w)e[bs]|jwa[bs]|wa[bs]|y(?:e[bs]|a[bs])|o(?:e[bs]|[bs])|a[bs]|e[bs]|u[bs])s|(?:j(?:y(?:ae|[iou])|wi|oe|e[ou]|ae)|(?:j[wy]|w)eo|jwae|j(?:ya|i|u|o|e|a)|(?:j[wy]|w)e|jwa|w(?:ae|i)|y(?:eo|ae|[iou])|wa|y[ae]|ae|e[ou]|oe|a|e)n[ghj]|(?:j(?:y(?:ae|[iou])|wi|oe|e[ou]|ae)|(?:j[wy]|w)eo|jwae|j(?:ya|i|u|o|e|a)|(?:j[wy]|w)e|jwa|w(?:ae|i)|y(?:eo|ae|[iou])|wa|y[ae]|ae|e[ou]|oe?|a|e)g[gs]|(?:j(?:y(?:ae|[iou])|wi|oe|e[ou]|ae)|(?:j[wy]|w)eo|jwae|w(?:ae|i)|y(?:eo|ae|[iou])|ae|e[ou])[cdhjkmpt]|j(?:ya[cdhjkmpt]|i[cdhjkm]|u[cdhjkm]|o[cdhjkm]|e[cdhjkmpt]|a[cdhjkmpt])|(?:j[wy]|w)e[cdhjkmpt]|jwa[cdhjkmpt]|wa[cdhjkmpt]|y(?:e[cdhjkmpt]|a[cdhjkmpt])|a(?:l[bghmpst]|[dhjkmt])|o(?:e[cdhjkmpt]|n[ghj]|[cdhjkm])|u(?:l[bghmpst]|gs|n[ghj]|[chjkm])|e[cdjkmpt])\-|(?:j(?:y(?:ae|[iou])|wi|oe|e[ou]|ae)|(?:j[wy]|w)eo|jwae|j(?:ya|i|u|o|e|a)|(?:j[wy]|w)e|jwa|w(?:ae|i)|y(?:eo|ae|[iou])|wa|y[ae]|ae|e[ou]|oe?|e)l\-|(?:(?:j(?:y(?:ae|[iou])|wi|oe|e[ou]|ae)|(?:j[wy]|w)eo|jwae|w(?:ae|i)|y(?:eo|ae|[iou])|ae|e[ou])[bs]|j(?:ya[bs]|i[bs]|u[bs]|o[bs]|e[bs]|a[bs])|(?:j[wy]|w)e[bs]|jwa[bs]|wa[bs]|y(?:e[bs]|a[bs])|o(?:e[bs]|[bs])|a[bs]|e[bs]|u[bs])\-|(?:j(?:y(?:ae|[iou])|wi|oe|e[ou]|ae)|(?:j[wy]|w)eo|jwae|j(?:ya|i|u|o|e|a)|(?:j[wy]|w)e|jwa|w(?:ae|i)|y(?:eo|ae|[iou])|wa|y[ae]|ae|e[ou]|oe|a|e)n\-|(?:j(?:y(?:ae|[iou])|wi|oe|e[ou]|ae)|(?:j[wy]|w)eo|jwae|j(?:ya|i|u|o|e|a)|(?:j[wy]|w)e|jwa|w(?:ae|i)|y(?:eo|ae|[iou])|wa|y[ae]|ae|e[ou]|oe?|a|e)g\-|(?:j(?:y(?:ae|[iou])|wi|oe|e[ou]|ae)|(?:j[wy]|w)eo|jwae|w(?:ae|i)|y(?:eo|ae|[iou])|ae|e[ou])\-|(?:(?:j[wy]|j|w)e|jwa|y[ae])\-|u(?:gg?|[dl]|n)\-|a(?:[clp]\-|\-n))ko|ha\-telugu|(?:e\-(?:elbas|avest)|ha\-sh)an|(?:\-bopomof|ha\-la|jy?a\-k|(?:j(?:ut?|i|o)|j(?:i[pt]|up|o[pt])|up|o[pt]|ut)\-k|wa\-k|eh?\-k|o\-k|u\-k)o|a\-(?:telugu|ko)|\.circled|(?:a\-tami|\.ful)l|(?:heh|a)\-arm|h?a\-cham|oystick)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bt(?:(?:(?:(?:empus(?:ImperfectumCumProlatione(?:ImperfectaDiminution[1-3]|Perfecta)|PerfectumCumProlatione(?:PerfectaDiminution1|Imperfecta))|riangle(?:RoundNoteheadDown(?:Black|White)|Notehead(?:Up(?:(?:Right)?Black|(?:Right)?White)|(?:Right|Down|Left)Black|(?:Right|Down|Left)White))|orculusResupinus|hirtySecondRest|hirtySecondNote|urn(?:Slash|Up))\-mus|(?:empus(?:ImperfectumCumProlationeImp|PerfectumCumProlationeP)erfecta|orculus|urn|r)\-mus|hreeLineStaff\-mus|(?:in(?:ctu|O)re|rident|artar2?|utty)\-alchem)ica|(?:ortoiseshellbracket(?:righ|lef)tsm|ennisRacquetAndB|rackb)al|(?:ehMarbuta\-ar\.is|h(?:al\-ar\.is|etaSymb))o|(?:abKeyHorizont|hirdPlaceMed|ripleintegr)a|(?:(?:ch|t)eh|ch|eh|t|h)eh\-ar\.iso|abKeyVertica|eh\-ar\.iso|ah\-ar\.iso|hree\.ful|cc?ur|\.ful)l|(?:(?:riple(?:HorizontalBarWith(?:Trip|Doub)leVertic|VerticalBarWithHorizont)alS|diagonals)trok|(?:ripleverticalbarrightturnsti|hreeDimensionalAng|eacupWithoutHand|(?:opHalfBlackC|hieutha\-ko\.c|hieuth\-ko\.c|ikeuta?\-ko\.c)irc)l|hree_zero\.circledonBlacksquar|wo(?:_zero\.circledonBlacksquar|ButtonMous|strok)|(?:ildeOperatorWithDotA|riangleWithDotA|opWithUpArrowA|hreeRaysA|ilde(?:ring|dot)a)bov|elephoneReceiverWithPag|ightTrifoliateSnowflak|(?:op(?:Right)?HalfWhite|aisyouera|on|hz)Squar|ur(?:ned(?:White|Black)ShogiPiec|(?:nedAng|t)l)|hreeButtonMous|(?:h(?:(?:reeperem|in)sp|inkingF)|i(?:red|ger)F)ac|a(?:peCartrid|\-osa)g|middletild|ripletild|h(?:inSalti|erefo)r|elescop|a(?:peDriv|ngerin)|onefiv|ongu)e|(?:(?:roezenian(?:fi(?:fty(?:alternateform)?|ve(?:hundred)?)|ten(?:alternateform)?)|hespian(?:(?:fiv|on)ethousand|(?:thre|fiv|on)ehundred|t(?:hirty|wo|en)|fifty|one))\-ancientG|en(?:t(?:housandstater|alent)|stater|mna)s\-atticG|hreequarters\-g)reek|(?:hreeD(?:(?:LeftLightedDown|RightLightedUp)Equilateral|TopLighted(?:Right(?:Equilateral)?|LeftEquilateral)|BottomLightedRight)Arrowhea|opHalfBlackDiamon|(?:onebar(?:(?:extra)?high|(?:extra)?low|mid)|palatalhook|heta)mo|hree_perio|mo)d|(?:opArc(?:AnticlockwiseArrowWithPl|ClockwiseArrowWithMin)u|hreeConsecutiveEqualsSign|ildeOperatorWithRisingDot|r(?:i(?:angleWithRoundedCorner|plePlu)|olleybu)|hreeNetworkedComputer|hreeSpeechBubble|hreeLeftArrow|o(?:pparenthesi|no)|hinGreekCros|umblerGlas|dieresi|auru)s|(?:riple(?:VerticalBar|Solidus)BinaryRelatio|ransversalIntersectio|(?:elephoneLocation|humbs(?:Down|Up))Sig|(?:one[1-5]\-westernpwok|ha\-westernpwok|one\-paok|hree\.p|\.p)are|(?:hunderCloudAndR|r)ai|(?:urned(?:BlackPentag|semicol)|houghtBallo|ricol|car)o|hreedotpunctuatio|ophalfsectionsig|inythreedotsdow|wo(?:(?:dotpunctuati|Symbol\-ait)o|(?:_zero)?\.pare|\-han\.pare)|urned(?:OkHand|Not)Sig|(?:hree|en)\-han\.pare|elevisio|ackdow)n|(?:ortoiseshellbracket(?:righ|lef)t\.ver|hree(?:LinesConverging|Rays)Righ|hree(?:LinesConverging|Rays)Lef|(?:(?:eh_(?:meem_k?hah|(?:meem_j|khah_m|jeem_m|hah_m)eem)|(?:eh_hah_j|h?eh_m)eem|eh_heh)\-|eh_(?:khah|jeem|hah)\-)ar\.ini|a(?:h(?:_(?:meem(?:_meem\-ar\.i|(?:_hah)?\-ar\.i)|hah\-ar\.i)n|\-ar\.in)i|cklef)|riangularFlagOnPos|heredoesnotexis|wodot(?:soveronedo|leader\.ver)|(?:(?:ch|t)eh|ch|eh|t|h)eh\-ar\.ini|commaaccen|otalRunou|eh\-ar\.ini|dotaccen|Shir)t|ilde(?:OperatorAbove(?:Righ|Lef)tArr|dotbel)ow|(?:(?:eh_(?:meem_alefMaksura|khah_alefMaksura|jeem_alefMaksura|(?:noo|zai)n)|h?eh_alefMaksura|eh_hah_jeem|(?:eh_(?:meem_y|khah_y|jeem_y|r)|heh_r)eh|eh(?:Marbuta|_meem)|h(?:eh_meem|al)|heh_(?:noo|zai)n|h?eh_yeh)\-ar\.fin|a(?:h(?:_(?:alefMaksura|meem_(?:ha|ye)h|yeh)\-ar\.f|\-ar\.f)in|\-hir)|(?:hirty|hree|en)Archaic\-sinhal|(?:h(?:ree(?:sixteenth|quarter)s|a)\-o|th?a\-o|a\-o)riy|w(?:entyArchaic\-sinhal|o(?:(?:Archaic|lith)\-sinhal|comb\-dev|\-(?:o(?:sman|ri)y|kannad|chakm|dev)|_comm))|hreelith\-sinhal|(?:(?:ch|t)eh|ch|eh|t|h)eh\-ar\.fin|(?:hreecomb|h(?:ree|a)|th?a|a)\-dev|hree\-o(?:sman|ri)y|h(?:ree|a)\-kannad|(?:osmall\-ka|urnedio)t|(?:u(?:small)?|[eio])\-hir|(?:th?)?a\-sinhal|(?:th?)?a\-kannad|(?:(?:t?h|t)?aa\-chak|(?:hree_|urned)com)m|hree\-chakm|eh\-ar\.fin|ha\-sinhal|a\-osmany|cedill)a|(?:(?:elegraph(?:(?:Hour(?:TwentyThre|(?:Twenty)?On|Twelv|Thre|Fiv)|Day(?:T(?:we(?:ntyThre|(?:ntyFi|l)v)|hre)|(?:T(?:wenty(?:Ni|O)|hirtyO)|O)n|Fiv))e|HourTwentyFour|DayTwentyEight|HourTwentyTwo|D(?:ayTw(?:enty(?:Four|Six|Two)|o)|ecember)|(?:(?:Sept|Nov)em|Octo)ber|LineFeed|HourZero|February|HourTwo|J(?:anuary|u(?:ly|ne))|A(?:ugust|pril)|Ma(?:rch|y))\-|elegraph(?:Day(?:T(?:wentySev|hirte)?|(?:S(?:even|ix)|Eigh|Nine|Four|Fif)te|Elev)|Hour(?:(?:S(?:even|ix)|Eigh|Thir|Nine|Four|Fif)te|Elev|T))en\-|ripleNested(?:Greater|Less)T|elegraph(?:Hour(?:Twenty|Eight|S(?:even|ix)|Nine|Four)|Day(?:T(?:hir|wen)ty|Eight|S(?:even|ix)|Nine|Four))\-|(?:hird|op)Annotaion\-|hreeAnnotaion\-|(?:one[2356]|hree)\-s)h|w(?:o(?:Annotaion\-h|\-(?:rom|sh))|elve\-rom)|(?:uru|aaf)\-samarit|it\-samarit|h(?:e\-elbas|a\-sh)|(?:hree|en)\-rom|[ht]?e\-avest|e\-elbas)an|(?:hree\.(?:(?:sansSerifB|b)lackC|sansSerifC|doubleC|c)|(?:hree_(?:eight|s(?:even|ix)|four|two)|hree_(?:thre|fiv)e|hree_(?:ni|o)ne|[eiou]\-kata|a\-kata)?\.c)ircled|(?:(?:(?:hornstrokethroughdescen|elephoneRecor)d|ri(?:pleVerticalBarDelimit|angularRul)|o(?:p(?:Rightc|LeftC)orn|kyoTow)|urneddagg|hermomet|tha\-khm)e|r(?:ipleColonOpera|ac)to|hreedotsabove\-a|(?:oandakhiat|uteyasat|riisap|(?:t?h)?o|a)\-khme|(?:Bold)?\-fraktu|(?:hree)?inferio|hreesuperio|h(?:ree|a)\-khme|ba)r|(?:wodotsvertical(?:below|above)\-syria|(?:attooedHead|iara|unny)\-phaistosDis|(?:hreedotsbelow|ethGarshuni|eth|aw)\-syria|hreedotsabove\-syria)c|(?:riangleWithSerifsAtBotto|elephoneOnTopOfMode|ukwentis\-bamu|ridentEmble|(?:hundersto|iwn\-a|o\-a)r|a\-cha)m|o(?:rtoiseshellbracket(?:righ|lef)t|pArcAnticlockwiseArrow|netwo)|w(?:o(?:(?:ConsecutiveEqualsSign|(?:Wom|M)enHoldingHand|JoinedSquare|SpeechBubble|Heart|fifth)s|(?:IntersectingLogicalAn|_(?:zero_)?perio)d|(?:\.(?:(?:sansSerifB|b)lackC|sansSerifC|doubleC|c)|_(?:zero\.blackC|(?:eight|s(?:even|ix)|(?:thre|fiv)e|four|(?:ni|o)ne|two)\.c))ircled|dotshorizontal(?:below|above)\-ar|(?:IntersectingLogicalO|dotsvertical(?:below|above)\-a|Logical(?:And|Or)Operato|dotenleade|inferio|superio)r|(?:(?:LineStaff\-mus|asterisksvert)ica|\.ful)l|thirds\-greek|\-(?:han\.circled|malayalam|gu(?:jarat|rmukh)i|kayahli|myanmar|t(?:amil|ha[im])|khmer|a(?:dlam|r)|cham|lao|nko)|Obols\-greek|Hora\-tham|Turned)|e(?:lvePointedBlackStar|\-cy)|(?:ae(?:[bs]s|l[bghmpst]|n[ghj]|g[gs]?|[bs]|l|n|[cdhjkmpt])?|e(?:o(?:[bs]s|l[bghmpst]|n[ghj]|g[gs]?|[bs]|l|n|[cdhjkmpt])?|l[bghmpst]|n[ghj]|[bs]s|g[gs]?|[blns]|[cdhjkmpt])|(?:i[bs]|a[bs])s|[ai]l[bghmpst]|[ai]n[ghj]|[ai]g[gs]?|i[bs]|a[bs]|[ai]l|[ai]n|i[cdhjkmpt]|a[cdhjkmpt])\-ko|[aei]\-ko)|(?:hirdstagehli|enbillions|xheejceev|rillions)\-pahawhhmong|(?:h(?:(?:Final|waa|w(?:oo|ii|ee|[io]|a)|i|a|e)?WoodSc|o(?:WoodSc|ThC))ree|hwaaWestCree|w(?:(?:aa?|i|e)WestCree|iiWestCree|oo?WestCree|aaNaskapi)|h(?:(?:ii?|aa?|e)?Th|ooTh|(?:ii?|e)N)Cree|Ojibway|hSayisi|lhoo|thoo|[lt]hwe|a(?:ai|y)|ii)\-canadian|u(?:maemgb|ns)iee\-bamum\.phaseB|en(?:thousand)?s\-pahawhhmong|(?:imesWith(?:Righ|Lef)tHalfBlac|e(?:ardropSpokedAsteris|lephoneblac)|r(?:etroflexhoo|opicalDrin|ademar)|(?:doubleStru|imerClo)c|ugri)k|(?:one(?:calya(?:plophu)?|plophu)|a)\-kayahli|(?:(?:i(?:keut(?:(?:SiosKiyeok|Pieup)Jong|ThieuthJong|C(?:h(?:ieuchJong|o)|ieucJong|ompa)|(?:Kiyeok|Rieul|Sios)?Jong|(?:Kiyeok|Rieul|cieuc|pieup|mieum|sios)Cho|aParen|Paren)|g[gs]|l[bghmpst]|n[ghj]|[dhj])|hieutha?Paren|hieuthCompa|hieuthJong|hieuthCho|e(?:u(?:n[ghj]|[cdhjkmp])|l[bghmpst]|n[hj]|ss|[cjk])|a(?:e(?:n[ghj]|[cdhjkmpt])|bs|l[bghmpst]|n[hj]|[dj])|(?:y(?:[io][bs]|e[bs]|a[bs])|e(?:u[bs]|b)|a(?:e[bs]|s)|ob|i[bs]|ub)s|(?:y[aeio]|eu|ae|o)l[bghmpst]|y[aeio]n[ghj]|y(?:[io][cdhjkmpt]|e[cdhjkmpt]|a[cdhjkmpt])|o(?:ss|n[hj]|[cdhj])|u(?:ss|n[ghj]|g[gs]|l[bghmpst]|[cdhj]))\-|hree\-n|(?:y(?:eo|ae|u)|oe|eo)(?:[bs]s|l[bghmpst]|n[ghj]|g[gs]?|[bs]|l|n|[cdhjkmpt])?\-|(?:y[aeio]|eu?|ae?|o)g[gs]?\-|o(?:ng?|[kms])\-|e(?:ng|[dlm]|s)\-|a(?:(?:en|ng|k|c|b|l)\-|\-n)|(?:y(?:[io][bs]|e[bs]|a[bs])|e(?:u[bs]|b)|a(?:e[bs]|s)|ob|i[bs]|ub)\-|(?:y[aeio]|eu|ae|o)l\-|y[aeio]n\-|i[cgk-n]\-|u[gklns]\-)ko|(?:(?:(?:hreequarters|tta)\-m|th?a\-m|ha\-m|en\-m)alaya|(?:hree|a)\-malaya|u\-ad)lam|(?:(?:(?:hreebalud|th?)a|taManchu|a(?:Manchu|Todo)?)Aligali|aTodo|aSibe)\-mong|(?:op(?:(?:tortoiseshell|square)b|(?:righ|lef)tHalfB|curlyb)rack|r(?:iangularbull|ump)|i(?:roniansign|ck)|hee\-deser|ee\-deser|oil)et|(?:(?:housandmillions|itlo(?:(?:righ|lef)thalf)?)comb|e(?:withmiddlehook|nmillionscomb|descender)|etse)\-cy|(?:(?:ilde(?:(?:righthalf|lefthalf)?below|vertical|overlay|double)|(?:hreedotsabov|ild)e|riple(?:under)?dot)com|et\-h)b|(?:euteuwe|itamfo)n\-bamum\.phaseA|a(?:(?:ennteum|a?q)\-bamum\.phaseE|a(?:shae\-bamum\.phaseC|m\-bamum\.phaseB|\-bamum\.phase[EF])|e\-bamum\.phase[DF]|m\-bamum\.phaseE|\-k(?:ata\.half|o)|keoutBox|xi)|(?:(?:(?:ehThreedotsup|ah)below|h(?:ousandseparator|eh_jeem)|eh(?:Threedotsdown|Marbutagoal|Ring)|ahThreedots)\-|hreePointedBlackSt|(?:hreedots(?:down|up)|one(?:twodots|onedot|loop))(?:below|above)\-|r(?:iangleWithUnderb|amC)|(?:a(?:h(?:Twodots)?|khallus)|chehDot|halAlef|ehTeh)above\-|earOffCalend|hreedots\-|insul)ar|(?:(?:rokutastia|vridocomb|vrido)\-glagolit|hermodynam|(?:hethe|au(?:ro)?)\-copt)ic|s(?:h(?:e(?:ejClan\-pahawhhmong|gshad\-tibet)|(?:ook(?:cerwa)?\-l|a\-l)epcha|aSub\-tibet|a\-tibet)|[aw]bClan\-pahawhhmong|e(?:eCarrier\-canadian|Carrier\-canadian|Reversed\-cy|e\-ethiopic|\-(?:ethiopic|c(?:herokee|y))|re\-hb)|[aiou]Carrier\-canadian|i(?:comb)?\-glagolitic|aadiy\-samaritan|adidagesh\-hb|a(?:Phru|Sub)\-tibet|(?:[aw]a|[aiou])\-ethiopic|cript\-math|a(?:Sibe|Todo)\-mong|[aiouv]\-cherokee|a\-telugu|a\-lepcha|h?a\-osage|a\-tibet|a\-mong|adi\-hb|he\-cy|[sw]e\-cy)?|u(?:maemba\-bamum\.phaseA|aep\-bamum\.phaseA|ot\-bamum\.phaseD|\-(?:bamum\.phaseD|ko)|lip)|(?:l(?:h(?:ee|u)|h[eo]|h[ai]|ee|e|[aou]|i)|t(?:s(?:ee|[aiou])|se|ee?|[io]|a|u)|h(?:ee?|[aiu]|o))Carrier\-canadian|(?:ituaep|euteux)\-bamum\.phaseC|itayue\-bamum\.phaseC|hojClan\-pahawhhmong|(?:(?:enthousand|th(?:ee|u)|hoa|z(?:ee|[ao]a|[iu])|oa|hu|z[aeo])\-|hirty\-|w(?:enty|a|o)\-|thaa\-|h(?:ree|wa|aa?|i|o)\-|th[ei]\-|tho\-|hee\-|e[en]\-|aa?\-|o\-|i\-|u\-)ethiopic|h?eh_alefMaksura\-ar|(?:opCircle(?:Righ|Lef)|hreeRigh)tArrow|e(?:uaen\-bamum\.phase[AD]|t\-bamum\.phase[CF]|\-cy|nge|sh)|(?:(?:euaeq|oon)\-|um?ae\-|oo\-)bamum\.phaseE|urned(?:South(?:Ea|We)|North(?:Ea|We))stLeaf|(?:ripleprimeRevers|hreeTurn|turn)ed|a(?:h(?:_(?:alefMaksura|meem|yeh|hah))?\-ar|[ae]\-bamum|\-kata|u)|hree_zero\.circled|e(?:eee|u[nt])\-bamum\.phaseD|(?:ryblionBase|hreeObols|a(?:lent|uRho))\-greek|(?:h(?:o(?:(?:Nangmonth|Phutha)o|Th(?:a(?:ha)?n|[ou]ng))|anthakhat)\-tha|(?:heh_(?:meem|heh)|eh_meem|eh_heh)\-ar\.med|a(?:h(?:_meem)?\-ar\.med|tRadical\-y|\-(?:bug|y)|[pt]\-y|x\-y)|(?:(?:ch|t)eh|ch|eh|t|h)eh\-ar\.med|ippi\-gurmukh|(?:h(?:ree|a)|th?a|a)\-gu(?:jarat|rmukh)|o(?:(?:Patak|Tao)\-tha|t?\-y)|(?:uRadical|i(?:e[px]|x)|u(?:r?x|o[px])|ie|u[or]|ox|ex)\-y|(?:one[13]|th?a)\-khamt|eh\-ar\.med|aillessph|u(?:ot)?\-y|it?\-y|(?:[eio]p|u[pt])\-y|e\-y)i|(?:urnedgan\-georg|a(?:r\-(?:old)?|n\-(?:old)?)georg|(?:h(?:igh|ey)|ot)\-shav|hree\-pers|wo\-pers)ian|e(?:lephone(?:Receiver)?|h(?:Marbuta|_meem)\-ar|t\-bamum|n(?:\-bamum|t))|usmall\-kata\.half|(?:hree|en)\-han\.circled|(?:hree|wo)\-pahawhhmong|wo(?:_zero\.circled|thirds)?|o(?:q\-bamum\.phase[DE]|pHat|\-ko)|(?:(?:circumflex|line|dot)b|hreeRaysB)elow|en\-bamum\.phaseE|(?:eu|um)\-bamum\.phaseE|(?:(?:ripleDanda\-c|Final\-c|one[134]\-t)h|h(?:underTrigr|a\-ch)|hreeHora\-th|(?:ha(?:High|Low)|a(?:High|Low))\-th|allAa\-th|one[25]\-th)am|(?:bold)?italic\-math|boldscript\-math|(?:e(?:lisha(?:qetan|gedol)a|virleft)|ipehaleft|etdagesh|avdagesh)\-hb|i\-bamum\.phaseD|(?:hstrikethroug|ropicalFis|hreeemdas|woemdas)h|(?:hirty|w(?:enty|o)|hree|en)\-hangzhou|au\-pahawhhmong|(?:ieOverInfinit|roph|urke)y|(?:one[25]\-tailai|hree\-tailai|(?:hreeNumr|aKhanda|h(?:ree|a)|th?a)\-be|wo(?:Numr\-be|\-(?:tailai|be|mo))|(?:hree|a)\-mo|a\-be)ng|(?:t?haa|ha|aa?|w[eo]|i|e)\-canadian|(?:h(?:w(?:aa|e)|ii|oo)?|lh[aeio]|w(?:aa|ii|oo)|t[hio])\-canadian|h(?:ree(?:quarters)?|orn(?:stroke)?|eta)|h(?:ree|a)\-kayahli|(?:hree|a)\-myanmar|(?:th?|h)?aSub\-tibet|(?:(?:t(?:h?a|e)|oo?)?\-|th[ei]\-|tho\-|h(?:wa|i|e|o)\-|y[aeio]\-|w[ai]\-)canadian|palatalhook|heh_meem\-ar|u(?:small\-kata|m)|op(?:Righ|Lef)tCrop|[eiou]\-kata\.half|hreeeighths|(?:th?a\-m|ha\-m)yanmar|(?:hoTh[ou]ng\-la|\-bopomof|(?:hree|th?a)\-la|oTa\-la|resill|e(?:u[nt]|t|n)\-k|o(?:t\-k|mat)|it\-k|(?:[eio]p|u[pt])\-k|(?:eu|um)\-k|eh\-k|a[ehmnpt]\-k|y[aeio]\-k)o|(?:uumu|hree|ta|wo|a)\-telugu|(?:hree|th?a|wo)\-lepcha|(?:arol|ha|a)?\-lepcha|h?e\-ethiopic|anabataTree|(?:l(?:[aeiou]\-|v\-)|[ei]\-)cherokee|r(?:ipleprime|am)|h?eh_yeh\-ar|eh_(?:khah|jeem|hah)\-ar|hreefifths|(?:urnedrta|en\-tam|ta\-tam|a\-tam)il|hree\-t(?:amil|ha[im])|hree\-a(?:dlam|r)|t?ha\-telugu|(?:hree|t?ha|t?a|wo)\-tibet|(?:housand|che)\-cy|a\-cherokee|(?:(?:ch|t)eh|ch|eh|t|h)eh\-ar|hree\-cham|bold\-math|i(?:\-bamum|ger|lde|ny)|hal\-ar|[eiou]\-kata|(?:onesi|Re)x|eh\-ar|av\-hb|comb|hook|[ei]\-ko|rue|z)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bd(?:(?:o(?:wn(?:HarpoonWithBarbLeftBeside(?:Down|Up)HarpoonWithBarbRigh|TriangleArrowWith(?:(?:(?:Very)?Heavy|Medium|Narrow)Sha|LongTipLe|BoldSha)f|TriangleArrowWithLongTipRigh|wardFacing(?:Notched)?HookWithDo)|ughnu)|blanglebracket(?:righ|lef)t\.ver|ad(?:_(?:khah_meem|khah|[jm]eem|hah)\-ar\.in|\-ar\.in)i|i(?:amond(?:Black|White)Su|rectH)i|yeh\-ar\.ini|dotaccen|croa)t|(?:o(?:uble(?:shortverticalstrokes|acute)|wntack)Final\-canadia|(?:e(?:scription(?:SurroundFromUpperRight|AboveTo(?:MiddleAnd)?Below|SurroundFrom(?:UpperL|L(?:owerL)?)eft|LeftTo(?:MiddleAnd)?Right|SurroundFrom(?:Above|Below)|FullSurround|Overlaid)|partingtone)\-h|ouble(?:Line(?:Slanted)?EqualToOr(?:Greater|Less)|NestedGreater)Th|a(?:(?:geshcomb|lat)\-samarit|\-sh)|imidiaSextula\-rom|upondius\-rom|enarius\-rom|he\-avest|he\-elbas|e\-(?:avest|elbas))a|(?:e(?:neGe)?e|l(?:ee|[ou])|l[aei]|i)Carrier\-canadia|(?:irectquestion\-nub|on\-(?:old)?georg|ead\-shav)ia|igramFor(?:Great|Less)erYi|o(?:uble(?:(?:StrokeNot|d(?:Fem|M)ale)Sig|obliquehyphe)|lphi)|(?:ifferencebetwe|\.par)e|(?:imensionOrig|elta\-lat)i|(?:riveSlow|iameter)Sig)n|(?:o(?:wn(?:TriangleArrowDouble|ArrowWith)HorizontalStrok|(?:uble(?:verticalbardoublerightt|VerticalBar(?:Double)?LeftT)urnsti|wn(?:(?:Black|White)Small|Red(?:Small)?|Circled|Black|White)Triang)l|cumentWith(?:TextAnd)?Pictur|t(?:ted(?:rightpointingang|Circ)|s(?:1(?:2(?:3(?:4?5(?:6(?:78?|8)?|78?|8)?|4?6(?:78?|8)?|4?78?|4?8|4)?|4?5(?:6(?:78?|8)?|78?|8)?|4?6(?:78?|8)?|4?78?|4?8|4)?|3(?:4?5(?:6(?:78?|8)?|78?|8)?|4?6(?:78?|8)?|4?78?|4?8|4)?|4?5(?:6(?:78?|8)?|78?|8)?|4?6(?:78?|8)?|4?78?|4?8|4)?|2(?:3(?:4?5(?:6(?:78?|8)?|78?|8)?|4?6(?:78?|8)?|4?78?|4?8|4)?|4?5(?:6(?:78?|8)?|78?|8)?|4?6(?:78?|8)?|4?78?|4?8|4)?|3(?:4?5(?:6(?:78?|8)?|78?|8)?|4?6(?:78?|8)?|4?78?|4?8|4)?|4?5(?:6(?:78?|8)?|78?|8)?|4?6(?:78?|8)?|4?78?|4?8|4)\-brail)l|esnot(?:divid|prov)|(?:tted|ru)Squar|(?:esnotfor|ttedFen)c|veOfPeac|gFac)|(?:(?:iagonalcrosshatchFill|m(?:Squar|Cub)ed|aasu|esi|[bl])Squa|epartmentSto)r|(?:i(?:sappointed(?:ButRelieved)?|zzy)|r(?:ooling|agon))Fac|iamondShapeDotInsid|ieselLocomotiv|(?:escendingNo|middletil)d|eciduousTre|(?:la|v|o)\-cheroke|aggerKnif|a\-cheroke|e\-cheroke|i\-cheroke|u\-cheroke|ha\-osag)e|o(?:esNotDivideWithReversedNegationSlash|(?:wn(?:(?:(?:WhiteArrowWithinTriangleA|arrowwithequilaterala|TriangleA)rrowh|Arrow(?:With(?:(?:Medium|Large)Triangle|Equilateral)Arrowh|withtrianglearrowh|H))ea|Arrow\.blackCircle)|uble(?:primeReverse|LogicalAn))d|(?:(?:ubleNestedLessThanWithUnderb|wn(?:HarpoonWithBarb(?:Righ|Lef)tFrom|(?:HarpoonWithBarb(?:Righ|Lef)t|TriangleArrow)To|ArrowTo)B|ublerightarrowheadDotabove\-|ublerightarrowheadabove\-)a|ttedtranspositionmarke|uble(?:SolidusOperato|LogicalO)|t(?:(?:vowelbelow|Stopabove)\-|below\-myanm|below\-|above\-)a|\-khme|o)r|(?:uble(?:verticalstrokeoverlay|(?:verticalline|ring)below|tilde(?:righ|lef)thalf|openmarkbelow|parentabove|(?:macron|breve)below|circumflex)|wntackbelow|uble(?:macron|breve))comb|wn(?:TriangleWith(?:Righ|Lef)tHalfBlack|(?:T(?:henCurving(?:Righ|Lef)|ip(?:Righ|Lef))t|HeavyCompressed|(?:Triangle)?Zigzag|(?:T(?:riangleDash|wohead)|DoublePair|Squar)ed|dblTriangle|Compressed|F(?:ingerPost|rombar)|SansSerif|(?:Quadru|Tri)ple|Double|Heavy|Black)Arrow|TackWithCircleBelow|A(?:ndUp(?:Triangle)?Arrow|rrow\.half)|WhiteIndex)|(?:wnrightdiagonalellipsi|ublePrecede)s|uble(?:(?:EndedMultima|CurlyLoo)p|DownTack|UpTack)|ubleapostrophemod|t(?:(?:horizont|vertic)albarmod|reph\-malayalam|a(?:boverigh|ccen)tcomb|belowcomb|ted(?:obelo|cros)s|slashmod|minus|math|plus)|ubleDanda\-cham|(?:ubleprime|wntack)mod|ublePlus|\-ko)|(?:o(?:ubleLineSlanted(?:Greater|Less)ThanOrEqualT|Dek\-la|n\-k)|irectcurrentsymbolformtw|eltaequalt|\-bopomof|d?ha\-la|d(?:a\-la|[eiou]\-k)|dwa\-k|yeh\-k|(?:(?:do|i)t|a[pt]|ep)\-k|(?:d(?:i[pt]|u[pt]|op|ep|a[pt])|ip|op)\-k|dal\-k|w[ae]\-k|ad\-k|al\-k)o|(?:o(?:esnot(?:containasnormalsubgroup|precede)orequa|wn(?:ArrowWithNotched|Fish)Tai|uble(?:Barline|Sharp|Flat)\-musica|ubleColonEqua|llar(?:\.fu|sma)l)|(?:(?:iscontinuousunderlines|ecimalseparatorkeys|izzyS|a(?:lets|shS))ymb|e(?:viceControl(?:Three|Four|One|Two)|lete(?:FormTwo)?)Contr|(?:ec(?:reaseFontSize|imalExponent)|ivorce)Symb|ataLinkEscapeContr|oNotLitterSymb|(?:yeh|ad)\-ar\.is)o|(?:(?:ashedBarline|e(?:crescendo|greeSlash)|rumClef[12]|a(?:lSegn|Cap)o|ampAll)\-music|(?:is(?:solve2|solve|till)|ayNight)\-alchemic|amp\-music|blintegr)a|amma(?:tan)?\-ar\.iso|romedaryCame|d?ahal\-ar\.iso|hookandtai|dal\-ar\.iso|(?:ebit\-tam|ay\-tam|ta)i|al\-ar\.iso|ul\-ar\.iso|aggerdb|\.ful)l|(?:ownandhorizontal(?:(?:triang|circ)le|wave)?\-dentistr|(?:asiapneumatacomb|eSoft|che)\-c|elete(?:righ|Lef)tKe|(?:oubleo|je(?:rv)?)\-c|we\-c)y|(?:o(?:uble(?:(?:leftarcgreater|rightarcless)thanbrack|su(?:per|b)s)|wnRock)|iamondTarg|ee\-deser|ropl)et|o(?:esnotcontainasnormalsubgroup|wn(?:wardFacing(?:Notched)?Hook|TriangleArrow|WhiteArrow|Arrow)|uble(?:NestedLessThan|VerticalBar)|cument(?:WithText)?|taccent|llar|ng|g)|(?:(?:a(?:l(?:TwodotsverticalbelowTah|Threedotsdown|DotbelowTah|Fourdots|Ring)|l(?:Vinverted|Threedots)below|(?:mmaturned|dDot)below|teseparator|mma(?:(?:revers|invert)ed|tanCurly|small|Curly|Dot))\-|alVinvertedabove\-|ecimalseparator\-|blverticalb|alDotbelow\-|(?:dh?a\-m|ha\-m|a\-m)yanm|i(?:sabledC|nsul)|topb)a|a(?:p(?:(?:Muoy|Buon|P(?:ram|ii)|Bei)?koet|(?:Muoy|Buon|P(?:ram|ii)|Bei)?roc))?\-khme|iamondoperato|(?:esktopComput|anc)e|(?:Bold)?\-fraktu)r|(?:elphicfivemnas\-ancientGree|rachma\-gree|palatalhoo|ittomar)k|(?:ouble(?:candrabinduhalant\-dev|danda\-chakm)|(?:ad(?:_(?:hah_(?:alefMaksura|yeh)|alefMaksura|khah_meem|[ry]eh))?|yeh)\-ar\.fin|(?:igraphyori|a|e|o)\-hir|(?:igraphkot)?o\-kat|ialytika(?:var|ox)i|blhyphen\-kan|d?ahal\-ar\.fin|(?:bldand|ddh?)a\-dev|dha\-kannad|(?:dh?a\-s|ha\-s|a\-s)inhal|eel\-osmany|(?:anda\-chak|igam)m|(?:dh?aa\-|aa\-)chakm|dal\-ar\.fin|da\-kannad|ha\-kannad|ha\-osmany|haa\-chakm|al\-ar\.fin|u(?:l\-ar\.fin|\-(?:hir|kat))|a(?:sia(?:var|ox)i|\-kat)|a\-kannad|(?:dh?a\-o|ha\-o|a\-o)riy|(?:a(?:nda)?|dh?a|ha)\-dev|ownancor|cedill|(?:ot|e)\-kat|i\-(?:hir|kat))a|(?:elimitertshegbstar|(?:dh?|h)aSub|rilBu|aSub)\-tibet|(?:blverticallineabove|blarchinvertedbelow|ia(?:lytikatonos|eresisring)|ieresisbelow|bl(?:over|low)line|ieresis|blgrave)comb|(?:(?:alath(?:rishDotless)?|halathPersian)\-syria|o(?:lium|ve)\-phaistosDis)c|o(?:uble(?:(?:(?:SquareI|i)ntersec|ques)t|(?:SquareU|u)n)i|wnBarb(?:Righ|Lef)tHarpo)on|(?:o(?:ubledotabovecomb\-n|e(?:s|l)?\-|lp?\-|ng\-|c\-|b\-|g\-)|(?:o(?:ubledottone|e(?:ss|l[bghmpst]|[cdhjkmpt])|bs|l[bghmst]|n[hj]|g[gs]|[dhjkm])|(?:d(?:w(?:eo|i)|y(?:eo|[iou])|yae|oe|e[ou]|ae)|dwae|d(?:[wy]e|ya|i|u|o|e)|dwa|y(?:eo|ae|[iou])|w(?:ae|eo|i)|y[ae]|w[ae]|ae|e[ou]|i)l[bghmpst]|(?:(?:d(?:w(?:eo|i)|y(?:eo|[iou])|yae|oe|e[ou]|ae)|dwae|y(?:eo|ae|[iou])|w(?:ae|eo|i)|ae)[bs]|d(?:we[bs]|ye[bs]|ya[bs]|i[bs]|u[bs]|o[bs]|e[bs]|a[bs])|dwa[bs]|y(?:e[bs]|a[bs])|w(?:a[bs]|e[bs])|e[ou][bs]|o(?:eb|s)|ib|ab)s|(?:d(?:w(?:eo|i)|y(?:eo|[iou])|yae|oe|e[ou]|ae)|dwae|d(?:[wy]e|ya|i|u|o|e|a)|dwa|y(?:eo|ae|[iou])|w(?:ae|eo|i)|y[ae]|w[ae]|ae|e[ou]|oe)n[ghj]|(?:d(?:w(?:eo|i)|y(?:eo|[iou])|yae|oe|e[ou]|ae)|dwae|d(?:[wy]e|ya|i|u|o|e|a)|dwa|y(?:eo|ae|[iou])|w(?:ae|eo|i)|y[ae]|w[ae]|ae|e[ou]|oe)g[gs]|(?:d(?:w(?:eo|i)|y(?:eo|[iou])|yae|oe|e[ou]|ae)|dwae|y(?:eo|ae|[iou])|w(?:ae|eo|i)|ae)[cdhjkmpt]|d(?:we[cdhjkmpt]|ye[cdhjkmpt]|ya[cdhjkmpt]|i[cdhjkm]|u[cdhjkm]|o[cdhjkm]|e[cdhjkmt]|a[cdjkm])|dwa[cdhjkmpt]|y(?:e[cdjkmpt]|a[cdhjkmpt])|w(?:a[cdhjkmpt]|e[cdhjkmpt])|i(?:n[ghj]|g[gs]|[cdhjk])|a(?:l[bghmpst]|gs|n[hj]|ss|[cjk])|e(?:ss|bs|n[ghj]|[ou][cdhjkmpt]|g[gs]|l[bghms]|[djkmt]))\-|agbasinna\-n|(?:d(?:w(?:eo|i)|y(?:eo|[iou])|yae|oe|e[ou]|ae)|dwae|d(?:[wy]e|ya|i|u|o|e)|dwa|y(?:eo|ae|[iou])|w(?:ae|eo|i)|y[ae]|w[ae]|ae|e[ou]|i)l\-|(?:(?:d(?:w(?:eo|i)|y(?:eo|[iou])|yae|oe|e[ou]|ae)|dwae|y(?:eo|ae|[iou])|w(?:ae|eo|i)|ae)[bs]|d(?:we[bs]|ye[bs]|ya[bs]|i[bs]|u[bs]|o[bs]|e[bs]|a[bs])|dwa[bs]|y(?:e[bs]|a[bs])|w(?:a[bs]|e[bs])|e[ou][bs]|o(?:eb|s)|ib|ab)\-|(?:d(?:w(?:eo|i)|y(?:eo|[iou])|yae|oe|e[ou]|ae)|dwae|d(?:[wy]e|ya|i|u|o|e|a)|dwa|y(?:eo|ae|[iou])|w(?:ae|eo|i)|y[ae]|w[ae]|ae|e[ou]|oe)n\-|(?:d(?:w(?:eo|i)|y(?:eo|[iou])|yae|oe|e[ou]|ae)|dwae|d(?:[wy]e|ya|i|u|o|e|a)|dwa|y(?:eo|ae|[iou])|w(?:ae|eo|i)|y[ae]|w[ae]|ae|e[ou]|oe)g\-|(?:d(?:w(?:eo|i)|y(?:eo|[iou])|yae|oe|e[ou]|ae)|dwae|y(?:eo|ae|[iou])|w(?:ae|eo|i)|ae)\-|dal[bghmpst]\-|(?:d(?:[wy]e|ya)|i(?:ss?|m|n|g)|dah|y[ae])\-|a(?:(?:gg?|ng?|[hm])\-|\-n|s\-)|e(?:l(?:p|t)?|[bcghnosu])\-)ko|(?:dhaManchuAligali|haManchuAligali|agalgaAligali|amaruAligali|d?aAligali|aSibe)\-mong|(?:(?:erelictHouseBuild|(?:dh?a\-t|ha\-t|a\-t)aila)i|igramFor(?:Great|Less)erYa|dh?a\-be|ha\-be|umpli|a\-(?:be|mo))ng|(?:(?:jervi(?:comb)?|obro(?:comb)?)\-glagolit|(?:ialect[Pp]kapa|ialect[Pp]ni|jaOld|alda|ei)\-copt|ushenna\-manda)ic|blanglebracket(?:righ|lef)t|(?:aggerwith(?:righ|lef)tguar|(?:(?:ivide|ash)?\.circl|eltaturn)e|esertIslan|mo)d|(?:ialytikaperispomen|a(?:siaperispomen|(?:mma|d)\-ar\.med|\-(?:kayahl|bug|y))|(?:durRadical|d(?:i(?:e[px]|x)|u(?:r?x|o[px])|ox|ex|ax)|d(?:ie|u[or])|i(?:e[px]|x)|ie|ax|ex|ox)\-y|(?:dh?)?a\-gurmukh|(?:dh?)?a\-gujarat|yeh\-ar\.med|ha\-(?:gu(?:rmukh|jarat)|khamt)|o(?:(?:Chada|Dek)\-tha|t\-y|\-y)|dha\-khamt|da\-khamt|(?:(?:do|i)t|a[pt]|ep)\-y|(?:d(?:i[pt]|u[pt]|op|ep|a[pt])|ip|op)\-y|d[aeiou]\-y|e\-y)i|z(?:(?:ee?|[aiou])Carrier\-canadian|e(?:(?:lo\-glagolit|e\-ethiop)ic|(?:abkhasian|Reversed|lo)\-cy|\-(?:ethiopic|cy))|ha(?:Sub)?\-tibet|(?:aa|[iou])\-ethiopic|a(?:Todo\-mong|Sub\-tibet|\-(?:lepcha|telugu)|\-tibet|ltone)|(?:zh|z|w|h)e\-cy|c(?:aron|url))?|(?:(?:italicD|d)oubleSt|eliveryT)ruck|(?:(?:eretHidet|eret|d(?:h(?:ee|[iou])|oa|ee)|ifat|dhe|oa)\-|dh?aa\-|(?:d(?:wa|[aeiou])|wa)\-|aa?\-|ee\-|o\-|i\-|u\-)ethiopic|a(?:(?:(?:d(?:_(?:alefMaksura|khah|[jm]eem|[ry]eh|hah))?|mma(?:tan)?)\-a|gge)r|sia)|(?:rumWithDrumstick|(?:arkSunglass|ivisiontim)e|ieresistono|res)s|(?:(?:circumflex|line|dot)bel|esktopWind)ow|(?:bold(?:script|italic)?|script|italic)\-math|(?:dh?a\-m|ha\-m|a\-m)alayalam|ate\-malayalam|(?:a(?:(?:letdagesh|rgaleft)\-|(?:gesh|let)\-)|ehi\-)hb|ashdownArrow|(?:ivisionslas|bdigrap|ez)h|u(?:(?:Radical|[or]x?|x|p|t)\-yi|(?:ss|bs|n[ghj]|g[gs]|l[bghmpst]|[bgns]|[dhjk]|c)\-ko|[lpt]\-ko|m\-ko|\-(?:yi|ko)|ck)|(?:aali|ha)\-adlam|aTodo\-mong|(?:dh?a\-t|ha\-t|a\-t)elugu|e\-ethiopic|a(?:n(?:da\-cham|go)|\-ko)|da\-lepcha|(?:dh?a\-t|ha\-t|a\-t)ibet|d?ahal\-ar|a\-lepcha|i(?:eresis|vide)|mSquare|i(?:eFace[1-6]|vides)|(?:ram\-ar|a\-(?:cha|ar))m|(?:[dh]a\-c|a\-t)ham|eltamod|ra(?:chma|gon)|yeh\-ar|dal\-ar|e(?:sert|gree|lta)|al\-ar|u(?:l\-ar|m)|da\-ko|(?:ot|e)\-ko|caron|hook|e(?:\-cy|er)|comb|i\-(?:yi|ko)|curl|vd)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bp(?:(?:ersonRaisingBothHandsInCelebratio|recedesAbove(?:SingleLine)?EqualsSig|lusSignAboveEqualsSig|(?:ersonInLotusPosi|rescrip)tio|recedesunderrelatio|(?:wa\-westernpwok|\.p)are|aren(?:righ|lef)textensio|(?:ermanentPaper|artnership|rohibited)Sig|hi(?:Modifier)?\-lati|rinterIco|ostalHor|agedow|ersig|engui)n|(?:lus(?:SignWith(?:CircumflexAccent|Tilde)A|circlea)bov|a(?:rallelWithHorizontalStrok|lmTre|\-osag|ckag|cut)|(?:lusSign(?:WithBlack|In)Triang|ood)l|enOverStampedEnvelop|opdirectionalisolat|hieupha\-ko\.circl|hieuph\-ko\.circl|(?:aa(?:sento|mps)|ointo|e(?:n(?:ihi|su)|ezi)|ondo|aatu|v)Squar|ropertylin|reviouspag|middletild|(?:ersp|roj)ectiv|(?:eso|[cfw]|m|s)Squar|aSquar|urs)e|(?:recedes(?:Above(?:(?:SingleLineNo|Almos)t|Not(?:Almost)?)EqualT|butnotequivalentt|orequ(?:ivalent|al)t)|lu(?:sSignWithSubscriptTw|t)|o(?:rtableStere|tat)|hoPhu(?:eng)?\-la|\-bopomof|oPa\-la|e(?:u?t|h)\-k|w[aei]\-k|up\-k|(?:ut|o[pt])\-k|at\-k|um\-k|ap\-k|en\-k)o|(?:on(?:panji|mfon)pipaemgbiee|on(?:panji|mfon)pipaemba|a(?:leeraewa|(?:msh|sh|ar)ae)|up)\-bamum\.phaseA|(?:(?:hilosophersSulfur|o(?:wderedBrick|tAshes)|u(?:trefaction|rify)|recipitate|owder)\-alchemica|(?:arenthesisNotehead|o(?:rrectusFlex|dat)us|e(?:sSubpunctis|dal(?:Up)?Mark)|lusNotehead)\-musica|ersonDoingCartwhee|orrectus\-musica|aren(?:righ|lef)tsmal|er(?:sonWithB|centsm|iodsm)al|squirreltai|roportiona|(?:er(?:cent|iod))?\.ful|(?:(?:ulli|a)\-tam|enc)i|lus(?:\.fu|sma)l|ageCur|retze)l|(?:(?:a(?:rtiallyRecycledPaperS|ssivePull(?:Down|Up)Outputs)|(?:utLitterInItsPlace|otableWater)S|rintscreens|hiS)ymb|assportContr|eh(?:eh)?\-ar\.is)ol|(?:(?:aragraphseparator|refacecolon|w(?:aSebatbeit|ee)|e(?:riod|e)|h(?:aa?|wa|ee|oa?|[eu]|i)|w[aei]|aa?|oa|u|o)\-ethiop|unctuation\-manda|e\-ethiop)ic|(?:(?:(?:ansios(?:Kapyeounp|P)ieup|hieuphThieuth|hieuphSios|ansios|hieuph)Jong|hieuphPieup(?:Jong|Cho)|hieuphhieuhCho|hieupha?Paren|(?:ansios|hieuph)Compa|(?:ansios|hieuph)Cho|(?:w(?:eo|ae)|y(?:eo|ae|[iou])|oe|ae)(?:l[bghmpst]|n[ghj]|g[gs]|[cdhjkmpt])|(?:(?:w(?:eo|ae)|y(?:eo|ae|[iou])|oe|ae)[bs]|w(?:i[bs]|e[bs]|a[bs])|y(?:e[bs]|a[bs])|e(?:u[bs]|o[bs]|b)|ob|ab)s|(?:w[aei]|y[ae])l[bghmpst]|(?:w[aei]|y[ae])n[ghj]|(?:w[aei]|y[ae]|u|o)g[gs]|e(?:u?l[bghmpst]|un[ghj]|u?g[gs]|o(?:l[bghmpst]|n[ghj]|g[gs]|[cdhjkmpt])|u[cdhjkmp]|n[hj]|ss|[cjkp])|w(?:i[cdhjkmpt]|e[cdhjkmpt]|a[cdhjkmpt])|y(?:e[cdhjkmpt]|a[cdhjkmpt])|u(?:ss|bs|l[bghmpst]|n[hj]|[cdhjk])|o(?:ss|l[bghmpst]|n[ghj]|[hjm])|a(?:l[bghpst]|n[ghj]|g[gs]|[hjk]))\-|(?:w(?:eo|ae)|y(?:eo|ae|[iou])|oe|ae)(?:l|n|g)?\-|(?:(?:w(?:eo|ae)|y(?:eo|ae|[iou])|oe|ae)[bs]|w(?:i[bs]|e[bs]|a[bs])|y(?:e[bs]|a[bs])|e(?:u[bs]|o[bs]|b)|ob|ab)\-|(?:u(?:ng?|[bls])|y[ae]|o[cdklns])\-|a(?:(?:ss?|lm?|m|d|n|c)\-|\-n|g\-)|(?:w[aei]|y[ae])l\-|(?:w[aei]|y[ae])n\-|(?:w[aei]|y[ae]|u|o)g\-|e(?:ng|u?l|un|u?g|o(?:l|n|g)?|[dmu]|s)\-)ko|(?:lus(?:(?:SignIn(?:Righ|Lef)tHalfC|\.c)ircle|mo)|(?:erpendicular|ostalmark|rint\-han|arallel)?\.circle|(?:aragraphrevers|eriodcenter|rimeRevers|ublish)e|mo)d|(?:arallelWithTildeOperat|o(?:sitionIndic|cketCalcul)at|ropell)or|(?:opdirectionalformatti|lhau\-pahawhhmo|(?:eriodManchu|a(?:Todo|Sibe))\-mo|erson(?:Climb|Frown)i|aAligali\-mo|eriod\-mo|a\-(?:be|mo))ng|(?:oliceCarsRevolvingLigh|aren(?:righ|lef)t\.full\.ver|ageWithCircledTex|e(?:riod\-han\.ver|h(?:eh)?\-ar\.ini)|a(?:dmaGdan|luta|Sub)?\-tibe|urpleHear|ee\-desere|dotaccen|roduc)t|(?:(?:ublicAddressLoudspeak|strokethroughdescend|ersonalComput|a(?:lmsUpTogeth|rtyPopp)|oliceOffic)e|(?:ram(?:Muoy|Buon|Bei|Pii)?koet|hnaekmuan|athamasat)\-khme|ram(?:Muoy|Buon|Bei|Pii)?roc\-khme|(?:(?:e(?:r(?:t(?:ent)?housand|cent)|hMeemabove)|a(?:ren(?:righ|lef)t|genumber))\-|ha\-myanm|a\-myanm)a|ersonBlondHai|(?:Bold)?\-fraktu|(?:ha|o)\-khme|ho\-khme)r|i(?:(?:eup(?:(?:Rieul(?:Phieuph)?|(?:Sios)?Tikeut|Mieum|Hieuh|Sios)?Jong|(?:SiosKiyeok|(?:Sios)?Tikeut|Thieuth|Kiyeok|Sios)Compa|(?:(?:siosthieut|khieuk|hieu)h|S(?:sangsios|ios(?:Pieup|Cieuc))|Nieun)Cho|(?:SiosKiyeok|(?:Sios)?Tikeut|Thieuth|Kiyeok|Sios)Cho|Phieuph(?:Jong|Cho)|C(?:h(?:ieuch(?:Jong|Cho)|o)|(?:ieucC)?ompa|ieucJong|ieucCho)|a?Paren)|bs|n[ghj]|ss|l[bghmpst]|[b-dkls]|[hjm])\-ko|rieen\-bamum\.phaseC|t(?:chforkWithTeeTop|\-bamum\.phaseB|alic\-math)|(?:Carrier|i)\-canadian|e(?:(?:eq|t)\-bamum\.phaseE|[px]?\-yi)|p\-bamum\.phaseD|n(?:\-bamum\.phaseC|(?:wheelSta|ferio)r)|(?:eupa?\-ko\.circl|(?:asutoru|k(?:uru|o))Squar|neappl)e|\-bamum\.phaseE|doubleStruck|neDecoration|i(?:koet|roc)\-khmer|ano\-musical|ro\-coptic|\-(?:ethiopic|c(?:anadian|optic)|hira|k(?:ata|o))|tchfork|(?:leOfPo|[npt]\-k)o|\-bamum|wr\-arm|Symbol|g(?:(?:Nos|Fac)e|[gs]?\-ko)?|s(?:tol|ces)|[pt]?\-yi|x\-yi|ll|ck|e)?|(?:edestrian\-phaistosDis|l(?:umedHead|aneTree)\-phaistosDis|apyrus\-phaistosDis|(?:thaha(?:dotted|below|above)|aragraph|e)\-syria)c|(?:lanckconstantovertwop|siliperispomen|h(?:o(?:Samphao|Ph(?:ung|an))\-tha|a\-(?:gu(?:jarat|rmukh)|kayahl)|inthu\-tha)|rosgegrammen|(?:aiyannoi|oPla)\-tha|eh(?:eh)?\-ar\.med|a(?:llawa\-bug|\-(?:bug|y)|t\-y)|a\-gu(?:jarat|rmukh)|a\-kayahl|(?:up?|ut|o[pt]|o)\-y|ap\-y)i|lus(?:SignWith(?:Tilde|Dot)Below|belowcomb)|(?:alatalization|okrytie)comb\-cy|(?:e(?:r(?:sonWithFoldedHand|formingArt)|anut)|a(?:wn(?:Black|White)Ches|ragrapho)|awPrint|lusminu|rinces)s|(?:w(?:(?:oo|ii)WestCree|aa?WestCree|[eio]WestCree|oy)|(?:ee?|u|o|a)?Carrier|WestCree|lusFinal|Ojibway|w(?:oo|ii|aa|o)|aai|aa?|w[aei]|oo|ay|oy|e|o)?\-canadian|(?:okoji(?:comb)?\-g|e\-g)lagolitic|(?:ap(?:lural|eople)|uaq|oon|eem)\-bamum\.phaseE|(?:e(?:rs(?:onWithPout|ever)ing|nsive)F|unctuationsp|o(?:stalmarkf|utingF)|(?:outingCat|anda)F)ace|si(?:lipneumatacomb)?\-cy|h(?:a(?:(?:bClan\-pahawhh|Aligali\-)mong|\-(?:telugu|beng))|(?:urPa|a(?:Sub)?)\-tibet|i(?:subscript|mod))|(?:(?:ungaa|aru)m|eeshi)\-bamum\.phaseB|rolonged\-kana\.half|e(?:r(?:sonWithHeadscarf|pendicularWithS|iod\-han\.half)|ux\-bamum\.phase[EF]|e\-bamum\.phase[DF]|t\-bamum\.phaseA|h\-arm|\-(?:hb|cy)|a(?:c[eh]|r))|(?:eutae|u(?:ut|q))\-bamum\.phaseD|(?:ar(?:talternationmar|en(?:right(?:low|upp)|left(?:low|upp))erhoo)|palatalhoo|hoo)k|(?:(?:rishthaMatraE|ushpika|a(?:comb)?)\-dev|amphyliandigamm|eh(?:eh)?\-ar\.fin|ha(?:a\-chakm|\-(?:kannad|sinhal|lepch|oriy|dev))|sili(?:var|ox)i|aa\-chakm|(?:la|a)?\-lepch|a\-kannad|a\-sinhal|a\-oriy|a\-kat|e\-hir|[aou]\-hir)a|a(?:r(?:a(?:graph(?:separator)?|llel)|en(?:right(?:\.full)?|left(?:\.full)?))|ge)|ersonBowingDeeply|(?:er(?:sonInSteamyRoo|iod\-bamu)|ha(?:\-(?:malayal|ch)|(?:High|Low)\-th)a|(?:a\-malayal|entagr|e\-adl|a\-ch)a|(?:(?:Final|pa)\-c|aHigh\-t|aLow\-t)ha|a\-bamu)m|(?:aren(?:(?:righ|lef)tinf|(?:righ|lef)tsup)|lus(?:inf|sup))erior|(?:aragraph\-georg|har\-(?:old)?georg|ar\-(?:old)?georg|eep\-shav)ian|a(?:am\-bamum\.phase[AE]|llas|\-ko|ge[rs])|uae\-bamum\.phase[EF]|a(?:rent(?:overlay|above)|latalhook)comb|(?:eut|aa|um|[ou])\-bamum\.phaseE|ap\-bamum\.phaseD|(?:bold)?script\-math|bolditalic\-math|en\-bamum\.phaseC|ue\-bamum\.phaseE|erispomenicomb|arentbelowcomb|(?:e(?:middlehook|descender)|alochka)\-cy|r(?:o(?:longed\-kana|portion)|ecedes|in(?:ter|ce))|e(?:r(?:t(?:ent)?housand|pendicular|i(?:spomeni|od(?:\-han)?)|cent)|(?:ux|e)\-bamum|destrian|h(?:eh)?\-ar|so)|l(?:anckconstant|us)|ayerokcomb\-cy|a(?:(?:ssengerSh|percl)i|ge(?:FacingU|u))p|doubleStruck|(?:regnantWom|e\-(?:elbas|avest)|ha\-sh)an|(?:y(?:tRadical|rx|[px])|u(?:tRadical|o[px]|rx|x)|y(?:r|t)?|u[or]|ox|ax)\-yi|artialdiff|(?:e(?:dagesh|rafe)|a(?:s(?:hta|eq)|zer|tah))\-hb|o(?:stalmark|liceCar)|uae\-bamum|ayerok\-cy|oultryLeg|eriod\-arm|(?:almbranc|flouris|ouc)h|bold\-math|si\-coptic|ue\-bamum|a\-telugu|(?:otOfFo|rimem)od|ancakes|s(?:troke|i(?:li)?)|ushpin|o(?:stbox|\-ko)|(?:o\-ka|ese)ta|[eu]\-k(?:ata|o)|comb|hi)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bb(?:(?:(?:la(?:ck(?:(?:Righ|Lef)tPointingIsoscelesRight|Down(?:PointingIsoscelesRight|Double)|Up(?:PointingIsoscelesRight|Double))Triang|nk\-brail)|o(?:x(?:(?:Vertical|Up)DoubleAnd(?:Horizontal|Right|Left)Sing|(?:Vertical|Up)SingleAnd(?:Horizontal|Right|Left)Doub|Down(?:DoubleAnd(?:Horizontal|Right|Left)Sing|SingleAnd(?:Horizontal|Right|Left)Doub))|ttomHalfBlackCirc|ldWhiteCirc)|lackSlightlySmallCirc|enzeneringcirc|lackLargeCirc)l|e(?:llWithCancellationStrok|arFac|caus)|lack(?:(?:Medium|Very)?SmallLozeng|T(?:ouchtoneTelephon|inyLozeng)|LeftLaneMerg|(?:Medium)?Lozeng|Bowti)|(?:lack(?:Horizont|Vertic)alEllip|riefca)s|i(?:labi|dent)alpercussiv|u(?:sts?InSilhouett|llsey)|lackSmilingFac|lackShogiPiec|lack(?:Flor|Ros)ett|middletild|irthdayCak|oxingGlov|ra\-osag|strok)e|(?:(?:lack(?:(?:Right(?:TriangleWithDouble|DoubleTriangleWith)|LeftDoubleTriangleWith)VerticalB|(?:CentreWhiteS|FourPointedS|s)t|SmallSt)|eh(?:Threedots(?:horizontal|up)below|(?:TwodotsbelowDot|Threedotsup|hamza|Meem)above|V(?:(?:inverted)?below|above)|Dotless)\-|ismillah\-|topb)a|ulletoperato|(?:Bold)?\-fraktu|ha\-myanma)r|(?:(?:ottom(?:(?:squarebracketovertopsquare|tortoiseshell)b|(?:righ|lef)tHalfB|curlyb)rack|lack(?:(?:righ|lef)tbul|Drop)l|ee\-deser)e|ox(?:L(?:ight(?:(?:DiagonalUpperLeftToLower|LeftAndHeavy|VerticalAnd|Arc(?:Down|Up)And|DownAnd)?Righ|(?:D(?:iagonalUpperRightToLower|ownAnd)|(?:Vertical|Arc(?:Down|Up))And)Lef|UpAnd(?:Righ|Lef))|eft(?:HeavyAndRight(?:Vertical|Down|Up)|UpHeavyAndRightDown|DownHeavyAndRightUp)Ligh)|(?:(?:(?:(?:Vertical|Up)HeavyAnd|UpHeavyAndDown|DownHeavyAnd(?:Up)?)Horizontal|(?:RightUpHeavyAndLef|UpHeavyAnd(?:Righ|Lef))tDown|VerticalHeavyAnd(?:Righ|Lef)t)L|RightHeavyAndLeft(?:Vertical|Down|Up)L|(?:RightDownHeavyAndLef|DownHeavyAnd(?:Righ|Lef))tUpL|(?:DownHeavyAnd(?:Righ|Lef)|UpHeavyAnd(?:Righ|Lef))tL|(?:Double|Heavy)VerticalAndR|HeavyLeftAndLightR|Double(?:Down|Up)AndR|HeavyDownAndR|Heavy(?:UpAnd)?R)igh|(?:(?:Double|Heavy)VerticalA|Double(?:Down|Up)A|HeavyDownA)ndLef|HeavyUpAndLef)|(?:lackCircleWithWhiteDotR|ridgeAtN)igh|(?:rdaRnyingYigMgo(?:Sgab|Mdun)Ma|s(?:k(?:aShogGiMgoRgyan|uryigmgo)|dusRtags)|kashogyigmgo|haSub|ha)\-tibe|lack(?:QuestionOrnamen|VerticalRec|Pennan)|e(?:(?:h(?:_(?:[jm]eem|khah|h[ae]h)\-ar\.in|eh\-ar\.in|\-ar\.in)|eh\-ar\.in)i|tasubscrip)|dotaccen|icyclis)t|a(?:(?:c(?:ks(?:lantedSouthArrowWithHo(?:rizontal|oked)Tai|paceContro)|trianCame)|thOf(?:Vapours|Mary)\-alchemica|by(?:Symbo|Ange))l|(?:dmintonRacquetAndShuttleco|llotBoxWith(?:Bold)?Che)ck|llot(?:Bo(?:xWith(?:(?:Bold)?Script|Light)?|ldScript)|Script)?X|(?:ck(?:WithLeftArrowAbov|OfEnvelop)|byBottl)e|lloonSpokedAsterisk|(?:llotBoxWithBallo|Sub\-tibe|\-tibe)t|(?:ludaAligali|Todo)\-mong|n(?:knote(?:Dollar|Pound|Euro|Yen)Sign|\-(?:old)?georgian|ana)|sketballAndHoop|(?:thamasat|ntoc)\-khmer|r(?:iyoosan\-khmer|rekh\-syriac|\.(?:circled|full)|berPole|redomod|Square|Chart)?|ckslash\.full|(?:(?:[au]\-samarit|\-sh)a|co)n|areruSquare|guetteBread|ggageClaim|\-(?:(?:malayal|adl|th)am|(?:tailai|be)ng|telugu|mong|cham|ko)|a?\-ethiopic|(?:\-(?:gu(?:jarat|rmukh)|kayahl|bug|y)|x\-y)i|(?:a\-chakm|\-(?:o(?:sman|ri)y|sinhal|ka(?:nnad|t)|lepch|dev|hir))a|\-myanmar|llo(?:tBox|on)|ckslash|byChick|(?:(?:e(?:[bs]s|l[bghmpst]|n[ghj]|g[gs]|[cdhjkmpt])|ss|l[bghmpst]|gs|bs|[jkm])\-|(?:e(?:[bs]|l|n|g)?|gg?|s|l|d|c)\-|n[ghj]\-|n\-|\-n|b\-|h\-)ko|\-khmer|seball|t(?:tery|htub|\-(?:yi|ko))|p\-(?:yi|ko)|by|nk|th?|ht)|(?:(?:irga(?:(?:Turnedswirl|Inverted)OrnamentDouble|RotatedOrnamentDouble|SwirlOrnamentDouble|(?:Trip|Doub)leOrnament|OrnamentDouble)|oundary)\-mo|irga(?:Rotated(?:Ornament)?|Swirl(?:Ornament)?|Inverted|Ornament)?\-mo|haManchuAligali\-mo|(?:lack(?:DraughtsK|Recycl)|reastFeed)i|ha\-tailai|ha\-be|owli)ng|(?:ox(?:(?:(?:Vertical|Up)LightAnd|UpLightAndDown|DownLightAnd(?:Up)?)Horizontal|RightLightAndLeft(?:Vertical|Down|Up)|LeftLightAndRight(?:Vertical|Down|Up)|VerticalLightAnd(?:Righ|Lef)t|UpLightAnd(?:Righ|Lef)tDown|DownLightAnd(?:Righ|Lef)tUp|(?:DownLightAnd(?:Righ|Lef)|UpLightAnd(?:Righ|Lef))t)Heav|utterfl|e\-c)y|(?:lacklenticularbracket(?:righ|lef)t|rac(?:ket(?:righ|lef)t\.|e(?:righ|lef)t\.)full)\.vert|lack(?:Medium(?:Right|Left|Down|Up)Triangle|Diamond|Square)Centred|(?:ox(?:Heavy(?:Quadru|Tri)pleDash|Light(?:(?:Quadru|Tri)pleDash|VerticalAnd|Do(?:ubleDash|wnAnd)|UpAnd)?|(?:Double|Heavy)VerticalAnd|HeavyDo(?:ubleDash|wnAnd)|Double(?:Down|Up)And|Heavy(?:UpAnd)?|Double)Horizonta|(?:ox(?:Heavy(?:(?:Quadru|Tri)p|Doub)|Light(?:(?:Quadru|Tri)p|Doub))leDashVert|(?:e(?:amedsixteenthnotes|gin(?:Phrase|Slur|Beam|Tie))\-|r(?:e(?:athMark|visRest)\-|(?:ac(?:ket|e)|ev(?:is|e))\-))mus)ica|(?:lackSulfur|ismuthOre|orax[23]|rick)\-alchemica|orax\-alchemica|e(?:(?:h(?:eh)?|eh)\-ar\.is|llContr)o|(?:lankS|e(?:lls|t(?:aS|s))|oysS)ymbo|rideVei)l|(?:lack(?:(?:Righ|Lef)t|Down|Up)EquilateralArrowhea|l(?:ack(?:MediumSmall|VerySmall|InWhite|Small|Tiny)|ue)Diamon|ottomHalfBlackDiamon|(?:reveinvertedbrev|egin(?:high|low)ton)emo|lackC(?:ircleForRecor|rossOnShiel)|lackMediumDiamon|iohazar|etamo|mo)d|(?:lack(?:C(?:urved(?:(?:Righ|Lef)tAndDown|(?:Righ|Lef)tAndUp)|ircleWithDown)|Curved(?:DownAnd(?:Righ|Lef)|UpAnd(?:Righ|Lef))t|DiamondWithDown)|rokenCircleNorthWest|entDownThenNorthEast)Arrow|(?:eamed(?:De|A)scendingMusicalNot|lackSkullAndCrossbon)es|la(?:ck(?:lenticularbracket(?:righ|lef)t|Medium(?:Right|Left|Down|Up)Triangle|RightDoubleTriangle|LeftDoubleTriangle|Diamond|Circle|Square)|nk)|o(?:(?:ttomArcAnticlockwise|wAnd)Arrow|oks|mb|ar)|(?:lack(?:CircleWithTwoWhiteDot|SunWithRay)|o(?:xLightDiagonalCros|ttomparenthesi|uquetOfFlower|ldGreekCros|okmarkTab)|lackS(?:afetyS)?cissor|i(?:g(?:Reverse)?Solidu|lliard)|(?:ishop(?:Black|White)Che|lackHourgla)s)s|(?:r(?:eve(?:(?:inverteddbl)?below|inverted(?:double|below))|idge(?:inverted)?below)com|(?:reve(?:inverted)?)?com|revemacroncom|et(?:alatincom|(?:dagesh|rafe)?\-h)|lackNi)b|(?:(?:lackTwoWayLeftWayTraff|igyus(?:comb)?\-glagolit|uky(?:comb)?\-glagolit)i|(?:oomerang|ullsLeg|eehive|ee|ow)\-phaistosDis|(?:w(?:aSebatbeit|ee)|b(?:ee|aa)|b[aeiou]|w[aei]|ee|oa?|i|u)\-ethiopi|e\-ethiopi)c|(?:lackHardShellFloppyDis|old(?:Eight|Five|Six)SpokedAsteris|(?:(?:palatal)?h|lueB)oo)k|(?:owtieWith(?:Righ|Lef)tHalfBla|(?:doubleSt|lackT)ru)ck|(?:lack(?:SlightlySmall|Cross|Large|Tiny)|lackVerysmall|oldWhite|ussyeru|oruto|eeta|iru|q)Square|lack(?:(?:Righ|Lef)t|Down|Up)BackhandIndex|e(?:h(?:_(?:alefMaksura|khah_yeh|hah_yeh|meem|(?:noo|zai)n|yeh|reh)\-ar\.f|eh\-ar\.f|\-ar\.f)|eh\-ar\.f)ina|u(?:llhornWithSoundWaves|ng\-bamum\.phaseC|\-ko)|(?:ox(?:HeavyUpAndLight|LightUpAndHeavy)Dow|uildingConstructio|(?:ottomAnnotaion\-h|lack(?:DraughtsM|Snowm)|it\-samarit|h?e\-avest|e\-elbas|ha\-sh)a|(?:ib(?:lecreey\-canad|\-shav)|Aivilik\-canad)ia|(?:lack(?:(?:(?:(?:Right)?Pen|Oc)t|Hex)ag|SquareButt)|eardedPers|owlWithSpo|b[ae]\-m)o|(?:lackPushp|itco)i|et(?:a\-lati|wee)|\.pare|rai)n|(?:racket(?:righ|lef)twithqui|race(?:righ|lef)tsma|ellhopBe)ll|o(?:ttomsquarebracket|x(?:(?:Double|Heavy)Vertical|Light(?:Vertical|Down|Left|Up)|Heavy(?:Left|Up)|HeavyDown)|ok(?:mark)?|uquet|wtie|y)|(?:hethPersian|eth)\-syriac|e(?:h(?:_(?:alefMaksura|meem|jeem|khah|yeh|hah)|eh)?\-ar|nzenering|eh\-ar|ll|ta|d)|(?:lackSquareForSt|ottom(?:Righ|Lef)tCr|usSt)op|(?:lackParallelogr|ha\-malayal|he\-adl)am|rac(?:ket(?:righ|lef)t\.|e(?:righ|lef)t\.)full|(?:ottom(?:Righ|Lef)tCorn|lackFold)er|(?:bold)?script\-math|bolditalic\-math|(?:e(?:(?:h(?:_(?:meem|heh)\-ar\.m|eh\-ar\.m|\-ar\.m)|eh\-ar\.m)ed|\-y)|(?:butRadical|u(?:r(?:Radical|x)|o[px]|x)|b(?:u(?:o[px]|x)|urx|y[ptx]|ix|ox|ex|ax)|bie[ptx]|y(?:rx|[ptx])|i(?:e[ptx]|x)|ex)\-y|indi\-gurmukh|o(?:Baimai\-tha|\-y)|ha\-gu(?:jarat|rmukh)|roccol|(?:b(?:uo|ur|y)|bie|yr?|ie|ox|u[or])\-y|b[aeiou]\-y|i(?:t\-y|kin)|i\-y|u\-y)i|lackSmallSquare|lackMoonLilith|(?:(?:uon|ei)koet|(?:uon|ei)roc|eyyal)\-khmer|(?:ullet)?\.circled|(?:rokenbar)?\.full|ilabialclick|(?:eachUmbrell|haa\-chakm|ha\-sinhal|ha\-kannad|la\-lepch|ha\-oriy|[bh]a\-dev|[eiou]\-kat|[eiou]\-hir)a|r(?:ac(?:ket(?:righ|lef)|e(?:righ|lef))t|eve)|i(?:talic\-math|cycle|rd)|(?:eating|roken|lue)Heart|(?:u(?:\-bopomof|ng\-k)|\-bopomof|(?:(?:b[wy]eo|b[wy]ae|b(?:wi|y[iou]|oe|e[ou]|ae)|w(?:eo|ae)|y(?:eo|ae|[iou])|e[ou]|oe)(?:[bs]s|l[bghmpst]|n[ghj]|g[gs]|[cdhjkmpt])|(?:b[wy]eo|b[wy]ae|b(?:wi|y[iou]|oe|e[ou]|ae)|w(?:eo|ae)|y(?:eo|ae|[iou])|e[ou]|oe)(?:[bs]|l|n|g)?|(?:b[wy]e[bs]|b[wy]a[bs]|b(?:i[bs]|u[bs]|o[bs]|e[bs]|a[bs])|w(?:i[bs]|e[bs]|a[bs])|y(?:e[bs]|a[bs])|e[bs]|o[bs]|ub)s|(?:b[wy]e|b[wy]a|b[aeiu]|w[aei]|y[ae])l[bghmpst]|(?:b[wy]e|b[wy]a|b[aeiou]|w[aei]|y[ae]|o)n[ghj]|(?:b[wy]e|b[wy]a|b[aeiou]|w[aei]|y[ae]|o)g[gs]|b[wy]e[bs]|b[wy]a[bs]|(?:b[wy]e|b[wy]a|b[aeiu]|w[aei]|y[ae])l|(?:b[wy]e|b[wy]a|b[aeiou]|w[aei]|y[ae]|o)n|(?:b[wy]e|b[wy]a|b[aeiou]|w[aei]|y[ae]|o)g|b(?:o(?:l[bghmpst]|[cdhjkm])|i[cdhjkm]|u[cdhjkm]|e[cdhjkmt]|a[cdhjkm])|b[wy]e[cdhjkmpt]|b[wy]a[cdhjkmpt]|b(?:ol|[wy]e|[wy]a)|u(?:ss?|[kln]|g)|b(?:i[bs]|u[bs]|o[bs]|e[bs]|a[bs])|w(?:i[bs]|e[bs]|a[bs])|y(?:e[bs]|a[bs])|w(?:i[cdhjkmpt]|e[cdhjkmpt]|a[cdhjkmpt])|y(?:e[cdhjkmpt]|a[cdhjkmpt])|i(?:ss|bs|l[bghmpst]|n[ghj]|g[gs]|[hjm])|e(?:n[ghj]|g[gs]|l[bghmpst]|[jkm])|o(?:l[bghmpst]|[cdhjk])|u(?:n[hj]|l[bghmpst]|g[gs]|[cdhjm])|y[ae]|i[cdgklns]|e[cdgl]|o[lm]|e[bs]|o[bs]|ub)\-k|oBae\-la|ha\-la|(?:b[aeiou]|w[aei]|i[bt]|e[hnt])\-k)o|oldSaltire|bold\-math|(?:line|dot)below|ha\-telugu|rokenbar|(?:Flour|lowf)ish|illedCap|(?:lackFla|eerMu)g|u(?:ll(?:horn|et)|s|g)|entoBox|[bh]a\-cham|(?:losso|en\-ar)m|(?:(?:bu|o|u)t|b(?:i[pt]|up|o[pt]|ep|a[pt])|ip|ep|op|up)\-(?:yi|ko)|read|[eio]\-ko)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bm(?:(?:e(?:asured(?:Angle(?:WithOpenArmEndingInArrowPointing(?:(?:Down|Up)AndRigh|(?:Down|Up)AndLef)|OpeningLef)|RightAngleWithDo)|dium(?:(?:right(?:pointingangle|curly)|left(?:pointingangle|curly))bracke|(?:flattened)?paren(?:righ|lef))tornamen|em(?:_(?:(?:jeem_(?:k?hah|meem)|meem|jeem)\-ar\.|k?hah(?:_[jm]eem\-ar\.|\-ar\.))in|\-ar\.in)i|tricallongovershor)|o(?:bilePhoneRightArrowAtLef|untainBicyclis|torBoa)|dotaccen)t|(?:e(?:asuredAngleWithOpenArmEndingInArrowPointing(?:Righ|Lef)tAndDow|tal\-han\.pare)|ale(?:(?:WithStrokeAndMale)?AndFemal|WithStrok)eSig|(?:iddledotFinal|w(?:(?:oo?|ii?|e)WestCree|a(?:a(?:WestCree|Naskapi)|WestCree))|Athapascan|oosecreesk|WestCree|Ojibway|Sayisi|ediall|a(?:ai|y))\-canadia|(?:e(?:lodicQitsa\-samarit|\-(?:elbas|avest))|iddleAnnotaion\-h|an(?:Annotaion\-h|Turb)|im\-samarit)a|(?:ee?|o|i|a)Carrier\-canadia|(?:(?:easur|im)e\-shav|an\-(?:old)?georg)ia|onogramForYi|oon\-han\.pare|(?:w(?:oo?|ii|aa)|oo|ii|h)\-canadia|(?:aa?|[eio])\-canadia|(?:w[aei])?\-canadia|\.pare)n|easuredAngleWithOpenArmEndingInArrowPointing(?:Righ|Lef)tAndUp|u(?:ltiply(?:(?:WithCircumflexAccent|In(?:(?:Righ|Lef)tHalf|Double))C|\.c)ircled|lti(?:pl(?:eM(?:easureRest\-musical|usicalNotes)|yWithUnderbar|icationX)|set(?:multiplicat|un)ion|Rest\-musical|map)|(?:sicalKeyboardWithJack|chles)s|asClan\-pahawhhmong|(?:ltiply(?:WithDotAbov|InTriangl)|sicalNot|\-cheroke)e|Carrier\-canadian|ae\-bamum\.phase[CE]|(?:(?:usikatoan|oy(?:koet|roc))\-khm|chgreat)er|sicalKeyboard|s(?:\-pahawhhmong|hroom)|\-(?:bamum\.phaseD|k(?:ata\.(?:circled|half)|o)|ethiopic|hira|yi)|nahleft\-hb|sic\-syriac|small\-kata|sicalScore|[afglsvw]Square|m(?:Square|\-ko)?|lti(?:set|ply)|\-(?:bamum|kata)|e\-cham|(?:r?x|o[ptx]?|r|[pt])\-yi|(?:lt?|ss|bs|l[bghmps]|n[ghj]|g[gs]?|[bc]|n|[dhjk])\-ko|[pst]\-ko)?|(?:edium(?:(?:Three|Four)PointedPinwheelSt|(?:Three|Four)PointedBlackSt|EightPointedBlackSt|SixPointedBlackSt|VerticalB)|a(?:rk(?:sidewaysnoonghunna)?\-|ddalong\-|\-myanm|dda\-)|(?:eem(?:(?:Threedots|Stop|Dot)?above|(?:Dot)?below|_yeh)|ohammad)\-|(?:eem_alefMaksur|israComm)a\-)ar|baacabbagetree\-bamum\.phaseC|(?:ercurySublimate[23]|ercurySublimate|arcasite|onth)\-alchemical|(?:a(?:nInBusinessSuitLevitati|\-(?:be|mo))|onogramForYa)ng|(?:orphologicaldivider\-cop|yslite(?:comb)?\-glagoli|i(?:ro)?\-cop)tic|(?:id(?:(?:Dotted(?:LeftStem)?|LeftStem)ToneBar|dle(?:double(?:acut|grav)|grav)eaccent)|longlegturned|acronlow|Turned|hook|inus)?mod|(?:(?:ediumWhiteSquareDuplica|acu)t|inusSignWithCommaAbov|a(?:pSymbolForLighthous|ximiz|\-osag|nsSho)|(?:edium(?:B(?:oldWhite|lack)|White)Circ|ediumwhitecirc|ieuma?\-ko\.circ|oodBubb)l|inusSignInTriangl|etrical(?:penta|t(?:etra|ri))sem|o(?:n(?:eyMouth|key)|use)Fac|etricalbrev|easuredangl|middletild|a\-cheroke|[eio]\-cheroke|v\-cheroke|eatOnBon|i(?:cro(?:scop|phon)|nut)|inustild|inimiz)e|(?:e(?:dium(?:Eight|Five|Six)SpokedAsteris|ssenianten\-ancientGree|tretes\-gree)|palatalhoo)k|(?:eunjomndeuq|onnggeuaet|veuaengam|oompuq|oomeut|baq)\-bamum\.phaseA|etrical(?:twoshorts|short)overlong|(?:oonNoteheadWhite|oonNoteheadBlack|inimaBlack|axima|ezzo)\-musical|(?:etricallongovertwoshort|i(?:dlinehorizontalellipsi|n(?:us(?:SignWith(?:Fall|Ris)ingDot|plu)|ibu))|anAndWomanHoldingHand|(?:ediumGreek|altese)Cros|o(?:therChristma|neyWing|del))s|(?:nyamYigGiMgoRgyan|chuCan(?:Inverted)?Sub|chanrtags(?:fina|init))\-tibet|(?:bitmbaaket|f(?:onteuae|iya)q|eu(?:tnggeet|q)|b(?:a(?:maele|ara)e|euri|uoq)|ontieen)\-bamum\.phaseB|(?:acron(?:righthalf(?:below)?|lefthalf(?:below)?|(?:acut|grav|brev)e|below)?com|inusbelowcom|em\-h|com)b|(?:b(?:aapicket|irieen|e(?:ekeet|ux)|u(?:aem|e))|gbasaq)\-bamum\.phaseC|a(?:embgbiee\-bamum\.phaseA|n(?:j(?:euaen|uq)a\-bamum\.phaseB|s(?:iee\-bamum\.phaseC|uae\-bamum\.phaseA)|telpieceClock|at)|(?:keuaeri|emba)\-bamum\.phaseC|(?:e(?:m(?:kpen|veux)|keup|nyi)|ppieet)\-bamum\.phaseA|e(?:si\-bamum\.phase[AC]|m\-bamum\.phase[AE])|[eq]\-bamum\.phaseE|p\-bamum\.phaseE|\-(?:bamum\.phase[BEF]|telugu|ko)|r(?:Tshes\-tibet|s)|Sub\-tibet|\-tibet|sumark|ge)|(?:etricaltwoshortsjoi|(?:SidewaysT|t)ur)ned|(?:(?:baaseven|gb(?:ofum|iee|eun)|f(?:eua|ie)e|feut|vop|oni)\-b|a(?:enjet|leeri)\-b|eu[nt]\-b|(?:fon?|buo)\-b)amum\.phaseD|(?:edium(?:Black|White)Small|(?:overs)?squared|m(?:squar|cub)ed|(?:iribaa|eeto)ru|(?:eizier|[vw]meg)a|(?:egat|ikur)on|a(?:ikuro|nsyon|ruku|hha|iru)|o(?:vers|l)|cubed|ega|i(?:ri|l)|ohm|pa|hz|[bsv]|l|g|w|m)Square|(?:(?:i(?:eum(?:(?:Ssangnieun|Ssangsios|PieupSios|Kiyeok|Rieul|Nieun)Jong|(?:P(?:ansios|ieup)|Sios)Compa|(?:P(?:ansios|ieup)|Sios)?Jong|C(?:h(?:ieuchJong|o)|ieucJong|ompa)|(?:tikeut|kiyeok|sios)Cho|HieuhJong|P(?:ieupCho|aren)|aParen)|ss|n[ghj]|l[bghmpst]|[hj])|(?:w(?:eo|ae)|y(?:eo|ae|[iou])|oe)(?:n[ghj]|[cdhjkmpt])|(?:w(?:eo|ae)|y(?:eo|ae|[iou])|w[aei]|y[ae]|oe|e[ou])l[bghmpst]|(?:w(?:eo|ae)|y(?:eo|ae|[iou])|w[aei]|y[ae]|oe|e[ou]|o|i)g[gs]|(?:(?:w(?:eo|ae)|y(?:eo|ae|[iou])|oe)[bs]|w(?:i[bs]|e[bs]|a[bs])|y(?:e[bs]|a[bs])|e(?:u[bs]|o[bs]|b)|ae?b|os|ib)s|(?:w[aei]|y[ae])n[ghj]|e(?:u(?:n[gh]|[cdhjkmp])|o(?:n[ghj]|[cdhjkmpt])|n[ghj]|g[gs]|l[bghmpst]|[chjkp])|a(?:e(?:ss|l[bghmpst]|n[gh]|g[gs]|[cdhjpt])|ss|l[bghmps]|g[gs]|n[gh]|[jm])|w(?:i[cdhjkmpt]|e[cdhjkmpt]|a[cdhjkmpt])|y(?:e[cdhjkmpt]|a[cdhjkmpt])|o(?:bs|l[bghmpst]|n[ghj]|[cjkm]))\-|(?:(?:w(?:eo|ae)|y(?:eo|ae|[iou])|oe)n?|e(?:u(?:nj)?|ss?|on?|d|g|t|l)|(?:w(?:eo|ae)|y(?:eo|ae|[iou])|w[aei]|y[ae]|oe|e[ou])l|(?:w(?:eo|ae)|y(?:eo|ae|[iou])|w[aei]|y[ae]|oe|e[ou]|o|i)g|(?:w[aei]|y[ae])n|ye|o[bdhl]|i[cdklns])\-|a(?:(?:e(?:nj?|[kls]|g)|lt?|h|k|s|d|c)\-|nj\-|\-n|g\-)|(?:(?:w(?:eo|ae)|y(?:eo|ae|[iou])|oe)[bs]|w(?:i[bs]|e[bs]|a[bs])|y(?:e[bs]|a[bs])|e(?:u[bs]|o[bs]|b)|ae?b|os|ib)\-)ko|i(?:n(?:usSignWithDotBelow|y)|l(?:lionssigncomb\-c|kyWa)y|talic\-math)|chuCan(?:Inverted)?\-tibet|(?:eej(?:tsee|sua)b|illions|au)\-pahawhhmong|(?:(?:a(?:nacles|ttock)\-phaistosD|inid)is|im\-syria)c|(?:w(?:aSebatbeit|ee)|w[aei]|ya|oa|ee|aa?|o|i)\-ethiopic|(?:eem(?:_(?:[jm]eem_yeh|k?hah_yeh|meem|alef)\-ar\.f|\-ar\.f)in|a(?:a(?:yyaa)?\-chakm|\-(?:sinhal|kannad|lepch|oriy|dev))|iin\-osmany|ba\-sinhal|(?:la)?\-lepch)a|(?:a(?:rwaridda\-devanagar|i(?:Chattawa|HanaKat|taikhu|yamok|Tri|Tho|Ek)\-tha|\-(?:gu(?:jarat|rmukh)|kayahl|bug|y)|p\-y)|(?:opRadical|i(?:Radical|e[px]|x)|g(?:(?:uo|e)[px]|u[ptx]|[ao][ptx])|g(?:ie|ur)x|g(?:uo|u|e|[ao])|g(?:ie|ur)|ie|ax|y[ptx]|ox|ex|y)\-y|e(?:em\-ar\.med|\-y)|o(?:untFuj|\-y)|oMa\-tha|pa\-bug|(?:o[pt]|it|at)\-y|ip\-y|i\-y|oya)i|(?:edicine\-han|etal\-han|oon\-han|ale\-han|inus)?\.circled|(?:oonViewingCeremon|o(?:untain(?:Cable|Rail)|tor)wa|easuredb)y|odifier(?:soft|hard)sign\-cy|banyi\-bamum\.phase[AC]|berae\-bamum\.phaseC|gbasa\-bamum\.phaseA|erkhakefulaleft\-hb|iddledot\-kata\.half|e(?:eee\-bamum\.phase[DF]|tro|lon|mo)|(?:feuq|gb(?:en|a)|bee|vi|on)\-bamum\.phaseE|(?:beum|iee)\-bamum\.phase[CE]|(?:a(?:rtialArtsUnifor|\-cha)|(?:ountainTrigr|a\-(?:malayal|th)|iim\-adl)a|ai(?:Kang(?:Lai)?|Sat)\-tha|SignFinal\-cha|oduloTwoSu|en(?:_(?:ini|xeh|ech|now))?\-ar)m|inimaRest\-musical|e(?:diumWhiteSquare|e(?:m(?:_(?:[jm]eem|k?hah))?\-ar|ee\-bamum)|rcury)|ben\-bamum\.phaseF|baa\-bamum\.phase[DF]|bit?\-bamum\.phaseC|(?:ediumBlack|a)Square|(?:(?:bold)?script|ediumspace)\-math|bolditalic\-math|(?:en|i)\-bamum\.phaseE|(?:odernPentathl|aMedial\-m|erpers)on|(?:onostablesymbo|a(?:rriageSymbo|cron\.ful|\-tami)|(?:crossedt|onor)ai|eem\-ar\.iso|onth\-tami|ensSymbo|\.ful)l|o\-(?:bamum\.phaseF|ko)|(?:a(?:soracircle|qaf)|emdagesh)\-hb|ahapakhleft\-hb|a\-kata\.(?:circled|half)|o\-kata\.(?:circled|half)|[ei]\-k(?:ata\.(?:circled|half)|o)|(?:a(?:i(?:K[ao]nVowel|Catawa|Tho|Ti|Ek)\-la|n(?:InTuxed|GuaPiMa|\-k)|(?:em?|p)\-k)|\-bopomof|oMa\-la|e(?:u[nt]|n|m)\-k|w[aei]\-k|ya\-k|im\-k|on\-k|(?:o[pt]|it|at)\-k|ip\-k)o|longlegturned|\-bamum\.phase[DF]|inima\-musical|(?:obilePhoneOf|apleLea)f|doubleStruck|ilitaryMedal|(?:(?:Bold)?\-fraktu|in(?:us(?:inf|sup)|f)erio|o\-khme)r|erkhaleft\-hb|ediumSaltire|o(?:bilePhone|u(?:ntain|se)|\-bamum|nkey)|aTodo\-mong|e\-ethiopic|ovieCamera|ben\-bamum|baa\-bamum|bold\-math|en\-bamum|dotbelow|i(?:\-bamum|cro|nus|ll)|a(?:\-bamum|cron|n)|oneyBag|\-bamum|a\-kata|o\-kata|[ei]\-kata|[aeio]\-hira|hook|outh)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bl(?:e(?:ss(?:(?:Than(?:Above(?:SlantedEqualAboveGreaterThanAboveSlanted|GreaterThanAboveDoubleLine|SimilarOr)|ClosedByCurveAboveSlanted)E|overe)qual|(?:ThanOrSlantedEqualToWithDotAboveRigh|orequivalen)t|ThanA(?:ndSingleLineNotEqualTo|boveLeftArrow)|than(?:butnotequ(?:ivalent|al)to|dot)|equalorgreater|orgreater|\.full|small)|ft(?:(?:HarpoonWithBarbUpAboveRightHarpoonWithBarbU|Multima)p|TriangleArrowWithLongTipUp|(?:harpoonwithbarbdown|(?:rightarrow|ha(?:lfring|rpoon))above|a(?:rrow(?:overlay|above)|ngleabove)|anglebelow|arrowbelow|tackbelow)comb|(?:HalfCircleWith(?:T(?:hree|wo)|Four)Dot|FacingSvastiWithDot|MagnifyingGlas)s|(?:curlybracket(?:low|upp)erhoo|torightmar)k|A(?:rrow(?:WithCircledPlus|T(?:hroughX|ipUp)|\.half)|ndRightTack)|(?:ThreeQuarters|ThreeEighths|SevenEighths|FiveEighths|One(?:Quarter|Eighth))?Block|torightembedding|WhiteIndex|BlackIndex|Ceiling)|(?:ft(?:(?:WhiteArrowWithinTriangleA|arrowwithequilaterala|TriangleA)rrowhea|Arrow(?:(?:With(?:(?:Medium|Large)Triangle|Equilateral)A|withtrianglea)rrowhea|FromBarToBlackDiamon|ToBlackDiamon)|HalfBlackDiamon|WritingHan)|ftArrow\.blackCircle|afFlutteringInWin|ft\-han\.circle|ssThan\.circle)d|(?:ft(?:HarpoonWithBarb(?:DownBelow|UpAbove)LongDas|(?:white(?:tortoiseshell|square)bracket|flattenedparenthesis|doubleanglebracket|anglebracket)\-mat)|z)h|ft(?:TriangleArrowWith(?:(?:Very)?Heavy|Medium|Narrow|Bold)Shaf|(?:normalfactor)?semidirectproduc|(?:(?:pointingcurvedangle|blacktortoiseshell|(?:dotted)?substitution|raisedomission|lowparaphrase|transposition|arclessthan|whitecurly|sidewaysu)bra|Ro)cke|ArrowThroughSubse|FacingFis)t|(?:ft(?:squarebracket(?:tickin(?:bottom|top)|lower|upper)corn|HandTelephoneReceiv)|k(?:attak(?:p(?:ramMuoy|(?:ram(?:Be|Pi)|i)i)|(?:pramBu|bu|s)on|pram|muoy|bei)|too)\-khm|velSlid|dg)er|ft(?:(?:Right(?:(?:Double(?:Vertical)?|Vertical)?Strok|LongDoubl|Triangl|Wav)|SideArcAnticlockwis|(?:(?:Double)?Vertical|Double)?Strok|(?:(?:andRight|dbl)Triang|Quadrup|Squigg)l|Wav)e|Fro(?:ntTiltedShadowedWhite|mbar)|BackTiltedShadowedWhite|T(?:(?:woHeadedT)?ripleDash|a(?:il|b))|(?:ToBarOverRightTo|Long(?:Double)?From)Bar|(?:Bottom|Right|Left|Top)ShadedWhite|(?:HeavyCompress|TriangleDash|(?:DoublePai|Squa)r|Compress)ed|Right(?:OpenHeaded|SansSerif|Black)|D(?:oubleD)?ash|OpenHeaded|RightWhite|Twoheaded|SansSerif|Loop|Hook)Arrow|ftArrowAbove(?:Reverse)?AlmostEqualTo|ft(?:ArrowAbove(?:Reverse)?TildeOperato|(?:(?:HarpoonWithBarb(?:Down|Up)|DoubleArrow)FromB|T(?:riangle(?:BesideVertical|ArrowTo)|woHeadedArrowFrom)B|HarpoonWithBarb(?:Down|Up)ToB|squarebracketunderb|arrowhead(?:below|above)\-)a|Floo)r|ft(?:ArrowAboveShortRigh|FingerPos)tArrow|(?:ft(?:Arrow(?:WithNotched)?|DoubleArrow|Fish)Tai|(?:ftRepeatSign\-mus|adOre\-alchem)ica)l|ftverticalbarwithquill|ft(?:sshapedbagdelimi|WhitePoin|BlackPoin)ter|ftArrowWithPlusBelow|ft(?:HalfCircleWithD|anglebracketd)ot|uaem\-bamum\.phaseE|ft(?:Long(?:Double)?|Right(?:Long)?|AndRight|Triple|Heavy|Black)Arrow|t\-bamum\.phase[BD]|ngth\-(?:kannada|telugu)|opard)|(?:e(?:ft(?:HarpoonWithBarb(?:DownAboveRigh|UpAboveLef)tHarpoonWithBarbDow|TriangleArrowWithLongTipDow|ArrowTipDow|DoublePare|OuterJoi)|(?:ft(?:Barb(?:Down(?:RightBarb(?:Down|Up))?|Up(?:RightBarb(?:Down|Up))?)Harpo|squarebracketextensi|OverRightHarpo)|m)o)|(?:o(?:werLeft(?:Ballpoint|Fountain)|ckWithInk)P|abor\-han\.par|\.par|brok)e|i(?:mitedLiability|ter)Sig|argethree(?:ring|dot)sdow|(?:owerLeftCray|dotbelowmacr|aMedial\-m|ongDivisi|car)o)n|(?:e(?:ft(?:TwoHeadedArrowWithTailWith(?:Double)?VerticalStrok|(?:TwoHeadedArrowWithDouble|(?:(?:Right)?Double|TwoHeaded)ArrowWith)VerticalStrok|A(?:rrowWithTailWith(?:Double)?VerticalStrok|n(?:dRightDoubleTurnsti|gerBubb)l)|TriangleArrowDoubleHorizontalStrok|curlybracketmiddlepiec|(?:(?:(?:rightarrowthroug|arrowwit)hc|HalfBlack(?:White)?C)irc|White(?:Small)?Triang|Black(?:Small)?Triang)l|doublewigglyfenc|verticalboxlin|HalfBlackSquar|torightoverrid|torightisolat|(?:Thought|Speech)Bubbl|wigglyfenc|Luggag)|ssThan(?:Or(?:SlantedEqualToWithDotInsid|Approximat)|With(?:QuestionMarkAbov|CircleInsid)|AndNotApproximat))|(?:ineIntegration(?:With(?:Semicirc|Rectang)ularPathAround|NotIncludingThe)Po|ozengeDividedByHorizontalRu|(?:owerRightShadowedWhite|ower(?:(?:Righ|Lef)tQuadrant|Half(?:Inverse|Black))White|arge(?:Blue)?|argeRed)Circ|ower(?:(?:Righ|Lef)tBlack|(?:Righ|Lef)t)Triang|adyBeet)l|(?:owerRightDiagonalHalfBlack|ower(?:RightDropShadowed|LeftHalf|Half)White|o(?:werRightShadowedWhite|g)|ightWhite|[nx]|m)Squar|ogical(?:And|Or)WithDotAbov|ow(?:quotedoubleprim|linecenterlin)|(?:astQuarterMoon|(?:oudlyCr)?ying|ion)Fac|ightningMoodBubbl|(?:ongs(?:diagonal|high)|ambda|high)strok|ightSaltir|a\-osag|acut)e|(?:e(?:ssThanAbove(?:DoubleLineEqual|Similar)AboveGreaterTh|ftArrowThroughLessTh|veltone\-h|\-(?:avest|elbas))|inkingAnnotaion\-h|(?:ong[au]|abat)\-samarit|le\-elbas)an|o(?:wer(?:LeftSemicircularAntic|RightSemicircularC)lockwis|ngLeftSquiggl)eArrow|(?:(?:ig(?:ht(?:righ|lef)ttortoiseshellbracketo|atureOpenEtO)rnam|(?:ongsdot|comma)acc)en|am(?:_(?:(?:khah_m|jeem_[jm])eem|meem(?:_hah)?|h(?:ah(?:_meem)?|eh)|khah|jeem)\-ar\.in|\-ar\.in)i|retroflexhookandbel|(?:(?:l?VocalicMatr)?a|ceTsaCanSub|ceTsaCan|(?:hag|ci)Rtags|ightBeat|aSub)\-tibe|bel)t|(?:o(?:ngDashFromLeftMemberOfDoubleVert|nga(?:Imp|P)erfectaRest\-mus|destone\-alchem|nga\-mus)ica|(?:astQuarterMoon|owBrightness|ink)Symbo|(?:ower(?:Righ|Lef)tPenc|lla\-tam|la\-tam|ightRa|a\-tam)i|(?:ineFeedContr|am\-ar\.is)o|bbarsymbo|oveHote|cur|abe)l|e(?:ss(?:Than(?:OrSlantedEqualTo(?:WithDotAbove)?|ClosedByCurve)|equal)?|ft(?:T(?:woHeadedArrowWithTail|riangleArrow)|RightDoubleArrow|FacingSvasti|DoubleArrow|HalfCircle|WhiteArrow|Arrow)|eee\-bamum|o)|ightcentralizationstrokebelowcomb|(?:argeTripleVerticalBarOperato|(?:ogical(?:AndWith(?:Double)?|OrWithDouble)Underb|i(?:ght(?:T(?:welv|hre)eP|F(?:our|ive)P)ointedBlackSt|ttlesection\-myanm)|ogical(?:And|Or)WithDoubleOverb|(?:l?VocalicMark|l(?:Vocalic|a)|Vocalic|ocative|a)\-myanm|amThreedots(?:below|above)\-|am(?:Doubleb|B)ar\-|am(?:Alef|Dot|V)above\-|doubleb)a|argeLeftTriangleOperato|ightVerticalBa|(?:Bold)?\-fraktu|ineseparato|ogicalo|inferio|ba)r|(?:ogical(?:OrOverlappingLogicalA|a)n|(?:(?:ow(?:invertedexclamationmark|Dotted(?:LeftStem)?ToneBar|errightcornerangle|LeftStemToneBar|ri(?:ghtarrowhead|ng)|leftarrowhead|(?:down|up)arrowhead|circumflex|leftarrow|tilde)|retroflexhook|sinvertedlazy|palatalhook)m|m(?:iddletildem)?)o|argeOrangeDiamon|(?:o(?:gicalnotRevers|wlinedash)|turn)e|(?:abor\-han)?\.circle|argeBlueDiamon|ow\-han\.circle)d|(?:e(?:ftHandedInterlacedPentagr|stobbhere\-adl)|(?:l(?:VocalicMatra|Vocalic|Chillu|la|a)|VocalicMatra|Vocalic|Chillu|a)\-malayal|akeTrigr|aam\-adl|l?a\-th)am|ong(?:doublesolidus|verticalline)overlaycomb|(?:ogical(?:And|Or)WithHorizontalDas|(?:owerLeftPaintbru|l\-middleWel|iraTurki)s|(?:bold)?italic\-mat|(?:bold)?script\-mat|bold\-mat|[sz]digrap|slas)h|(?:a(?:m(?:_(?:hah_(?:alefMaksura|meem|yeh)|alef(?:Hamza(?:below|above)|Ma(?:ksur|dd)a)?|(?:khah_m|jeem_[jm])eem|meem(?:_hah)?|[jm]eem_yeh|yeh)\-ar\.f|\-ar\.f)in|an\-osmany|a\-chakm|\-(?:sinhal|lepch|oriy|dev))|(?:l(?:Vocalic(?:Matra)?|a)|Vocalic(?:Matra)?)\-sinhal|(?:l(?:Vocalic(?:Matra)?\-o|a\-o)|Vocalic(?:Matra)?\-o)riy|(?:l(?:Vocalic(?:Matra)?|la|a)|Vocalic(?:Matra)?)\-dev|haa\-chakm|\-lepch|ibr)a|igature(?:righ|lef)thalfbelowcomb|(?:o(?:ng(?:(?:descend|ris)ing|high|low)tonecomb|wtoneapostrophe)\-nk|argerThanOrEqualT|a(?:janyalan)?\-nk|h?\-bopomof|o(?:Vowel|Ling)\-la|la\-la)o|a(?:mnshutnyam\-bamum\.phaseB|anae\-bamum\.phaseB|p\-bamum\.phase[CE]|ri)|(?:ightFourPointedBlackCus|argethree(?:ring|dot)su|ollipo)p|(?:i(?:ght(?:Eight|Five|Six)SpokedAsteris|tra\-gree)|ow(?:ernumeral\-gree|asteris)|ightCheckMar)k|(?:ogical(?:And|Or)WithMiddleSte|eft(?:ArrowWithDottedSte|FacingEternity\-ar)|iwn\-ar|a\-cha)m|(?:owerThreeQuartersBlo|owerThreeEighthsBlo|owerSevenEighthsBlo|owerFiveEighthsBlo|owerOne(?:Quarter|Eighth)Blo|ower(?:(?:Righ|Lef)t|Half)Blo|doubleStru|ipsti)ck|owerRightCornerWithDot|(?:(?:lVocalic(?:Matra)?|Vocalic(?:Matra)?)\-gujarat|a(?:bialization\-tif|m(?:_meem)?\-ar\.med|\-(?:gu(?:jarat|rmukh)|kayahl|bug|y)|p\-y)|(?:akkhangyao|o(?:Chula|Ling))\-tha|(?:yrRadical|i(?:e(?:Radical|[ptx])|Radical|x)|y(?:rx|[ptx])|yr|i[ept]|o[ptx]|a[tx]|e[px])\-y|la\-gu(?:jarat|rmukh)|[oy]\-y|i\-y|e\-y)i|(?:l(?:Vocalic(?:Matra)?|a)|Vocalic(?:Matra)?)\-kannada|(?:doublemiddletilde|igature(?:righ|lef)thalf|ongs)comb|j(?:udije(?:comb)?\-glagolitic|e\-cy)?|a(?:m(?:(?:_(?:alef(?:Hamza(?:below|above)|Ma(?:ksur|dd)a)|meem|alef|khah|jeem|yeh|hah))?\-ar|bda)|stQuarterMoon|rgerThan)|omnteum\-bamum\.phaseB|(?:l(?:VocalicMatr|l)?|VocalicMatr)?a\-telugu|(?:(?:haManchuAligali|ongvowelTodo)\-mo|aujClan\-pahawhhmo|(?:lVocalic(?:Matra)?|Vocalic(?:Matra)?)\-be|isClan\-pahawhhmo|au\-pahawhhmo|os\-pahawhhmo|ha\-mo|a\-(?:be|mo))ng|(?:(?:w(?:oo|ii|aa?|[io]|e)|oo?|aa?)?WestCree|BeaverDene|eWestCree|hii|a(?:ai|y)|ii)\-canadian|(?:h(?:ee?|u|o|i|a)|ee?|a|i)Carrier\-canadian|(?:ommae|etkut|apaq)\-bamum\.phaseA|(?:eu(?:aep|m)|iee)\-bamum\.phaseD|do(?:ublemiddletilde|t(?:below)?)|(?:owerBladeScissor|i(?:nkedPaperclip|vreTournoi)|(?:ightGreek|orraine)Cros)s|oCarrier\-canadian|eeee\-bamum\.phaseD|u(?:aep\-bamum\.phaseA|Carrier\-canadian|m\-bamum\.phaseD|\-(?:bamum\.phase[ACE]|cherokee|(?:tha|y)i)|e\-tham|(?:rx|o[ptx]?|r|[ptx])\-yi)|aam\-bamum\.phaseE|(?:oo[nt]|aq)\-bamum\.phaseE|(?:i(?:ly|d)\-phaistosDis|ower(?:(?:Righ|Lef)t|Half)Ar|amadh\-syria)c|oq\-bamum\.phase[D-F]|am\-bamum\.phaseC|i(?:q\-bamum\.phaseC|\-bamum\.phaseF)|om\-bamum\.phaseE|l?Vocalic\-telugu|(?:circumflex|line)below|a\-bamum\.phaseF|(?:ogicalnot)?\.full|(?:a(?:s\-(?:old)?|bial\-)georg|oll\-shav)ian|eftClosedEntry|sinvertedlazy|(?:amed(?:dagesh)?|owerdot)\-hb|hookretroflex|a(?:TangLai|e)\-tham|i(?:ghtning(?:Mood)?|\-bamum|ps|ra)|(?:ong(?:Righ|Lef)t|arge(?:Down|Up))Tack|(?:haa?|aa?|[io]|e)\-canadian|(?:w(?:oo|ii|aa|[io]|e)|h(?:oo?|i)|oo)\-canadian|(?:aMedial\-[ct]|Final\-c)ham|palatalhook|middletilde|(?:la\-taila|middler)ing|(?:wa|h)?\-canadian|(?:wa|aa?|oa|ee|e|o|i|u)\-ethiopic|aula\-coptic|owlinecomb|a\-cherokee|[eio]\-cherokee|v\-cherokee|o(?:gicalnot|q\-bamum|zenge|ngs|ck|ve)|a\-kannada|(?:yy|[aoy])\-khmer|a\-bamum|u(?:\-bamu)?m|ha\-cy|izard|comb)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\ba(?:(?:nticlockwiseRotatedDivisionSign\.circl|steriskoperator\.circl|(?:lliance\-han|\-kata)?\.circl|schwarevers|lphabarr)ed|nticlockwise(?:Triangle(?:Bottom|Right|Left|Top)UShaped|(?:Triangle)?OpenCircle|(?:Gapp|Clos)edCircle)Arrow|(?:strological(?:(?:SignSgraGcanCharRta|signsdongtshu)gs|signkhyudpa)|ngkhangGy(?:as|on)|Sub)?\-tibet|(?:lpha(?:(?:dasiap|p(?:silip)?)erispomeni|(?:dasia|psili)?varia|(?:dasia|psili)?oxia|dasia|psili)?ypogegrammen|lefMaksura\-ar\.med|d(?:akbindi|dak)\-gurmukh|(?:nusvar|vagrah)a\-gujarat|(?:iMatra|u(?:Matra)?|i)?\-gu(?:jarat|rmukh)|a(?:Matra\-gu(?:jarat|rmukh)|\-gu(?:jarat|rmukh))|ngkhankhu\-tha|rchaicsamp|in\-ar\.med|\-(?:kayahl|y)|diShakt|e\-bug|\-bug|x\-y)i|(?:pproximatelybutnotactuallyequalt|pproximatelyEqualOrEqualT|l(?:mostequalorequalt|\-k)|(?:yMaiMuan|iMaiMay|m)?Vowel\-la|(?:(?:raeae?Compa|(?:raea(?:Eo|[AIU])|raeaE?|O|U)?Jung|Compa|bs|g[gs]|l[bghs]|nh|j)\-|(?:ss|l[mpt]|c)\-|nj\-|\-n)k|(?:inn|ng?|nn|m)?\-bopomof|u(?:nn)?\-bopomof|i\-bopomof|aVowel\-la|e(?:Vowel\-la|(?:Compa|u?Jung|[bs]s|l[bghmpst]|n[ghj]|g[gs]?|[blms]|[dhjkpt])\-k|n\-k|c\-k)|vocad|ng?\-k|h\-k|s\-k|[bdgk]\-k|m\-k)o|(?:(?:lmostEqualToWithCircumflexA|dota)ccen|malgamationOrCoproduc|n(?:gle(?:bracket(?:righ|lef)t\.ver|Righ|Lef)|dWithDo)|ddressedtothesubjec|in(?:_(?:meem(?:_meem)?|jeem(?:_meem)?)\-ar\.in|\-ar\.in)i|lefMaksura\-ar\.ini|ccurren|dul)t|(?:(?:rrow(?:(?:headrighthead)?upbelow|do(?:ublerightbelow|wn)|head(?:(?:righ|lef)tabove|(?:righ|lef)tbelow)|leftrightbelow)|nticlockwiseringoverlay|(?:nticlockwisearrow|lmostequalto|sterisk)above|(?:lmostequalto|sterisk|cute)below|cute(?:graveacut|ton)e|cutedotted|(?:cutemacro|lphalati)n|diaeresis|cute|v|o)com|ktieselska|lef\-h|ecom)b|(?:lternateOneWayLeftWayTraff|a(?:Pharynge|Glott)al\-ethiop|Pharyngeal\-ethiop|(?:l(?:efDialectP|fa)|inOld)\-copt|zucomb\-glagolit|Glottal\-ethiop|zu\-glagolit)ic|(?:lef(?:MaksuraAlefabove|Hamza(?:below|above)|Fathatan|Wasla|Madda)?\-ar\.fin|in(?:_(?:meem_(?:alefMaksura|yeh)\-ar\.|alefMaksura\-ar\.|[jm]eem_meem\-ar\.|yeh\-ar\.)f|\-ar\.f)in|lefMaksura\-ar\.fin|(?:bbreviation|vagraha(?:comb)?|nusvara|(?:nudatt|(?:Cand|wMat)r)a|iMatra|u(?:Matra)?|Short|c(?:omb|ute)|i|w)?\-dev|(?:nusvara|ilength|vagraha|iMatra|u(?:Matra)?)\-kannad|(?:(?:nusva|iMat|Mat)ra|uMa(?:tra|rk))\-chakm|a(?:Matra\-kannad|Vowel\-lepch|Matra\-chakm|Matra\-oriy|Matra\-dev|\-(?:o(?:sman|ri)y|kannad|chakm|dev))|(?:nusvara|iLength|vagraha|u(?:Length|Matra)?|iMatra|i)?\-oriy|(?:lef)?\-osmany|(?:small\-hi|mpho|\-hi)r|i\-kannad|notelei|\-kannad|\-lepch)a|(?:(?:(?:in(?:(?:T(?:wodots(?:horizont|vertic)al|hreedotsdown))?above|Threedots(?:below)?)|ctivateformshaping|lef(?:Wavyhamza)?below|lef(?:Wavyhamza|LamYeh|T(?:hree|wo))?above|steriskArt|llahlong|fghani|leflow|layhe|llah|kbar)\-|ngleWithUnderb|vhorizontalb)a|(?:forementioned|iMark|sat)?\-myanma|(?:nusvara|u)\-myanma|a(?:Tall)?\-myanma|Bold\-fraktu|sterisk\-a|\-fraktu|inferio)r|(?:(?:nticlockwisecontourintegr|(?:rpeggiato(?:Down|Up)\-mus|(?:lef|in)\-egyptolog)ic|(?:ntimonyOre|(?:quaforti|she)s|qua(?:Vitae|Regia)2|l(?:kali2|um)|rsenic)\-alchemic|u(?:ripigment\-alchemic|str)|(?:qua(?:Vitae|Regia)|l(?:embic|kali)|malgam)\-alchemic|(?:symptotically|ll)equ|ir\-alchemic)a|(?:lef(?:Hamza(?:below|above)|Wasla|Madda)?\-ar\.is|lefMaksura\-ar\.is|cknowledgeContr|in\-ar\.is)o|l(?:ternativekey|eph)symbo|(?:u(?:lengthmark|Matra)?|nusvara|sabove|iMatra|ytham|i)?\-tami|a(?:Matra)?\-tami|n(?:cho|ge)rSymbo)l|(?:stronomicalSymbolForUranu|dmissionTicket|ntennaBar|pproache|lphatono|quariu)s|r(?:rowheadrightheaddownbelow|i(?:ngbelow|es))|(?:(?:ctivatesymmetricswapp|irplaneArriv)i|(?:n(?:usvaraoneAligali|g(?:Todo|Sibe))|h?Aligali)\-mo|righthalfri|v\-pahawhhmo|u\-(?:pahawhhmo|be)|ng\-mo|i\-be|\-(?:be|mo))ng|(?:(?:(?:nticlockwiseIntegra|sser)ti|iMark\-ait|\-ait)o|l(?:pha(?:turned(?:mod)?|(?:inverte|mo)d)?\-lati|liance\-han\.pare)|(?:d(?:ieresis|ot)|lpha)macro|emacro|\.pare|(?:mac|ca)ro)n|lef(?:MaksuraAlefabove|Fathatan)\-ar|(?:(?:laph(?:Superscript)?|bbreviation)\-syria|rrow\-phaistosDis|xe\-phaistosDis)c|lif(?:lengthencomb)?\-adlam|(?:u(?:lengthmark|Matra)|(?:rchaici)?i|vagraha|iMatra)?\-malayalam|(?:bbreviation|a)?\-samaritan|(?:u(?:tom(?:atedTellerMachin|obil)|bergin)|(?:circumflex(?:hookabo|gra)|(?:breve)?hookabo|(?:breve|dbl)gra|gra)v|pproxequalorimag|irplaneDepartur|llAroundProfil|(?:circumflex|breve|ring)acut|stonishedFac|i(?:n(?:vertedbrev|\-osag)|\-osag)|ng(?:uished|ry)Fac|rtistPalett|(?:paato|ruhua|npea)Squar|\-cheroke|cuteAngl|aruSquar|mbulanc|h\-osag|mSquar|strok|\-osag|eacut|acut|ppl)e|l(?:pha(?:(?:dasiap|p(?:silip)?)erispomeni|(?:dasia|psili)?varia|(?:dasia|psili)?oxia|dasia|psili)?|e(?:f(?:Hamza(?:below|above)|Wasla|Madda)?\-ar|mbic))|t(?:tention\-han\.circled|emyslite\-glagolitic|maau\-samaritan|nahhafukh\-hb|thacan\-khmer|hleticShoe|t\-mandaic|omSymbol|\-(?:mandaic|yi|ko)|\.full|small|urned|ilde)?|(?:bbreviation|a[no]?|ee?|[no])?\-avestan|(?:a(?:Overl|L)ong|Shortmod|Overlong|fsaaq|nged|laf)\-samaritan|(?:circumflex|breve)?dotbelow|(?:(?:(?:Blackfoot|cuteFinal|i|[ny])?\-canad|(?:r(?:ray|e)|s?h|ir|do|[gw]e)\-shav|a[iy]?\-canad)i|en\-(?:old)?georgi|(?:n\-old|i?n\-)georgi|\-elbas|s\-rom|a\-sh|\-sh)an|(?:vakrahasany|hsd)a\-khmer|(?:ffrication|ksa|sh?|in|sz|[hq]|[bdgk]|l|m|n|z|r)\-mandaic|i(?:n(?:_(?:alefMaksura|[jm]eem|yeh)\-ar|\-ar)?|rplane)|(?:nusvara|u)\-malayalam|(?:lpharetroflexhoo|retroflexhoo|(?:doubleStru|larmClo)c|r(?:oura|tabe)\-gree|ogone)k|(?:nusvaraya|aeMatra|i(?:Matra)?|u(?:Matra)?|aMatra)\-sinhala|(?:l(?:ternativeplus|ef(?:qamats|lamed))|yinaltone)\-hb|n(?:gle(?:bracket(?:righ|lef)t)?|t)|a(?:(?:Matra\-malayal|Sign\-ch)am|Matra\-t(?:elugu|ibet)|Matra\-beng|\-(?:malayalam|t(?:elugu|ibet)|beng)|Sub\-tibet)|rkaanu\-samaritan|(?:rrowhead(?:(?:righ|lef)t|down|up)|postrophe|cutelow|eTurned|Turned|in)?mod|small\-kata\.half|(?:bold)?script\-math|bolditalic\-math|(?:bbreviation\-ar|postrophe\-ar|ngstro|yb\-ar|\-cha)m|(?:rticulatedLorr|(?:dieresis|breve)\-c|sterisk\-c|lphavrach|leutka\-c|ie\-c)y|nnaau\-samaritan|(?:s(?:cii(?:circum|tilde)|terisk)|mpersand)?\.full|mericanFootball|(?:ngleWithSInsi|scendingNo)de|(?:circumflex|breve)tilde|(?:iLength|vagraha|nusvara|iMatra|u(?:Matra)?|i)?\-telugu|(?:h?short|hlong|long|y)\-deseret|e(?:(?:Matra|e)\-sinhala|rialTramway|\-(?:sinhala|ko|ar)|Volapuk)|mpersandturned|lefMaksura\-ar|\-(?:bamum\.phaseE|k(?:ata\.half|o)|cy)|(?:(?:mpersand|sterisk)s|irplaneS)mall|(?:n(?:usvara|ji)|vagraha|u(?:Length|Matra)|iMatra)\-beng|lef(?:dages|pata)h\-hb|steriskmath|italic\-math|lienMonster|(?:uSign|aSign|q)\-khmer|pproxequal|s(?:mall\-kata|cii(?:circum|tilde)|terisk)|c(?:ircumflex|omb|ute)|(?:iSign\-c|uSign\-c|i\-c|\-t)ham|bold\-math|a?\-sinhala|p\-(?:mandaic|yi|ko)|dieresis|mpersand|ccountof|e(?:Turned)?|sterism|[aei]\-khmer|\-(?:bamum|kata)|yin\-hb|breve|r(?:ing|c)|nkh|y|v|u|o|a)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bi(?:(?:n(?:te(?:rsection(?:BesideAndJoinedWithIntersect|Above(?:BarAbove)?Un)|gral(?:With(?:Intersect|Un)|extens))i|formationDeskPers)o|nte(?:rlockedFemaleAndMale|gralWithTimes)Sig|LoveYouHandSig|zakayaLanter|\-gebakare|iMark\-mo|ota(?:macro|\-lati)|\.pare|caro)n|(?:n(?:te(?:rlinearannotation(?:terminat|separat|anch)|gralAroundAPointOperat)|visibleseparat)o|Bold\-fraktu|i?Mark\-khme|e\-khme)r|n(?:finityNegatedWithVerticalB|te(?:rsectionWithOv|gralWith(?:Und|Ov))erb|hibitformshaping\-)ar|(?:(?:ntegralWithLeftArrowWithH|retroflexh)oo|italicDoubleStruc|doubleStruc)k|(?:denticalToAndSlantedParalle|n(?:creaseFontSizeS|sertions)ymbo|i?Matra\-tami|i\-tami|\-tami|\.ful)l|o(?:ta(?:t(?:ed(?:big)?yus(?:comb)?\-glagolitic|onos)|dialytikaperispomeni|dasiaperispomeni|p(?:silip)?erispomeni|dieresistonos|stroke)|gonek)|(?:n(?:verted(?:ubadamaAligali\-mo|interroba)|hibitsymmetricswappi|terroba)|(?:byam\-pahawhh|Aligali\-|(?:Manchu|ySibe|Sibe|Todo)\-)mo|\-(?:be|mo))ng|(?:(?:nitiali)?zhecomb|zhe(?:Initial)?)\-glagolitic|(?:ntersectionWithLogicalAn|(?:tem\-han)?\.circle|\-kata\.circle|otamo)d|m(?:a(?:geo(?:rapproximatelyequal|f)|cron\-cy)|od\-samaritan|p)|(?:ntegralWithDoubleS|dotlesss)troke|n(?:put(?:Latin(?:CapitalL|L(?:owerL)?)etter|Symbol|Number)|v(?:isible(?:time|plu)|ertedlazy)|creasesA)s|(?:ron(?:CopperOre|Ore2?)\-alchem|nvertedTurn\-mus)ical|(?:(?:n(?:itialzCarrier)?|Blackfoot|Carrier|i)\-canadi|(?:n(?:directquestion\-nub|\-(?:old)?georg)|(?:an|f)\-shav|ce\-shav)i|terationmark\-h|\-(?:canadi|elbas))an|ntegralAverageWithSlash|(?:(?:n(?:tersyllabictsheg\-tib|verseBull)|iMatra(?:Reversed)?\-tib|Matra(?:Reversed)?\-tib)e|n(?:te(?:r(?:sectionWithDo|iorProduc)|gralb)|cremen)|long\-desere)t|(?:(?:nvertedCandraBindu|i(?:Matra)?|Matra)\-dev|ota(?:(?:dialytika|dasia|psili)?var|(?:dialytika|dasia|psili)?ox)i|(?:i(?:Matra)?|Matra)\-sinhal|(?:i(?:Matra)?|Matra)\-kannad|teration\-kat|i?Matra\-chakm|(?:teration)?\-hir|Vowel\-lepch|\-(?:sinhal|kannad|chakm|dev))a|(?:(?:eung(?:(?:Ssangkiyeok|Khieukh|Kiyeok)?Jong|(?:P(?:ansios|ieup)|Tikeut|\-mieum|rieul|Sios)Cho|(?:Thieut|Phieup|hieu)hCho|C(?:h(?:ieuchCh)?o|ieucCho|ompa)|KiyeokCho|a?Paren)|(?:A(?:raea)?|Y(?:eo|a[Oe]|[ou])|Y[ae]|Eu|OI|O|[IU])?Jung|Compa|nh|bs|l[bghmpst]|n[gj]|g[gs]|[bdl]|g|k|c)\-|ss?\-|\-n)ko|(?:(?:(?:denticalWithDotA|hooka)bo|dblgra|gra)v|nverseWhiteCircl|n(?:formationsourc|vertedunderti|comingEnvelop|inguSquar|tiSquar|Squar)|eung(?:U|a)?\-ko\.circl|invertedbrev|(?:dieresis)?acut|ntercalat|\-(?:cheroke|osag)|ceSkat|brev)e|(?:(?:Pharynge|Glott)al\-ethiop|t\-manda|n\-manda)ic|(?:n(?:Alaf)?comb|Long|y)\-samaritan|(?:zhitsa|comb)\-glagolitic|(?:n(?:completeInfinit|boxTra)|zhitsa\-c|ota(?:vrach|\-c)|comb\-c|u\-c|e\-c)y|(?:(?:zhitsadbl|i)grave|eukrainiancomb|o(?:tified(?:ecomb|a))?|ishorttail|dieresis|ishort|e(?:bre|gra)ve|a)\-cy|ndepartingtonemod|(?:nvertedPentagr|iSign\-ch|Sign\-ch|ceCre|i\-th)am|(?:i(?:Matra)?|Matra)\-malayalam|(?:(?:i(?:Matra)?|Matra)\-gu(?:jarat|rmukh)|ri\-gurmukh|\-(?:gu(?:jarat|rmukh)|kayahl|bug|y)|(?:e[ptx]?|[ptx])\-y)i|bolditalic\-math|boldscript\-math|s(?:mall\-kata\.half|hort\-deseret|cript\-math|shar\-(?:oriya|beng)|belowcomb|mall\-hira|ubscript|trokemod)|ndiction\-greek|i?Matra\-telugu|(?:i(?:Mark)?|Mark)\-myanmar|\-(?:bamum\.phaseE|m(?:alayalam|yanmar)|fraktur|telugu|adlam|tham|c(?:ham|y)|ko)|(?:i(?:Matra)?|Matra)\-oriya|(?:(?:nnn?|r|u)\-bopomof|iVowel\-la|h\-(?:bopomof|k)|m\-(?:bopomof|k)|Vowel\-la|\-bopomof|p\-k|t\-k|n\-k)o|n(?:te(?:rsection|gral)|finity)|ota(?:dieresis|dasia|psili)?|auda\-coptic|\-glagolitic|[nt]\-samaritan|(?:italic|bold)\-math|nfinitycomb|nsulardcomb|(?:i(?:Matra)?|Matra)\-beng|s(?:mall\-kata|troke)?|(?:tilde|dot)below|circumflex|\-samaritan|\-kata\.half|ntegraltp|i?\-avestan|Turnedmod|d(?:ieresi|otles)s|i\-telugu|\-osmanya|\-(?:bamum|kata)|m(?:acron|od)|Turned|ni\-arm|luy\-hb|\-oriya|tilde|comb|i\-cy|j(?:\-ko)?)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bu(?:(?:p(?:HarpoonWithBarbLeftBeside(?:Down|Up)HarpoonWithBarbRigh|TriangleArrowWith(?:(?:(?:(?:Very)?Heavy|Medium|Narrow)Sha|LongTipLe|BoldSha)f|LongTipRigh)|WhiteTriangleWithDo|perLeftCornerWithDo|Rocke)|nderscore\.full\.ver|u?Matra\-tibe|subscrip)t|i(?:ghurkirghizyehHamzaabove_alefMaksura\-ar\.init|nvertedbreve|t(?:alic\-math|urned))|(?:ighurkirghizyehHamzaabove_alefMaksura\-ar\.fin|psilon(?:(?:dialytika|dasia|psili)?var|(?:dialytika|dasia|psili)?ox)i|(?:padhmaniya|u(?:Matra)?|Matra)\-kannad|(?:u(?:Matra)?|Matra)\-sinhal|u?Vowel\-lepch|u?Matra\-chakm|(?:u(?:Matra)?|Matra)\-oriy|small\-hir|\-(?:sinhal|o(?:sman|ri)y|kannad|chakm|hir)|\-ar\.fin|pancor)a|i(?:ghurkirghizyehHamzaabove_alefMaksura\-ar)?|(?:pper(?:RightAndLowerLeftAndLowerRight|Left(?:And(?:UpperRightAndLower(?:Righ|Lef)|Lower(?:LeftAndLower)?Righ)t)?|Right(?:AndLowerLeft)?|OneEighth|Half)Bloc|retroflexhoo|doubleStruc|ogone)k|(?:(?:p(?:per(?:rightorlowerlef|leftorlowerrigh)tcurlybracketsecti|Barb(?:Right(?:DownBarb(?:Righ|Lef)tH|h)|Left(?:DownBarb(?:Righ|Lef)tH|h))arpo)|nion(?:Above(?:BarAbove)?Intersect|BesideAndJoinedWithUn)i)o|n(?:ionWithMinus|certainty)Sig|(?:dieresis(?:mac|ca)|psilonmac)ro|(?:n(?:\-(?:old)?georgi|cia\-rom)|p\-shavi)a|psilon\-lati|\-(?:samarit|elbas|avest)a|u\-avesta|caro)n|(?:p(?:TriangleArrowDoubleHorizontalS|ArrowWithHorizontalS|silons)trok|p(?:p(?:er(?:RightDropShadowedWhite|LeftDiagonalHalfBlack|(?:righttolowerlef|lefttolowerrigh)tFill|RightShadowedWhite)Squar|ointingairplan)|per(?:Right(?:ShadowedWhite|Black)|(?:Righ|Lef)tQuadrantWhite|Half(?:Inverse|Black)White|LeftWhite)Circl|Pointing(?:Military)?Airplan|twoheadedarrowfromcircl|(?:R(?:ightHalfBlack|ed(?:Small)?)|per(?:Right(?:Black)?|Left)|(?:LeftHalf|perLeft)Black|(?:Black|White)Small|Black)Triangl)|(?:dieresis|tilde)acut|n(?:amusedFac|icornFac|derti)|horn(?:tild|acut)|\-(?:cheroke|osag)|onSquar|strok|acut)e|(?:p(?:WhiteArrowFromBarWithHorizontal|Arrow(?:OnPedestal(?:Horizont|Vertic)alWhite|To)|HarpoonWithBarb(?:Right(?:From|To)|Left(?:From|To))|TriangleArrowTo)B|nionWithOverb)ar|(?:p(?:(?:BetweenTwoHorizontalBarsArrowH|TriangleArrowh)ea|WhiteArrowWithinTriangleArrowhea|Arrow(?:With(?:(?:Medium|Large)Triangle|Equilateral)A|withtrianglea)rrowhea|arrowwithequilateralarrowhea|silonmo)|m(?:brellaOnGroun|o)|(?:naspirated|Sideways|lefthook|ptack)mo|barmo|smo)d|(?:p(?:andhorizontal(?:(?:triang|circ)le|wave)?\-dentistr|silonvrach)|nderscorewav|comb\-c|k\-c)y|lightcentralizationstrokecomb|p(?:(?:Do(?:uble(?:OnPedestal)?Whit|wn(?:Whit|bas))|OnPedestalWhit)e|(?:rightRe(?:versedRe)?pea|Tip(?:Righ|Lef))t|(?:HeavyCompress|T(?:riangleDash|woHead)|Compress|Squar)ed|andDownTriangle|D(?:o(?:wn(?:SansSerif|Black)|ublePaired)|ash)|DownTriangle|dblTriangle|F(?:ingerPost|rombar)|(?:DownDoub|(?:Quadru|Tri)p)le|SansSerif|AndDown|Do(?:uble|wn)|Heavy|Black)Arrow|(?:psilon(?:d(?:ialytik|asi)ap|p(?:silip)?)erispomen|(?:u(?:Matra)?|Matra)\-gu(?:jarat|rmukh)|(?:daat|ra)\-gurmukh|\-(?:gu(?:jarat|rmukh)|bug)|o[px]?\-y)i|p(?:ArrowheadInARectangleBo|WhiteInde)x|n(?:(?:marriedPartnershipS|dos)ymb|itSeparatorContr)ol|prightdiagonalellipsis|(?:p(?:ArrowWithNotchedTa|perRightPenc|FishTa)i|rine\-alchemica|nderscoredb|u?Matra\-tami|niversa|u\-tami|\.ful)l|(?:pArrow(?:Through\.c|\.blackC)|\-kata\.c|\.c)ircled|m(?:brellaWithRainDrops|acron(?:dieresis|\-cy)|\-ko)|(?:pTackWithCircleAbo|d(?:ieresis|bl)gra|ho(?:rn(?:hookabo|gra)|okabo)|gra)ve|yuqnae\-bamum\.phaseA|nknown\-bamum\.phaseA|(?:(?:Pharynge|Glott)al\-ethiop|shenna\-manda)ic|(?:p(?:silon(?:dieresis)?tono|perBladeScissor)|dieresisSideway|ranu)s|Hamzaabove\-ar\.isol|(?:(?:badama|Half)Aligali|Sibe|Todo)\-mong|ku(?:comb)?\-glagolitic|(?:nionWithLogicalO|Bold\-fraktu|(?:u|a)?Mark\-khme)r|(?:straightstroke|hungarumlaut|kMonograph|s(?:traigh|hor)t|dieresis)\-cy|e(?:\-(?:westernpwokaren|deva|mong)|Mark\-kayahli|Matra\-deva|Sign\-cham|(?:Sibe|Todo)\-mong|Volapuk)?|(?:(?:u(?:Matra)?|Matra)\-malayal|\-(?:malayal|adl|th)|u\-th)am|(?:bar)?shortrightleg|(?:circumflex|dieresis|tilde)below|(?:small\-kata|pArrow)\.half|(?:bold)?script\-math|bolditalic\-math|p(?:TriangleArrow|White(?:Triangle|Arrow)|silon(?:dieresis|dasia|psili)?|Arrow|tack)|n(?:derscore(?:\.full)?|ion)|(?:ptackbelow|diaeresis)comb|(?:ptack|s)abovecomb|Hamzaabove\-ar|u?Matra\-telugu|(?:u(?:Mark)?|Mark)\-myanmar|\-(?:bamum\.phaseF|k(?:ata\.half|o)|fraktur|myanmar|ar\.isol|telugu|tamil|c(?:ham|y))|h(?:ungarumlaut|orn)|pper(?:(?:Righ|Lef)t|Half)Arc|horndotbelow|Mark\-kayahli|(?:ueMatra|u(?:Matra)?|Matra|datta|comb|ue)?\-deva|(?:nn\-bopomof|u?Vowel\-la|\-bopomof|p\-k|n\-k|k\-k)o|(?:(?:(?:EoEu|Yeo|Ye|II|Ae?|U)?Jung|Compa|ss|l[bghmpst]|n[ghj]|g[gs]|j)\-|bs?\-|[cdghlst]\-|\-n)ko|(?:(?:u(?:Matra)?|Matra)\-be|\-(?:be|mo))ng|small\-kata|c(?:ircumflex|omb)|pperdot\-hb|r(?:abovecomb|ing)|bold\-math|Sign\-cham|Sideways|lefthook|dieresis|a\-coptic|dotbelow|u\-telugu|m(?:brella|acron)?|\-(?:bamum|kata|ar)|\-kayah|\.paren|tilde|breve|bar)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\be(?:(?:lementof(?:verticalbaratendof|long)horizontalstrok|ightPetalledOutlinedBlackFlorett|(?:igh_zero\.circledonBlacks|(?:xtremelyHeavyWhite|rrorBarred(?:Black|White)|v)S)quar|x(?:tremelyHeavyWhiteCirc|clamdoub)l|xtremelyHeavySaltir|(?:uropeanPostOff|arOfR)ic|xpressionlessFac|circumflextild|(?:circumflex|macron)acut|uropeanCastl|s(?:ukuudoSquar|hbaselin|trok)|mptyNotePag|vergreenTre|quivalenc|(?:h(?:ch|ts|t|[kp])a\-|in\-)osag|(?:ekaa|rg)Squar|\-(?:cheroke|osag)|a(?:rOfMaiz|cut)|mspac)e|qu(?:alsSign(?:AndSlantedParallelWithTilde|WithBumpy)|ivalentWithFourDots)Above|(?:qualsSignWith(?:TwoDotsAboveAndTwoDots|Dot)B|(?:circumflex(?:dot)?|dot)b)elow|(?:i(?:ght(?:TeardropSpokedPropeller|Spoked)Asteris|talicDoubleStruc)|(?:pidaurean(?:fivehundred|two(?:drachmas)?)\-ancientGre|ogon)e|xtremelyHeavy(?:Five|Six)SpokedAsteris|qualsWithAsteris|doubleStruc)k|(?:nclosing(?:upwardpointingtriangle|circle(?:backslash)?|diamond|keycap|s(?:creen|quare))|qualbelow)comb|(?:(?:xtra(?:High(?:Dotted(?:LeftStem)?|LeftStem)|Low(?:Dotted(?:LeftStem)?|LeftStem))ToneBar|(?:Reversedo|O)pen)m|Turnedopenm|n(?:d(?:high|low)tone|g)m|ight_peri|zhm|shm)od|(?:ightPointed(?:(?:Rectilinear)?Black|Pinwheel)St|mptySetWithOverb|lementof(?:und|ov)erb|above\-myanm|(?:ight)?\-myanm|Sign\-myanm)ar|t(?:a(?:(?:dasiap|p(?:silip)?)erispomeniypogegrammeni|(?:dasia|psili)?variaypogegrammeni|(?:dasia|psili)?oxiaypogegrammeni|(?:dasia|psili)?ypogegrammeni|tonos)|a(?:(?:dasiap|p(?:silip)?)erispomeni|(?:dasia|psili)?varia|(?:dasia|psili)?oxia|dasia|psili)?|nahtaleft\-hb|ildebelow|h(?:\-deseret|comb|mod)?|urned|ilde|\-(?:arm|ko))?|m(?:o(?:jiModifierFitzpatrickType(?:12|[3-6])|d)|pty(?:NotePad|Pages))|n(?:(?:dOf(?:T(?:ransmissionBlock|ext)|Medium)Contro|dOfTransmissionContro|d(?:(?:OfStimm|Phras)e|Slur|Beam|Tie)\-musica|quiryContro|tersymbo)l|velopeDownArrowAbove|velopeWithLightning|d(?:WithLeftArrowAbove|of(?:ayah\-ar|proof))|terprise\-han\.paren|teringtone\-han|(?:(?:middle|left)hook|descender|tail|hook|mod)\-cy|\-(?:(?:old)?georgian|c(?:anadian|y))|g(?:crossedtail|he\-cy)|space|otch)|(?:(?:lementoftwohorizontalstrok|qualtoorpreced)e|xtremelyHeavyGreekCros|a(?:rthGlobeAmerica|stSyriacCros)|ditorialcoroni|yeglasse|xces)s|qual(?:sSignAndSlantedParallel)?|(?:(?:qual(?:sSignAboveTildeOperat|inferi|superi)|i(?:ght(?:inf|sup)|nf)eri)o|Bold\-fraktu|\-(?:blacklette|fraktu|khme)|ight\-khme)r|mptySetWithRightArrowAbove|(?:(?:pentheticYut(?:comb|mod)|Long)\-samarit|(?:qualtoor(?:greater|less)t|xclam\-s|above\-s|ight\-s)h|arthAnnotaion\-h|leven\-rom|\-(?:samarit|elbas|avest|sh)|ight\-rom|i\-elbas|e\-avest)an|(?:(?:(?:(?:psilonLunate(?:Reversed)?|Mail)S|mphasiss|jects)ymb|\-ar\.is)o|ighthRest\-musica|ighthNote\-musica|(?:llipsisvert|arth\-alchem)ica|scapeContro|(?:lementSma|(?:xclam|qual|ight)?\.fu|(?:xclam|mdash)sma|qualsma)l|xistentia|zhcur|shcur)l|(?:(?:(?:ight\.(?:(?:sansSerifB|b)lackC|sansSerifC|doubleC|c)|(?:rrorBarred(?:Black|White)|xcellent\-han|quals)?\.c|\-kata\.c)ircl|nterprise\-han\.circl|open(?:reversed)?clos|ight\-han\.circl|arth\-han\.circl|shsquatrevers|zhrevers|barr)e|rrorBarred(?:Black|White)Diamon|arthgroun|mqua|nqua)d|(?:openre(?:versedre)?|zhre|re)troflexhook|mptySetWithLeftArrowAbove|(?:qualsSignAbove(?:Righ|Lef)tA|lectricA)rrow|(?:arthGlobe(?:AsiaAustrali|EuropeAfric)|(?:ight(?:yArchaic|Archaic|lith)|e(?:Matra)?|Matra)\-sinhal|(?:Candra(?:Matra)?|(?:LongCand|ShortMat)ra|ight(?:comb)?|Matra|Short)\-dev|psilon(?:(?:dasia|psili)?var|(?:dasia|psili)?ox)i|(?:e(?:Matra)?|Matra|ight)\-kannad|(?:i(?:Matra\-chak|ght_com)|Matra\-chak)m|(?:Vowel|ight)\-lepch|(?:ight|e)\-osmany|(?:Matra|ight)\-oriy|ight\-chakm|\-(?:o(?:sman|ri)y|sinhal|kannad|ar\.fin|chakm|dev))a|(?:qualsSignAbovePlusSig|(?:lectricalintersecti|(?:xclamationques|qualtobydefini)ti|xclam\-ait|qualscol)o|xtraterrestrialAlie|lementOfOpeningDow|(?:u\-(?:westernpwo|sgaw)k|(?:ight)?\.p)are|ight\-han\.pare|arth\-han\.pare|xclamdow|zhcaro|caro)n|(?:(?:e(?:Pharynge|Glott)|Pharynge|Glott)al|ighty?)\-ethiopic|(?:(?:Candra(?:Matra)?|Matra)\-gujarat|(?:e(?:Matra)?\-g|konkar\-g)urmukh|e?Mark\-kayahl|ight\-(?:gurmukh|kayahl)|ight\-gujarat|\-(?:gujarat|ar\.med|bug|y)|x\-y)i|(?:(?:circumflex)?hook|mptysetcircle|lementofdot)above|(?:Blackfoot|eCarrier|asternw)?\-canadian|lementOfOpeningUp|(?:agle\-phaistosDis|\-syria)c|(?:qu(?:alandparallelt|i(?:angularT|valentt))|rthanorequalt|uu?Vowel\-la|llipsis\-la|n(?:n?\-bopomof|g\-(?:bopomof|k)|[hj]?\-k)|(?:(?:o(?:Eu|[OU])|o)?Jung|u(?:(?:E[ou]|E|[AOU])?Jung|Compa|[bs]s|l[bghmpst]|n[ghj]|g[gs]|[cdhjkmpt])|oCompa|Compa|o(?:l[bghmpst]|g[gs]|[cdhjkmt])|o[bs]s|on[ghj]|bs|l[bgps]|gs|ss)\-k|e?\-bopomof|[hir]\-bopomof|Vowel\-la|(?:(?:xclam|e)\-n|ight\-n|o(?:l|g|p)?\-|o[bs]\-|on\-|u[bglns]\-|l[mt]\-|lh\-|p\-|k\-|j\-|b\-|d\-|c\-|\-n|g\-)k|ight\-la|gg\-k|h\-k|u\-k|[lm]\-k|s\-k)o|openreversedhook|s(?:asa(?:below|above)\-syriac|h(?:re(?:troflexhook|versedloop)|palatalhook|Old\-coptic)|mall\-hira|timate[ds])|(?:(?:ight\-pahawhh|(?:Sibe|Todo)\-)mo|llipsis\-mo|Matra\-be|ight\-(?:be|mo)|e\-mo|\-be)ng|(?:(?:(?:(?:e(?:Matra)?|Matra|ight)\-malaya|(?:xclam|ight)\-ad)l|(?:i(?:ghtHora\-t|Sign\-c)|e\-t)h|\-(?:malaya|ad)l)a|arthTrigra|xclam\-ar)m|lectricLightBulb|(?:bold(?:script|italic)?\-mat|italic\-mat|flouris|e\-kaya)h|(?:(?:circumflex|macron|dbl)gra|(?:inverted|cedilla)?bre|gra)ve|(?:small)?\-kata\.half|e\-bamum\.phaseF|(?:lmiddlehook|[ls]descender|iotified|fcomb|mSoft|lSoft|[lm]tail|rtick|lhook)\-cy|ight\-hangzhou|(?:e(?:Matra)?|Matra|ight)\-telugu|ight\-tailaing|(?:lifi\-georg|ight\-pers|gg\-shav|rr\-shav|a[rt]\-shav)ian|(?:sh(?:ort)?|long|w)\-deseret|open(?:reversed)?|lectricTorch|(?:e(?:Matra)?|Matra|ight)?\-tamil|(?:(?:mptyDocum|dotacc)en|ulerconstan|(?:llipsis|mdash)\.ver|xclam\.ver|ndash\.ver|\-ar\.ini|lephan|scrip)t|(?:e?Matra|ight)\-tibet|psilon(?:dasia|psili)?|lectricPlug|(?:(?:dieresis|reversed)\-|urocurren)cy|(?:ch(?:_yiwn)?\-|mphasis\-|h\-)arm|psilontonos|Turnedopen|c(?:ircumflex|edilla)|s(?:mall\-kata|h)|(?:ng?|[flmrs])\-deseret|ight\-(?:tha[im]|ar)|ight\-cham|ie\-coptic|dieresis|r(?:eversed|than)|m(?:pty(?:(?:Pag|Not)e|set)|acron|dash)|e\-bamum|l(?:lipsis|ement)|n(?:velope|dash|g)|\-(?:telugu|mong|c(?:ham|y)|ko)|zhtail|(?:sh)?comb|xclam|\-(?:kata|mon|ar)|\-hira|ight|a(?:gle|r(?:th)?)|[flmrs]\-cy|uro|yes|gg|ye|zh|lf)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bo(?:(?:mega(?:(?:dasiap|p(?:silip)?)erispomeni|(?:dasia|psili)?varia|(?:dasia|psili)?oxia|dasia|psili)?ypogegrammen|(?:Candra(?:Matra)?|Matra|m)?\-gujarat|o(?:Matra\-gurmukh|\-(?:gurmukh|kayahl))|Mark\-kayahl|n(?:comingTax|e\-gujarat)|pRadical\-y|ne\-gurmukh|ne\-kayahl|ay\-khamt|Ang\-tha|\-(?:bug|y)|p\-y|t\-y|x\-y)i|(?:(?:ne(?:HundredTwentyEighth(?:Note|Rest)|LineStaff)|rnamentStroke(?:1[01]|[2-9])|rnamentStroke1|ttava(?:Bass|Alt)a)\-musica|(?:ne(?:thousan|hundre)d|Matra|m)?\-tami|il\-alchemica|o(?:Matra)?\-tami|rthogona|ne\-tami|(?:ne)?\.ful)l|(?:(?:(?:penCentreEightPointedStarC|(?:perator|\-kata)?\.c)ircl|ne(?:_(?:(?:zero\.sansSerifB|(?:eight|(?:thre|fiv)e|s(?:even|ix)|zero|four|(?:ni|o)ne|two)\.b)lackC|zero\.sansSerifC|zero\.doubleC|(?:eight|(?:thre|fiv)e|s(?:even|ix)|four|(?:ni|o)ne|two)\.c)|\.(?:(?:sansSerifB|b)lackC|sansSerifC|doubleC|c)|\-han\.c)ircl|verlinedash)e|(?:stroke)?openoturne|ne(?:_(?:(?:eight|(?:thre|fiv)e|four|(?:ni|o)ne|two)_|s(?:even|ix)_|zero_)?perio|thir)|(?:(?:Bottom|Top)half|penshelf|Open)mo|rangeDiamon|mo)d|(?:penCentre(?:TeardropSpoked)?Asteris|ne(?:(?:thousandtalents|thousandstaters|quarter|drachma)\-atticG|h(?:undred(?:talent|stater)s\-atticG|alf\-(?:atticG|g))|quarter\-g)ree|nehalfAlternate\-gree|openretroflexhoo|(?:crAmountOfChe|penLo)c|cr(?:Inverted)?For|doubleStruc|unkia\-gree|(?:(?:range|pen)B|crH)oo|bol\-gree)k|(?:(?:nExclamationLeftRightArrowAbo|(?:circumflexho|ho(?:rnho)?)okabo|(?:circumflex|macron|horn|dbl)?gra)v|(?:ne_zero\.circledonBlacks|vS)quar|penCircuitOutput[HL]Typ|(?:verlinecenterl|rd(?:mascul|femin))in|n(?:coming(?:FireEngin|Automobil)|eButtonMous)|circumflextild|(?:circumflex|tilde|slash|horn)acut|(?:rWithDotI|lowringi)nsid|in(?:vertedbrev|\-osag)|crBeltBuckl|macronacut|horntild|\-cheroke|nsuSquar|omuSquar|crBowTi|\-osag|acut|brev|unc)e|(?:lightcentralizationstroke|penmarkbelow|gonekabove)comb|e(?:turned(?:withhorizontal)?stroke|Matra\-deva|Sign\-cham|Todo\-mong|(?:Compa|Jung|[bs]s|l[bghmpst]|n[ghj]|g[gs]?|[blnst]|[cdhjkp])\-ko|(?:invert|Turn)ed|\-(?:k(?:ayahli|hmer|o)|ar(?:\.(?:fina|isol))?|kayah|mong|deva)|Volapuk|m(?:\-ko|od))?|(?:(?:(?:crBranchBankIdentifica|pposi)ti|pticalDiscIc|ne(?:Symbol\-ait|fracti)|Mark\-m)o|bliqueAngleOpeningDow|mega(?:closed)?\-lati|dotaccentmacro|ne(?:_(?:eight|(?:thre|fiv)e|s(?:even|ix)|zero|four|(?:ni|o)ne|two)|\-han)?\.pare|(?:dieresis|tilde)macro|(?:penHands|kHand)Sig|SidewaysOpe|ogonekmacro|\.pare|caro|de)n|(?:(?:bjectReplacementCharac|ldPersonalCompu)t|openstroke\-blacklett|stroke\-blacklett|(?:penF(?:ileF)?ol|nedotenlea)d|\-blacklett)er|(?:(?:ne(?:thousandArchaic|hundredArchaic|Archaic|lith)|Matra)\-sinhal|(?:ne(?:sixteenth|quarter|eighth|half)?|Matra)?\-oriy|micron(?:(?:dasia|psili)?var|(?:dasia|psili)?ox)i|(?:Candra(?:Matra)?|(?:Short|oe)Matra|necomb|Matra|Short|ne|oe|m)?\-dev|o(?:Matra\-sinhal|Matra\-kannad|Vowel\-lepch|\-(?:osmany|sinhal|kannad))|(?:Matra)?\-kannad|iMatra\-chakm|(?:Vowel|ne)\-lepch|Ma(?:tra|rk)\-chakm|small\-hir|ne\-osmany|ne\-kannad|ne(?:\-chak|_com)m|\-osmany|\-sinhal|\-hir|xi)a|(?:bliqueline(?:below|above)\-syria|xBack\-phaistosDis)c|(?:(?:cclusioncomb)?\-samarit|ne(?:thousand\-rom|(?:Annotaion\-|Symbol\-s)h|\-(?:rom|sh))|lderWom|o\-avest|\-elbas|\-avest|lderM)an|penMailbox(?:Lower|Rais)edFlag|m(?:ega(?:(?:dasiap|p(?:silip)?)erispomeni|(?:dasia|psili)?varia|(?:dasia|psili)?oxia|dasia|psili)?|icron(?:dasia|psili)?|acron)|(?:bliqueAngleOpeningU|verla|loo)p|(?:(?:(?:ne(?:thousand|quarter|h(?:undred|alf))|Matra)\-malaya|(?:ne)?\-malaya|(?:ne)?\-ad)l|o(?:Matra\-malayal|\-(?:malayal|th)))am|(?:(?:Pharynge|aGlott|Glott)al|ne)\-ethiopic|(?:circumflex|horn)dotbelow|(?:(?:(?:DoubleMo|Bi|Mo)nocular|barreddieresis)\-c|verline(?:dbl)?wav|m(?:ultiocular|ega(?:Broad|comb)?)\-c|(?:dieresis|barred)\-c|ptionKe|ldKe)y|(?:(?:Blackfoot|y|n)\-canad|n(?:\-(?:old)?georg|e\-pers)|o\-canad|\-canad)ian|(?:penCentreBlackSta|(?:n(?:comingPoliceC|e\-myanm)|pen(?:kasr|damm|fath)atan\-|\-myanm)a|utlined(?:Black|White)Sta|Bold\-fraktu|ne(?:inf|sup)erio|\-fraktu|inferio|crChai)r|(?:nu(?:comb)?|tu)\-glagolitic|ut(?:lined(?:Greek)?Cross|boxTray)|crD(?:oubleBacksl)?ash|(?:crCustomerAccoun|hungarumlau|rangeHear|lderAdul|scrip)t|(?:(?:Dotabove|nn)\-bopomof|(?:ng|m|o)\-bopomof|u\-bopomof|Vowel\-la|\-bopomof|n(?:e\-la|g?\-k)|O\-la|p\-k|t\-k|h\-k|m\-k)o|(?:n(?:edotovertwodot|comingBu)|tildedieresi|slashSideway|m(?:icron|ega)tono|(?:phiuch|ctop)u)s|ne(?:_zero\.circled|quarter|eighth|half)?|small\-kata\.half|boldscript\-math|bolditalic\-math|(?:ne(?:(?:Less)?Numr\-be|\-(?:tailai|be|mo))|fficeBuildi|Matra\-be|\-be|\-mo)ng|(?:penCentre|rthodox)Cross|(?:o(?:short|long)|short|long|w)\-deseret|(?:ne\-pahawhh|Todo\-)mong|d(?:iaeresiscomb|otbelow)|\-(?:bamum\.phaseE|k(?:ata\.half|o)|cy)|nehalf\-coptic|o(?:Matra\-telugu|u(?:Old)?\-coptic|\-telugu)|(?:Matra|ne)?\-telugu|(?:oMatra\-tib|penSu(?:per|b)s|Matra\-tib|(?:ne|m)\-tib)et|(?:(?:(?:jeon|Hu)Paren|(?:yae|(?:Ye|E)o|ya|Ye|OI?|E|U)?Jung|Compa|ss|bs|l[bghmpst]|g[gs]|n[hj])\-|o(?:Dennen)?\-n|ne\-n|[b-dgj-ls]\-|\-n)ko|(?:verline)?comb|ne\-hangzhou|(?:oze|ak|ut|n|r)\-shavian|i(?:talic\-math|l\-shavian|\-deseret)|neHora\-tham|Bottomhalf|pticalDisc|s(?:mall\-kata|lash)|circumflex|longstroke|dotaccent|gonekcomb|riginalof|ne(?:(?:sev|t)en|fif|nin)th|bold\-math|Sign\-cham|Sideways|dieresis|(?:ne|o)\-khmer|Tophalf|verline|ne(?:sixth|\-(?:tha[im]|cham|ar))|\-coptic|mSymbol|barred|\-(?:bamum|kata)|o(?:gonek|pen)?|(?:ilDru|h\-ar|\-cha)m|tilde|gonek|le\-hb|horn|wl|x|u|i)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bv(?:e(?:r(?:(?:tical(?:BisectingLineWhiteSquar|BarWithHorizontalStrok|LineWithCircleAbov|ZigzagLin|FillSquar|tild)|yHeavy(?:WhiteSqua|Salti)r)e|ticalBar(?:(?:TripleRigh|DoubleLef)tTurnsti|BesideRightTriang)le|yHeavyEightPointedBlackStar|yHeavy(?:Eight|Five|Six)SpokedAsterisk|tical(?:LineWithCircleBelow|line(?:below|above)comb)|(?:yHeavyWhite|ticalFill)Circle|s(?:eComma\-ar|icle))|rtical(?:and(?:(?:bottom(?:righ|lef)|top(?:righ|lef))t|wave)|triangle|circle)\-dentistry|rtical(?:MaleWithStrokeSig|lineextensio)n|(?:rticalTabulationContr|h\-ar\.is)ol|r(?:y(?:Heavy(?:ReverseSolidu|GreekCros|Solidu)|BoldGreekCros)|tical(?:four|six)dot)s|u(?:(?:aepen|x)\-bamum\.phaseC|ae\-bamum\.phaseE|m\-bamum\.phaseB)|(?:rtical(?:linemiddledo|TrafficLigh)|ctorOrCrossProduc|e\-desere)t|rdigris\-alchemical|de(?:comb)?\-glagolitic|r(?:ymuch(?:greater|less)th|sedivider\-nubi)an|e\-bamum\.phase[AE]|e\-ethiopic|eunderbar|w(?:_now)?\-arm|h\-ar\.init|h\-ar\.fina|\-(?:e(?:thiopic|lbasan)|a(?:vestan|r\.(?:fina|isol))|kata|cy)|sta|n(?:us|d))|(?:i(?:negar(?:OfAntimony|[23])|triol2)\-alchemica|(?:oidNotehead|irga)\-musica|i(?:negar|triol)\-alchemica|olumeintegra|a\-tami|\.ful|cur)l|(?:os(?:t(?:shabcee|hia)b|nrua|seev|feem|thom|lub)|wjClan)\-pahawhhmong|(?:owellengthcomb|wa|aa?|[iou])\-ethiopic|(?:(?:owellengthencomb\-ad|isarga\-malaya)l|a\-(?:(?:malaya|ad)l|ch))am|(?:isargaoneAligali|owelseparator)\-mong|(?:ariationIndicator\-h|(?:in\-(?:old)?georg|ow\-shav)i)an|(?:ocalization\-manda|ida\-copt)ic|(?:(?:oicediteration|u)\-hir|(?:oicediteration|u|i)\-kat|i(?:sargay|ram)a\-sinhal|isarga\-kannad|i(?:sarga\-chakm|deoCamer)|isarga\-oriy|i(?:sarga|comb)\-dev|a\-(?:sinhal|ka(?:nnad|t)|lepch|oriy|dev)|o\-kat)a|a(?:(?:jClan|u)\-pahawhhmong|\-telugu)|(?:erticallinelow|turned|oicing|hook)?mod|ueq\-bamum\.phaseF|(?:inverted)?above\-ar|ine\-phaistosDisc|oiced\-kana\.half|(?:bold)?script\-math|bolditalic\-math|om\-bamum\.phaseE|(?:isarga\-gu(?:jarat|rmukh)|a\-(?:gu(?:jarat|rmukh)|kayahl|bug|y)|eh\-ar\.med|[iou]\-y)i|i(?:sarg|ram)a\-myanmar|(?:diagonalstrok|iewdataSquar|ideo(?:cassett|Gam)|ibrationMod|\-cheroke|ampir|tild)e|oicedcomb\-kana|(?:erticallinemo|ictoryHan|\.circle)d|isarga\-telugu|\-middleWelsh|(?:doubleStruc|(?:palatal|right)hoo)k|(?:(?:Bold)?\-fraktu|iriam\-khme|o\-khme)r|(?:urRadical|e(?:pRadical|x)|u(?:rx|[ptx])|i(?:e[ptx]|[px])|ur|i[et]|ep|o[ptx]|a[ptx])\-yi|i(?:talic\-math|r(?:ama\-la|g)o)|isarga\-beng|av(?:dagesh|holam|yod|vav)?\-hb|zmetcomb\-cy|oiced\-kana|bold\-math|(?:\-bopomof|olcan)o|subscript|dotbelow|turned|(?:\.pare|ioli)n|y(?:(?:rx|r|[ptx])?\-yi)?|eh?\-ar|o\-arm|aria|hook|comb)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bz(?:(?:Notation(?:RelationalCompositi|(?:Domain|Range)Antirestricti|Schema(?:Composi|Projec)ti|TypeCol)o|\.pare|caro)n|(?:lamadotted(?:horizontal|angular)|qapha(?:dotted|below|above)|hainSogdian|ain)\-syriac|(?:notation(?:right(?:binding|image)|left(?:binding|image))brack|hee\-deser)et|e(?:ro(?:(?:\.(?:(?:sansSerifB|b)lackC|sansSerifC|c)ircle|_perio)d|(?:WidthNoBreakS|widths)pace|(?:width(?:non)?joine|(?:inf|sup)erio)r|(?:lith\-sinhal|comb\-dev|_comm)a|\-(?:(?:pahawhhmo|tailai|be)ng|malayalam|g(?:u(?:jarat|rmukh)i|reek)|kayahli|m(?:yanmar|ong)|(?:o(?:sman|ri)y|kannad|chakm|dev)a|(?:persi|sh|h)an|t(?:elugu|ibet|amil|ha[im])|lepcha|khmer|a(?:dlam|r)|cham|lao|nko)|Hora\-tham|third|\.full)?|(?:mlja(?:comb)?\-glagolit|e\-ethiop)ic|(?:(?:eCarrier\-canad|Carrier\-canad|n\-(?:old)?georg)i|n\-samarit|\-(?:avest|elbas))an|(?:d(?:escender|ieresis)|mlya)\-cy|\-(?:ethiopic|cy)|e\-deseret|braFace|(?:\-(?:kat|hir)|t)a|[px]?\-yi)|notationbagmembership|(?:hivete(?:comb)?\-glagolit|visigoth|ata\-copt)ic|ain(?:Vinverted)?above\-ar|(?:(?:(?:ha(?:(?:Manchu|Todo)?Aligali|Manchu|Sibe)|a(?:Manchu)?Aligali|aSibe|hi|ra|a)\-|wjThaj\-pahawhh)mo|NotationSchemaPipi)ng|(?:(?:(?:u|o|a|i)?Carrier\-canad|har\-(?:old)?georg|oo\-shav)i|(?:(?:iqaa|aef)\-samari|he\-aves)t|he\-elbas|a\-sh)an|(?:(?:retroflexhook|curl)?mo|\.circle)d|(?:bold)?script\-math|bolditalic\-math|(?:a(?:h(?:_meem)?\-ar\.med|\-y)|(?:(?:ziet|ur|up|ot)Radical|a(?:Radical|[px])|z(?:i(?:e[px]|[ptx])|u[px]|e[px]|o[px]|a[ptx])|(?:zu|zy|y)rx|h(?:y(?:rx|[ptx])|u(?:rx|o[px]|[ptx])|a[ptx]|e[ptx]|o[ptx])|u(?:rx|[tx])|zy[ptx]|(?:uo|ie)[px]|y[ptx]|o[px]|ix)\-y|ha\-gujarat|a\-gurmukh|a\-khamt|(?:ziet|zie|(?:zu|zy|y)r|h(?:yr?|u[or])|ur|up|ot|at|i[pt]|zy|uo|ie)\-y|z[aeiou]\-y|h[aeou]\-y|[ouy]\-y|i\-y)i|(?:ah(?:_meem)?\-ar\.ini|NotationSpo|dotaccen)t|igzag(?:below|above)comb|h(?:ed(?:escender|ieresis)|(?:ebrev|w)e|e)\-cy|ipperMouthFace|retroflexhook|(?:a(?:yindagesh|qef(?:gadol|qatan)|yin|rqa)|inor)\-hb|(?:(?:z(?:ee|aa)|wa|oa|aa|[aiou])\-|h(?:wa|aa?|i|u|o)\-|hee\-|z[aeiou]\-)ethiopic|(?:doubleStruc|palatalhoo|hoo)k|(?:(?:Bold)?\-fraktu|descende)r|italic\-math|he\-ethiopic|(?:middletild|ha\-osag|a\-osag|strok|ombi|acut)e|(?:ha(?:Sub)?|a(?:Sub)?)\-tibet|(?:a(?:in|h)\-ar\.iso|\-musica|\.ful)l|(?:a(?:(?:in|h)\-ar\.fin|\-kat)|h?a\-dev|[iou]\-kat|[aiou]\-hir)a|a(?:h(?:_meem)?|in)\-ar|c(?:ircumflex|omb)|(?:y|i|h)?\-bopomofo|linebelow|bold\-math|a\-kayahli|swashtail|dotbelow|al\-adlam|(?:he|a)\-arm|curl)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bf(?:(?:(?:aceWithStuckOutTongueAndTightlyClosedEy|r(?:ameWithTil|enchFri)|orc)e|aceWithFingerCoveringClosedLip|l(?:owerPlayingCard|e(?:xedBicep|(?:urDeL|n)i)|atnes)|o(?:rkedparagrapho|otprint)|aceThrowingAKis|atherChristma)s|(?:allingDiagonalInWhiteCircleInBlack|m)Square|raction(?:threefor(?:even|odd)|zeroforodd|twofor(?:even|odd)|onefor(?:even|odd))powersoffour\-telugu|a(?:llingDiagonalCrossingNorthEastArrow|a\-bamum\.phaseD)|(?:ourCornerArrowsCirclingAnticlockwis|aceWithStuckOutTongueAndWinkingEy|ace(?:WithHeadBand|Mass)ag|ourthtonechines|ac(?:eWithMonoc|simi)l|l(?:yingEnvelop|agInHol)|orkKnifePlat|(?:ourperemsp|(?:ullMoon|earful|lushed|rog|ox)F)ac|or(?:tuneCooki|kAndKnif)|middletild|axMachin|Strok)e|(?:allingDiagonalCrossingRisingDiagona|(?:o(?:urStringFretboard|rte)|ClefOttava(?:Bass|Alt)a|ermataBelow|usaBlack|usaWhite|lat(?:Down|Up))\-musica|ourLineStaff\-musica|(?:(?:atha(?:tan)?|eh)\-ar\.is|ormFeedContr)o|(?:ermata|Clef|lat)\-musica|(?:ullMoon|arsi)Symbo|errisWhee|our\.ful|\.ful)l|i(?:fty(?:(?:thousand)?staters|thousand|talents)?\-atticGreek|ve(?:_zero\.circledonBlacksquare|(?:(?:t(?:housandt)?|hundredt)alents|hundredstaters|(?:thousan|hundre)d|staters)\-atticGreek|\.(?:(?:sansSerifB|b)lackC|sansSerifC|doubleC|c)ircled|(?:LineStaff\-musica|\.ful)l|(?:(?:Archaic|lith)\-sinhal|comb\-dev|_comm)a|(?:dotpunctuatio|\.pare)n|_zero\.circled|hundred\-roman|\-(?:han\.circled|(?:pahawhhmo|tailai|be)ng|a(?:tticGreek|dlam|r)|han\.paren|malayalam|ethiopic|gu(?:jarat|rmukh)i|hangzhou|kayahli|m(?:yanmar|ong)|(?:persi|rom)an|(?:o(?:sman|ri)y|kannad|chakm|dev)a|t(?:elugu|ibet|amil|ha[im])|lepcha|khmer|cham|shan|lao|nko)|Obols\-greek|Hora\-tham|(?:inf|sup)erior|eighths|_period|dotmark|sixths)?|(?:n(?:ger(?:edTremolo[1-3]|nails)|alBarline)\-musica|(?:rstQuarterMoonSymb|leSeparatorContr)o|(?:nitePartIntegr|rstPlaceMed)a|re\-alchemica)l|(?:nancial|re)\-han\.circled|(?:r(?:st(?:QuarterMoonFac|strongisolat|tonechines)|eEngin)|gurespac|shey)e|(?:fty(?:earlyform|thousand)?\-rom|\-samarit|(?:i\-canad|\-(?:georg|canad))i)an|ftyArchaic\-sinhala|(?:ta(?:comb)?\-glagoli|\-cop)tic|(?:s(?:hCakeSwirlDes|tedHandS)ig|(?:nancial|re)\-han\.pare)n|shingPoleAndFish|rstAnnotaion\-han|nal(?:kaf(?:dagesh)?|pe(?:dagesh)?|(?:wide)?mem|tsadi|nun)\-hb|r(?:i\-bamum\.phaseA|eworks)|r(?:stQuarterMoon|e)|(?:(?:reworkSparkl|leFold)e|lmProjecto)r|nal[hkpt]\-bopomofo|lledbox\.half|(?:fty)?\-ethiopic|ller(?:C(?:ompa|ho)|Jung)\-ko|talic\-math|leCabinet|reTrigram|guredash|lmFrames|lledRect|nsular|ta\-cy|[ptx]?\-yi|sh)?|our_zero\.circledonBlacksquare|(?:a(?:ceWith(?:OpenMouthAndColdSwe|Co(?:wboyH|ldSwe))a|hrenhei)|eh(?:_(?:khah_meem|meem|khah|jeem|hah))?\-ar\.ini|loralHear|dotaccen)t|(?:(?:eh(?:DotbelowThreedotsabove|African|Dotless)|atha(?:Dotabove|Horizont|t(?:anCurly|wodots)|small|Curly|Ring))\-|eh(?:T(?:hreedotsup|hreedots|wodots)|Dotmoved)below\-|o(?:ur(?:PointedBlackSt|dots(?:below|above)\-|throot\-)|otnotemarker\-)|aceScreamingInFe|ehDotbelow\-)ar|(?:ullstopSu(?:pra|b)linear\-syria|e(?:mininedot|Sogdian)\-syria|lute\-phaistosDis|ran)c|(?:aceSavouringDeliciousFo|our_peri|m)od|(?:our\.(?:(?:sansSerifB|b)lackC|sansSerifC|doubleC|c)|(?:emale\-han|our_(?:eight|s(?:even|ix)|(?:thre|fiv)e|four|(?:ni|o)ne|two)|raction)?\.c)ircled|(?:our(?:Teardrop|Balloon|Club)SpokedAsteris|(?:lowerpunctuation|ourdot)mar|(?:rontFacingBabyChi|doubleStru)c|aceWithMedicalMas|palatalhoo|loppyDis|ullBloc)k|(?:(?:rowningFaceWithOpen|aceWithout)Mout|(?:aceWithLookOfTrium|engdigra)p|(?:allingDiagonal|bold)\-mat|(?:bold)?script\-mat|bolditalic\-mat)h|(?:aceWithOpenMouthVomiti|ajClan\-pahawhhmo|our\-pahawhhmo|(?:a(?:Manchu|Sibe)|ourdots)\-mo|our\-tailai|our(?:Numr)?\-be|a\-tailai|orki|a\-mo)ng|(?:aceWithOneEyebrowRais|turn)ed|ormsLightVertical\.half|(?:lattenedopenaabove|ourdotsabove|ermata)?comb|(?:eh(?:_(?:alefMaksura|khah_meem|meem_yeh|yeh)\-ar\.f|\-ar\.f)in|o(?:rty|ur)Archaic\-sinhal|ourlith\-sinhal|(?:ourcomb|our|a)\-dev|our\-o(?:sman|ri)y|our\-kannad|our\-chakm|a\-sinhal|a\-osmany|a\-kannad|our_comm)a|a(?:ceWith(?:StuckOutTongue|OpenMouth)|tha(?:tan)?\-ar)|e(?:ufeuaet\-bamum\.phaseD|ux\-bamum\.phaseB|e\-bamum\.phase[BE]|h\-arm|rry)|u(?:remedy\-bamum\.phaseE|(?:call|et|i)\-bamum\.phaseE|e(?:\-bamum\.phase[CE]|lPump)|se)|(?:aceWith(?:NoGood|Ok)Ges|rameWithPic)ture|(?:w(?:aSebatbeit|ee|[ae]|i)|o(?:rty|ur)?|ee|aa?|ya|u)\-ethiopic|(?:(?:(?:waaWestCree|waa|aai|aa?|oo|e|o)?\-canad|ullstop\-canad|ullstop\-nub|ee\-shav)i|our\-persi|e\-elbas|e\-avest|our\-rom|a\-sh)an|(?:ritu(?:comb)?\-glagoli|ullstop\-cop|ei\-cop)tic|(?:(?:aceWithThermomet|ourLeafClov|enc|old)e|(?:Bold)?\-fraktu|ourinferio|oursuperio|ullstop\-a|our\-khme)r|(?:unctionapplicatio|ourdotpunctuatio|(?:estival\-han|our)?\.pare|our\-han\.pare|u(?:llOuterJoi|neralUr)|ountai|axIco|lori)n|our(?:thAnnotaion\-|Annotaion\-|\-s)han|e(?:h(?:_(?:alefMaksura|meem|khah|jeem|yeh|hah))?\-ar|e\-bamum)|(?:a(?:ceWithTearsOfJo|(?:cto|i)r|mil)|ogg)y|our_zero\.circled|aq\-bamum\.phaseE|o(?:m\-bamum\.phase[EF]|ur\-ar)|our\-han\.circled|(?:a(?:tha(?:tan)?\-ar\.med|\-y)|our\-gu(?:jarat|rmukh)|o(?:(?:ngman|Fan?)\-tha|\-y)|eh\-ar\.med|a\-gurmukh|a\-khamt|(?:u(?:rx|[ptx])|a[tx]|ur|ox|y[ptx]|ap|op|y)\-y|u\-y)i|a\-bamum\.phaseE|ourObols\-greek|(?:our\-malaya|(?:our|a)\-ad)lam|our\-hangzhou|(?:ourHora|a(?:High|Low))\-tham|rameWithAnX|our\-kayahli|our\-m(?:yanmar|ong)|(?:a(?:amae\-bamu|cePal)|u\-bamu)m|riedShrimp|e\-ethiopic|our\-t(?:elugu|ibet|amil|ha[im])|our\-lepcha|o(?:ur(?:throot)?|m\-bamum|g)|allenLeaf|ourfifths|l?a\-lepcha|(?:\-bopomof|oF(?:on|ai)\-la|our\-la)o|our\-cham|r(?:actio|ow)n|(?:our|a)\-nko|l(?:ower)?)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bs(?:(?:a(?:nsSerif(?:Heavy(?:Double(?:Turned)?|LowDouble)CommaQuotationMark|Interrobang)Ornamen|cutedotaccen|ilboa)|(?:u(?:perset(?:Beside(?:AndJoinedByDashWith)?Sub|AboveSu(?:per|b))|bsetAboveSu(?:per|b))s|quareTarg)e|(?:milingFaceWithOpenMouthAndColdSwe|uchth)a|i(?:x(?:PointedStarWithMiddleDo|\-tibe)|nologicaldo)|phericalAngleOpeningLef|(?:criptLigatureEt|washAmpersand)Ornamen|h(?:een(?:_(?:meem_(?:khah|meem)|h(?:ah(?:_meem)?|eh)|meem|khah|jeem)\-ar\.in|\-ar\.in)i|uffleProduc|adeligh)|(?:(?:(?:een_(?:(?:meem|hah)_jeem|jeem_hah)|ad_(?:khah|meem|hah))\-ar\.|(?:een|ad)_meem_meem\-ar\.|(?:een_meem|ad_hah)_hah\-ar\.|een_(?:meem|khah|jeem|hah)\-ar\.|een_heh\-ar\.)in|pade(?:White|Black)Su)i|(?:(?:dotbelow|caron)dotacc|tarAndCresc|commaacc|dotacc|egm)en|(?:u(?:per|b)setWithD|(?:quaredfour|esame)d|(?:kiAndSkiB|quaref)o)o|(?:b(?:rulshad|ubChal)|naLdan|s?aSub|ha(?:Sub|d)?|s?a)\-tibe|(?:parklingHe|tockCh)ar|emicolon\.ver|mashProduc|een\-ar\.ini|ad\-ar\.ini|even\-tibe|peedboa|_)t|(?:(?:mall(?:elementof|contains)verticalbaratendofhorizontals|peakerWithCancellationS|obliques)trok|lantedEqualToOr(?:Greater|Less)ThanWithDotInsid|(?:u(?:per|b)setOfOrEqualToWithDotAbo|oonWithRightArrowAbo|teamLocomoti)v|(?:quareWithContouredOutl|lotMach)in|peakingHeadInSilhouett|peakerWithOneSoundWav|(?:(?:lightly(?:Frown|Smil)|neez)ing|leeping|mirking|leepy|un)Fac|hadowedWhiteCircl|e(?:condtonechines|lfi)|(?:tudioMicr|ax)ophon|tampedEnvelop|(?:amaritansour|havedI)c|(?:p(?:hericalang|outingWha)|InTriang|e(?:mise)?xti|crup)l|esquiquadrat|(?:(?:quareLoze|yri)n|a\-osa)g|quaredcircl|middletild|h(?:intoShrin|a\-osag|ortcak)|a\-cheroke|[uv]\-cheroke|(?:o|e)?\-cheroke|nowflak|altir)e|(?:miling(?:FaceWithSmilingEyesAndHandCovering|CatFaceWithOpen)|eriousFaceWithSymbolsCovering)Mouth|(?:miling(?:FaceWith(?:OpenMouthAndTightlyClosedEy|OpenMouthAndSmilingEy|HeartShapedEy|Sunglass)|CatFaceWithHeartShapedEy)e|(?:peakerWithThreeSoundWav|kullAndCrossbon|(?:taffOfHer|quaredti)m|cal)e|(?:upersetPrecedingSolid|quaredmin|quaredpl|etmin)u|unsetOverBuilding|taffOfAesculapiu|h(?:adowedWhiteCros|uffleArrow|oppingBag)|quareFourCorner|eveneighth|traightnes|unWithRay|agittariu|tarequal|corpiu|ock)s|i(?:milarAbove(?:Greater|Less)ThanAboveEqualsSign|x(?:(?:PetalledBlackAndWhiteFlorett|peremspac)e|_zero\.circledonBlacksquare|(?:(?:StringFretboard|t(?:yFourth(?:Note|Rest)|eenth(?:Note|Rest))|LineStaff)\-musica|\.ful)l|\.(?:(?:sansSerifB|b)lackC|sansSerifC|doubleC|c)ircled|teenPointedAsterisk|Pointed(?:Pinwheel|Black)Star|(?:(?:tyArchaic|Archaic|lith)\-sinhal|comb\-dev|_comm)a|lateform\-roman|teenDnom\-beng|\-(?:han\.circled|(?:pahawhhmo|tailai|be)ng|han\.paren|malayalam|ethiopic|hangzhou|(?:gu(?:jarat|rmukh)|kayahl|y)i|m(?:yanmar|ong)|(?:persi|rom)an|(?:o(?:sman|ri)y|kannad|chakm|dev)a|t(?:elugu|amil|ha[im])|lepcha|khmer|a(?:dlam|r)|cham|shan|lao|nko)|ty\-ethiopic|Hora\-tham|(?:inf|sup)erior|_period|\.paren)|(?:gma(?:Lunate(?:Dotted(?:Reversed)?|Reversed)?Symbo|fina)|ngleBarline\-musica|lver\-alchemica)l|deways(?:Black(?:LeftPointing|Right|Down|Up)|White(?:Right|Down|Left|Up))Index|gn(?:(?:ReversedRotatedRan|LowP|B)a\-|(?:Sa(?:tkaanKuu|wan)|WiangWaak|Mai(?:yamok|Sam)|KaanKuu|O(?:a(?:Above|Below)|[oy])|(?:DokMa|ThamA)i|RaHaam|Caang|Karan|H(?:ang|oy)|Keow|(?:Eu|U)u|Ii|A[aei])\-|(?:Sa(?:tkaan)?|Wiang|Kaan|Ma|Eu|E|O|U|I|A)\-)tham|(?:n(?:dhi(?:postpositionmen|ampersand)\-|sul)|milarMinusSimil)ar|(?:os(?:(?:Kapyeounpieup|P(?:ansios|ieup)|Tikeut|Kiyeok)?Jong|(?:P(?:ieupKiyeok|hieuph)|Ssangsios|Khieukh|Ieung)Cho|(?:Tikeut|Kiyeok|Nieun|Pieup)Compa|(?:Thieut|Hieu)h(?:Jong|Cho)|C(?:h(?:ieuch(?:Jong|Cho)|o)|(?:ieucC)?ompa|ieucJong|ieucCho)|(?:Tikeut|Kiyeok|Nieun|Pieup)Cho|(?:Mieum|Rieul)(?:Jong|Cho)|a?Paren)|n(?:gledottone|[hj])|lh?|ng?|ss|bs|l[bgmpst]|g[gs]?|[bms]|d|[chjk])\-ko|milarOr(?:Greater|Less)Than|(?:(?:Carrier|i)?\-canadi|lhouetteOfJap|ngaat\-samarit|liqua\-rom)an|ee\-bamum\.phaseB|sa\-bamum\.phaseA|nnyiiyhe\-adlam|\-(?:bamum\.phaseF|k(?:ata\.half|o))|(?:osa?\-ko\.circl|\-cheroke|newav)e|\-kata\.circled|gnOfTheHorns|nusoid\-greek|ringuSquare|talic\-math|luqleft\-hb|(?:small\-kat|ddham\-dev|\-hir)a|ma\-coptic|\-ethiopic|ndot\-hb|nferior|(?:e[px]?|p|t)?\-yi|[pt]\-ko)|(?:olidQuiltSquareOrnamentInBlack|youwaera|a(?:ntiim|ikur)u|ent[io]|v|r)Square|(?:outhEastArrowCrossingNorthEas|outh(?:EastArrowAndSou|WestArrowAndNor)thWes|ubsetAboveRigh)tArrow|(?:(?:ublimateOf(?:SaltOf)?Antimony|al(?:tOf(?:CopperAntimoniate|Antimony)|Ammoniac)|ublimateOf(?:SaltOf)?Copper|tratumSuperStratum2|tratumSuperStratum|tarredTrident|cepterOfJove|ublimation|pirit|ulfur|alt|oap)\-alchemica|(?:quareNoteheadBlack|(?:quareNotehead|emi(?:minima|brevis))White|candicusFlexus|e(?:mi(?:minima|brevis)Black|gno)|hortBarline|harp(?:Down|Up)|quareB|ubito)\-musica|(?:(?:ubstituteFormTwo|ynchronousIdle|tartOfHeading|tartOfText)Contr|(?:ubstitut|pac)eContr|h(?:ift(?:Out|In)Contr|(?:adda|een)\-ar\.is)|(?:ukun|een|ad)\-ar\.is)o|(?:oftwareFunctions|(?:plashingSweat|moking)S|leepingS|unS)ymbo|(?:pirantVoicedlarynge|u(?:(?:mmationWithI|rfacei)ntegr|persetnotequ|bsetnotequ)|econdPlaceMed|portsMed)a|emi(?:minima|brevis)Rest\-musica|(?:candicus|harp)\-musica|(?:emicolonsma|piralShe|occerBa|cro)l|(?:emicolon|terling|lash)?\.ful|choolSatche|teamingBow|even\.ful|heqe|nai)l|(?:u(?:persetWith(?:Multiplication|Plus)|bsetWith(?:Multiplication|Plus))SignBel|nowmanWithoutSn)ow|(?:(?:trongcentralizationstrokebelow|eagullbelow|troke(?:short|long)|(?:quar|nak)ebelow|lash(?:short|long))com|h(?:ortverticallineoverlaycom|in\-h)|(?:uspension|chwa)com|piderWe)b|(?:(?:lantedNorthArrowWithHorizontalT|swasht)a|s?a\-tam|ha\-tam)il|(?:(?:(?:h(?:o(?:rthorizontalstrokeFinal|oSayisi|Sayisi|y)|w(?:(?:oo|aa|ii?|[ao])WestCree|eWestCree|oy)|(?:w?e|i)Sayisi|Ojibway|aSayisi|ay)|o(?:uthslaveyk[aeio]h|y)|(?:Dental|h(?:ee?|u|a|i|o)?|ee?|u|o|a)Carrier|w(?:aa?|oo|ii|[eio])WestCree|Athapascan|(?:w(?:aa)?|kwa|[ct]wa|pwa|kw)Naskapi|Blackfoot|Ojibway|h(?:w(?:oo|aa|ii?|o)|oo)|h(?:we|a)|h(?:[aw]a|ii?|e|o)?|w(?:aa|o)?|w(?:oo|ii)|a(?:ai|y)|aa?|w[aei]|oo)\-canad|hi(?:n\-(?:old)?georg|ma\-nub)|an\-(?:old)?georg|(?:ure|o)\-shav|(?:o|e)?\-canad)i|ofMashfaat\-samarit|h(?:iyyaalaa|orta|an)\-samarit|e(?:(?:stertiu|xtan)s|(?:munci|xtul)a|ven)\-rom|ukun\-samarit|even\-persi|(?:sh|hy?)?e\-avest|h?e\-elbas)an|outh(?:East(?:Feathered(?:Heavy)?Black|SansSerif|Double|Heavy|White|Black)|West(?:SansSerif|Double|White|Black))Arrow|emidirectProductWithBottomClosed|(?:(?:(?:een(?:T(?:ahT)?wodotshorizontal|DotbelowDot|Vinverted|Fourdots)|adLamAlefMaksura)above|h(?:een(?:Threedots|Dot)below|adda_alefabove)|(?:eenThree|adTwo)dotsbelow|(?:adThreedots|een)below|hadda_(?:kasr|damm)atan|(?:een(?:Four)?|ad)above|a(?:d_lam_yeh|jdah|mvat|l(?:la|am))|ukunoval)\-|outh(?:Ea|We)stTriangleArrowToB|hort(?:DownTackWithOv|UpTackWithUnd)erb|(?:tressOutlinedWhite|hooting)St|(?:mall(?:elementof|contains)o|olidusWithO)verb|hadowedWhiteSt|adThreedots\-|ukunround\-)ar|h(?:o(?:rt(?:BentDownThenNorthEast|RightArrowAboveLeft|(?:BackslantedSou|SlantedNor)th)Arrow|q\-bamum\.phase[DE]|\-bamum\.phase[EF])|e(?:u(?:aeq\-bamum\.phaseE|ae\-bamum\.phaseD|x\-bamum\.phaseD)|e(?:\-bamum\.phaseD|p))|ueq\-bamum\.phaseC|i(?:q\-bamum\.phase[CE]|i\-bamum\.phase[DF])|(?:ha(?:descender)?|cha)\-cy|u\-bamum\.phase[DF]|we\-cy|a(?:\-cy|rk)|rimp)|even_zero\.circledonBlacksquare|(?:lantedNorthArrowWithHookedHea|hockedFaceWithExplodingHea|(?:(?:tressAnd(?:High|Low)Tone|criptg)m|h(?:allowPanOfFo|o(?:rtequal|ok)m|elfm)|chwam|aurop)o|quaredLogicalAn|piral(?:Calendar|Note)Pa|lopingLargeAn|unBehindClou|outh(?:Ea|We)stBu|even_perio|(?:tarOfDav|qu)i)d|(?:tratianfiftymnas\-ancientGree|h(?:ort(?:UpTackAboveShortDown|Left)Tac|a(?:dedar|mroc))|(?:outh(?:Ea|We)stArrowWithH|chwaretroflexh|palatalh|chwah)oo|(?:ummation)?doubleStruc|ervicemar)k|(?:(?:een_(?:khah|jeem)_alefMaksura|(?:een|ad)_alefMaksura|(?:een|ad)_meem_meem|(?:een_meem|ad_hah)_hah|(?:een_k|ad_)hah_yeh|(?:een_[ry]|ad_[ry])eh)\-ar\.fin|heen(?:_(?:alefMaksura|meem_(?:khah|meem)|hah(?:_meem)?|(?:jeem|hah)_yeh|meem|khah|jeem|[ry]eh)\-ar\.f|\-ar\.f)in|(?:pacingcandrabindu|evencomb|even|sa|ha|a)\-dev|even(?:ty)?Archaic\-sinhal|(?:emivoicedcomb\-ka|atelliteAnten)n|evenlith\-sinhal|(?:ection\-chak|even_com|aa\-chak|tig)m|(?:hiin|a)\-osmany|even\-o(?:sman|ri)y|(?:even|ha)\-kannad|liceOfPizz|een\-ar\.fin|usmall\-kat|even\-chakm|ad\-ar\.fin|ha\-sinhal|s?a\-sinhal|s?a\-kannad|(?:s|h)?a\-oriy|cedill|[aeou]\-hir)a|(?:(?:u(?:per|b)setOfAboveTildeOper|quare(?:Righ|Lef)tOpenBoxOper|quarePositionIndic|(?:quareddot|tar)oper)ato|(?:outhEastArrowToCorn|ymbolForMarksChapt|traightRul|nowboard|unflow|a\-khm|wimm|how)e|(?:amyoksannya|so)\-khme|quaredLogicalO|lopingLargeO|(?:Bold)?\-fraktu|(?:chwa|even)inferio|evensuperio|e(?:micolon\-a|cto)|(?:even|ha)\-khme|urfe|kie)r|(?:quare(?:originalofor(?:not)?|imageofor(?:not)?)equalt|u(?:persetOfAbove(?:Almos|No)tEqualT|bsetOfAbove(?:Almos|No)tEqualT|n\-k)|trictlyequivalentt|(?:milingFaceWithHa|pesmi)l|h\-bopomof|o(?:S(?:eua|ang)\-la|t\-k)|\-bopomof|(?:even|ha)\-la|a(?:lt(?:ill|\-k)|p\-k|d\-k|n\-k)|sa\-la|(?:s(?:i[pt]|u[pt]|o[pt]|ep|a[pt])|[eu]p|at|ut|op)\-k|(?:s[eiu]|w[aei])\-k|om\-k|e[ht]\-k)o|la(?:ntedEqualToOr(?:Greater|Less)Than|sh)|(?:(?:quared(?:Fall|Ris)ingDiagonalSl|wungd)as|topwatc|andwic)h|(?:even\.(?:(?:sansSerifB|b)lackC|sansSerifC|doubleC|c)|(?:uitable\-han|chool\-han|ecret\-han|a\-kata|[eou]\-kata)?\.c)ircled|milingFaceWith(?:SmilingEyes|OpenMouth)|(?:h(?:oqnshutyum|i(?:ndapanji|rae)|u(?:enshuet|m))|(?:euny|onj)am|oq)\-bamum\.phaseA|(?:u(?:per|b)setOfAboveEqualsSig|leepingAccommodatio|(?:upervise|ociety|pecial|tock|tudy|un)\-han\.pare|nowCappedMountai|mallthreedotsdow|even\-han\.pare|(?:(?:elf\-han)?\.p|ha\-sgawk|even\.p)are|(?:peechBallo|tati)o|corpio|atur|cree|poo)n|o(?:lidQuiltSquareOrnament|uth(?:East(?:Triangle)?|West(?:Triangle)?)Arrow|fthyphen)|(?:(?:h(?:ei(?:Cr(?:yptogrammic|ossed)|Old)|ima(?:sima|Old))|tauros)\-cop|(?:lovo(?:comb)?|h(?:ta(?:comb|pic)?|a(?:comb)?))\-glagoli|hima\-cop|(?:ampi|hei|ou)\-cop)tic|(?:(?:sang(?:rieulKhieukh|tikeutPieup|sios(?:Tikeut|Kiyeok)|tikeut|kiyeok|cieuc|rieul|mieum|ieung|nieun|pieup|sios)Jong|sang(?:(?:yeorinhieu|cieuchieu|thieut)h|siospieup|rieul|sios)Cho|sang(?:tikeut|kiyeok|cieuc|hieuh|ieung|nieun|pieup|Sios)Compa|sangaraeaJung|sang(?:tikeut|kiyeok|cieuc|hieuh|ieung|nieun|pieup)Cho|tandard|(?:s(?:w(?:ae|i)|y[iou]|oe|e[ou]|ae)|s[wy]eo|syae|w(?:eo|ae)|y(?:eo|ae|[iu])|oe|eo)(?:l[bghmpst]|n[ghj]|g[gs]|[cdhjkmpt])|(?:(?:s(?:w(?:ae|i)|y[iou]|oe|e[ou]|ae)|s[wy]eo|syae|w(?:eo|ae)|y(?:eo|ae|[iu])|oe|eo)[bs]|s(?:wab|i[bs]|u[bs]|o[bs]|e[bs]|a[bs])|s[wy]e[bs]|sya[bs]|w(?:i[bs]|e[bs]|ab)|y(?:o[bs]|e[bs]|a[bs])|e(?:u[bs]|b)|a(?:e[bs]|[bs])|os)s|s(?:wa(?:ss|[cdhjkmpt])|a(?:n[hj]|[cdhjkm])|i[cdhjkm]|u[cdhjkm]|o[cdhjkm]|e[cdhjkmt])|(?:s(?:wa|i|u|o|e|a)|s[wy]e|sya|w[aei]|y[aeo]|eu)l[bghmpst]|(?:s(?:wa|i|u|o|e)|s[wy]e|sya|w[aei]|y[aeo])n[ghj]|(?:s(?:wa|i|u|o|e|a)|s[wy]e|sya|w[aei]|y[aeo]|eu|u|o)g[gs]|w(?:a(?:ss|[cdhjkmpt])|i[cdhjkpt]|e[cdhjkmpt])|s[wy]e[cdhjkmpt]|sya[cdhjkmpt]|e(?:u(?:n[ghj]|[cdhjkmpt])|ss|l[bghmpst]|n[ghj]|g[gs]|[djk])|a(?:e(?:l[bghmpst]|n[ghj]|g[gs]|[cdhjkmpt])|l[bghmps]|g[gs]|n[ghj]|h)|y(?:o[cdhjkmpt]|e[cdhjkmpt]|a[cdhjkmpt])|u(?:l[bghmpst]|n[ghj]|ss|[dhj])|o(?:bs|l[bghmpst]|n[gh]|[dhjk]))\-|hort(?:rising|high|low)tonecomb\-n|e(?:ven\-n|(?:un?|s|m|l|n|g|c)\-)|(?:s(?:w(?:ae|i)|y[iou]|oe|e[ou]|ae)|s[wy]eo|syae|w(?:eo|ae)|y(?:eo|ae|[iu])|oe|eo)(?:l|n|g)?\-|(?:(?:s(?:w(?:ae|i)|y[iou]|oe|e[ou]|ae)|s[wy]eo|syae|w(?:eo|ae)|y(?:eo|ae|[iu])|oe|eo)[bs]|s(?:wab|i[bs]|u[bs]|o[bs]|e[bs]|a[bs])|s[wy]e[bs]|sya[bs]|w(?:i[bs]|e[bs]|ab)|y(?:o[bs]|e[bs]|a[bs])|e(?:u[bs]|b)|a(?:e[bs]|[bs])|os)\-|(?:s(?:was?|ang?)|w(?:im|as)|s[wy]e|sya|u(?:bs?|[ck-m]|s)|o(?:nj?|[bl]|c)|y[aeo])\-|(?:s(?:wa|i|u|o|e|a)|s[wy]e|sya|w[aei]|y[aeo]|eu)l\-|(?:s(?:wa|i|u|o|e)|s[wy]e|sya|w[aei]|y[aeo])n\-|(?:s(?:wa|i|u|o|e|a)|s[wy]e|sya|w[aei]|y[aeo]|eu|u|o)g\-|a(?:(?:e(?:l|n|g)?|k|j|l|g|c)\-|\-n|m\-))ko|(?:phericalAngleOpeningU|tenographicfullsto|akeBottleAndCu|ummationto|quarec[au])p|upersetAboveLeftArrow|(?:he(?:uaeqtu|tnjaq)|akeuae|ettu)\-bamum\.phaseB|(?:(?:trainer|ling)\-phaistosDis|(?:emkath(?:Final)?|adhe)\-syria|hi(?:(?:eld|p)\-phaistosDis|n\-syria)|aw\-phaistosDis)c|(?:upervise|ociety|pecial|tock|tudy|un)\-han\.circled|(?:(?:sa(?:Manchu)?Aligali|ofthyphenTodo|haSibe)\-mo|even\-pahawhhmo|ha\-shwepalau|even\-tailai|(?:even|sa|ha)\-be|eedli|a\-be)ng|h(?:e(?:en(?:_(?:alefMaksura|meem|khah|jeem|hah|[ry]eh))?\-ar|ux\-bamum)|adda(?:_(?:kasr|damm|fath)a)?\-ar|o(?:rt(?:Down|Up)Tack|\-bamum|ok)?|i(?:i\-bamum|eld|p)|u\-bamum)|h(?:in(?:d(?:ageshsh?ind)?|sh?ind)o|alshele)t\-hb|(?:emivoiced\-kan|a\-kat)a\.half|unriseOverMountains|milingFaceWithHorns|(?:ectionmark|ho(?:rtRikrik|a)|e(?:micolon|ven|e)|eventy|h(?:ee|[aw]a|[au]|i|o)|z(?:wa|ee|aa|[iou])|s(?:ee|aa)|s[aeiou]|wa|aa?|z[ae]|oa|u|o)\-ethiopic|(?:h(?:adda(?:_(?:kasr|damm|fath)a)?\-ar\.med|e(?:en(?:_(?:meem|khah|jeem|h[ae]h)\-ar\.m|\-ar\.m)ed|\-y)|[au]\-y|o\-y)|a(?:ra(?:A(?:iMaim(?:alai|uan)|[aem])?|U(?:ee|u)|Ue?|Ii|I|[EO])\-tha|\-(?:bug|y)|p\-y)|(?:een_(?:meem|khah|jeem|hah)\-ar\.|een_heh\-ar\.|ukun\-ar\.)med|ectionEnd\-bug|e(?:parator\-tif|\-y)|(?:h(?:(?:ur|at|y)Radical|o(?:pRadical|[tx])|y(?:rx|[ptx])|u(?:rx|o[px]|[ptx])|a[px]|e[px])|siRadical|syrx|(?:sie|uo)[px]|syr|sie|h(?:yr?|u[or]|at|et|op)|s(?:y[ptx]|ix|ux|ox|ex|ax)|y(?:rx|[ptx])|ur?x|sy|yr?|ur|ex|ax|uo|ox)\-y|(?:even|a)\-gu(?:jarat|rmukh)|(?:even|ha)\-kayahl|een\-ar\.med|sa\-gujarat|ha\-gu(?:jarat|rmukh)|(?:hy)?a\-kayahl|o(?:S(?:(?:al|u)a|o)|Rusi)\-tha|ad\-ar\.med|(?:paghet|a\-kham)t|(?:s(?:i[pt]|u[pt]|o[pt]|ep|a[pt])|[eu]p|at|ut|op)\-y|s[aeiou]\-y|ot?\-y|u(?:sh|\-y))i|(?:een|ad)_alefMaksura\-ar|(?:etfon|uaet)\-bamum\.phaseC|(?:euaeq|uae|ap|aq)\-bamum\.phaseD|oftShellFloppyDisk|(?:e(?:condAnnotaion\-|ven\-s)|pace\-|aw\-s)han|uaen\-bamum\.phaseE|amba\-bamum\.phaseF|e(?:ux\-bamum\.phase[CF]|at)|(?:uspensionRailwa|peakNoEvilMonke|t(?:atueOfLibert|rawberr)|eeNoEvilMonke|leuthOrSp|quaredKe|ymmetr)y|(?:houlderedopen|a\-kata\.)box|outh(?:East(?:Vine)?|West(?:Vine)?)Leaf|even\-han\.circled|quare(?:original|image)of|u(?:e\-bamum\.phase[BD]|u\-bamum\.phase[ADF])|ot\-bamum\.phase[AD]|(?:chwadieresis|oftsigncomb|emisoftsign|oftsign|chwa)\-cy|(?:om|e[et]|aa)\-bamum\.phaseE|(?:bold)?script\-math|bolditalic\-math|e(?:mi(?:voiced\-kana|colon)|en_(?:meem|khah|jeem|hah)\-ar|ux\-bamum|c(?:tion|ond)|ven)|(?:amekhdagesh|ofpasuq|egolta|heva)\-hb|quaredAsterisk|(?:ection|aGreat|sa)\-myanmar|(?:ummationbotto|emicolon\-bamu|ha(?:demediu|\-ar)|eh\-ar|a\-cha|tadiu)m|(?:(?:even|ha|a)\-malaya|sa\-malaya|ha\-ad)lam|quaredSaltire|even\-hangzhou|(?:evenHora\-th|oftIceCre|(?:s(?:Final|a)|piral)\-ch|(?:s?aHigh|haHigh|akot|aLow)\-th)am|(?:hindagesh|amekh|egol)\-hb|quaredSquare|(?:even|ha|a)\-m(?:yanmar|ong)|[eou]\-k(?:ata\.half|o)|h?e\-ethiopic|even\-t(?:elugu|amil|ha[im])|(?:even|ha)\-lepcha|a(?:d_(?:meem|hah)\-ar|tellite|\-kata|cute|mpi|n)|(?:een_[ry]|ad_[ry])eh\-ar|amba\-bamum|circumflex|even\-a(?:dlam|r)|bold\-math|(?:s|h)?a\-telugu|even\-cham|u(?:u\-bamum|mmation|perset|nrise|bset)|dotbelow|a\-lepcha|terling|ukun\-ar|i(?:\-(?:bamum|kata)|milar|gma|x)|parkles|n(?:owman|ake)|p(?:(?:eak|id)er|a(?:rkl|c)e)|een\-ar|[eou]\-kata|ch(?:ool|wa)|caron|ad\-ar|s[ao]\-ko|kull|c(?:arf|omb)|lope|m(?:ile|od)|a\-ko|hrug)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\br(?:(?:i(?:ght(?:HarpoonWithBarb(?:DownAboveLef|UpAboveRigh)tHarpoonWithBarbDow|TriangleArrowWithLongTipDow|DoublePare|OuterJoi)|bbonArrow(?:Righ|Lef)tDow)|(?:ight(?:squarebracketextensi|OverLeftHarpo|Barb(?:down|Up)Harpo)|e(?:versedsemicol|minderRibb)|dotbelowmacr|car)o|eversed(?:DoubleStrokeNot|Thumbs(?:Down|Up))Sig|(?:e(?:present|s(?:ource|t)|ach)\-han)?\.pare|oundPushpi|a(?:isedM[cd]Sig|(?:dioBut|\-ai)to|mshor))n|(?:ight(?:TwoHeadedArrowWithTailWith(?:Double)?VerticalStrok|(?:TwoHeadedArrowWithDouble|(?:TwoHeaded|Double)ArrowWith)VerticalStrok|ArrowWithTailWith(?:Double)?VerticalStrok|TriangleArrowDoubleHorizontalStrok|verticalboxlin|toleftoverrid)|everseSolidusWithHorizontalStrok|(?:i(?:ght(?:(?:TriangleAboveLeft|WhiteSmall|Black(?:Small)?|White)Triang|(?:Thought|Speech|Anger)Bubb|triang)|f)|nohand|edApp)l|ight(?:curlybracketmiddlepie|doublewigglyfen|wigglyfen)c|(?:i(?:ghtSpeakerWithOneSoundWa|nvertedbre)|dblgra)v|(?:i(?:ghtHalfBlack(?:White)?C|eula?\-ko\.c)ir|ecreationalVehi)cl|(?:fishhook)?middletild|ighttoleftisolat|a(?:c(?:ingMotorcycl|ut)|dioactiv|bbitFac)|obliquestrok|(?:elieved|obot)Fac|espons|strok)e|i(?:ght(?:(?:HarpoonWithBarbUpAboveLeftHarpoonWithBarb|TriangleArrowWithLongTip)Up|ArrowThroughX|WhiteIndex|BlackIndex)|bbonArrow(?:Righ|Lef)tUp|ee\-bamum\.phaseF|i\-bamum\.phase[DF])|(?:aisedHandWithPartBetweenMiddleAndRingFinger|ight(?:SpeakerWithThreeSoundWave|FacingSvastiWithDot|MagnifyingGlas)|e(?:cycling(?:GenericMaterial|Type[1-7]Plastic)|versedtildeequal)|evolvingHeart|ook(?:Black|White)Ches)s|(?:i(?:ght(?:(?:(?:Notched(?:Upp|Low)erRightShadow|UpperRightShadowHeavy|LowerRightShadowHeavy|(?:HeavyCircl|(?:Right|Left|Top)Shad)ed|Shadow(?:Righ|Lef)t|Feathered|FromWall)White|(?:HeavyConcavePointed|CurvedTail(?:Down|Up)Heavy|Triangle|Squat)Black|FrontTiltedShadow(?:ed)?White|B(?:ackTiltedShadow(?:ed)?|ottomShaded)White|(?:Heavy(?:TeardropShank|RoundTipp)|HeavyWedgeTail|(?:HeavyWide|Open)Head|T(?:eardropBarb|riangleDash|wohead)|OpenOutlin|DoublePair|WedgeTail|Squar)ed|(?:(?:Double(?:Vertical)?|Vertical)Strok|S(?:ideArcClockwis|quiggl|trok)|(?:andLeft|dbl)Triangl|LongSquiggl|Quadrupl|Wav)e|DashedTriangleHeavy|T(?:woHeadedTripleDash|ri(?:angleHeavy|pleDash)|henCurvingUp|ipUp|a(?:il|b))|F(?:eathered(?:Heavy)?Black|rombar)|Long(?:Double)?FromBar|(?:angledownzigza|lon)g|HeavyCompressed|T(?:henCurving|ip)Down|Dash(?:edTriangle)?|(?:DraftingPoin|FingerPos)t|TriangleThin|C(?:ircledPlus|o(?:mpressed|rnerDown))|LongDouble|DoubleDash|SansSerif|OverLeft|Triple|Circle|Loop|Hook)Arr|Arrow(?:AboveShortLeftArr|WithPlusBel))|singDiagonalCrossingSouthEastArr)|everseTildeOperatorAbove(?:Righ|Lef)tArr|linebel)ow|(?:ight(?:WhiteArrowWithinTriangleArrowh|Arrow(?:With(?:(?:Medium|Large)Triangle|Equilateral)A|withtrianglea)rrowh|arrowwithequilateralarrowh|DoubleArrowWithRoundedH|TriangleArrowh|BlackArrowh)ea|(?:eversedHandWithMiddleFingerExtend|(?:eversedR)?aisedHandWithFingersSplay|inghalf(?:righ|lef)tcenter|fishhookrevers|longlegturn|egister)e|ight(?:Arrow(?:FromBar)?To|Half)BlackDiamon|(?:i(?:ght(?:Arrow\.blackC|\-han\.c)|ngoperator\.c)|(?:e(?:verseSolidus|ligion\-han)|es(?:ource|t)\-han)?\.c)ircle|everseCheckerBoar|eversedVictoryHan|aisedBackOfHan|a\-kata\.circle|o\-kata\.circle|[ei]\-kata\.circle|u(?:\-kata\.circl|leDelay)e|mo)d|ightHarpoonWithBarb(?:DownBelow|UpAbove)LongDash|(?:(?:i(?:singDiagonalCrossingFallingDiagon|ghtRepeatSign\-music|nforzando\-music)?|(?:(?:e(?:(?:gulusOfAntimony|algar)2?|gulus(?:OfIron|[2-4])|gulus|tort)|ockSalt2?)\-alchem|e(?:verseFinalBarline|peat(?:edFigure[1-3]|Dots))\-mus)ic)a|(?:ight(?:Arrow(?:WithNotched)?|DoubleArrow|Fish)T|(?:double)?crossedt)ai|(?:i(?:ghtverticalbarwithqui|ngingBe)|\.fu)l|everseslashsmal|u(?:gbyFootbal|pee\-tami|msmal)|r?a\-tami|iceBal)l|(?:(?:i(?:ght(?:squarebracket(?:tickin(?:bottom|top)|lower|upper)corn|HandTelephoneReceiv|sshapedbagdelimit|WhitePoint|BlackPoint)|el\-khm)|(?:eplacementCharac|o(?:llerCoa|o)s)t|o(?:lledUpNewspap|\-khm)|(?:eahmuk|obat|yy)\-khm|y\-khm)e|i(?:ght(?:ArrowAbove(?:Reverse)?TildeOperat|Flo)o|ng\-a)|ightangle(?:dotted)?substitutionmarke|a(?:ised(?:dotted)?interpolationmarke|y\-a)|everseSolidusOperato|(?:Bold)?\-fraktu|iceCracke|unne)r|(?:(?:eh(?:Twodots(?:horizontalaboveTah|vertical)|Dotbelowdot|Vinverted|Ha(?:mza|h)|Noon|Alef|Dad)|ightarrowhead(?:Dot)?)above|eh(?:Fourdots|Loop|Ring|v)|ehStroke|asoul)\-ar|(?:i(?:ght(?:TriangleArrowWith(?:(?:Very)?Heavy|Medium|Narrow|Bold)Shaf|(?:(?:normalfactor)?semidirectp|handInteriorP)roduc|anglebracketdo)|bbonArrow(?:(?:Down|Up)Righ|(?:Down|Up)Lef)|ngpoin)|(?:eversed(?:RotatedFloralHeartBull|EmptyS)|ight(?:(?:pointingcurvedangle|blacktortoiseshell|lowparaphrase|whitecurly|sidewaysu)brack|(?:dotted)?substitutionbrack|arcgreaterthanbrack|raisedomissionbrack|ArrowThroughSupers|transpositionbrack|Rock)|e(?:verseSolidusPrecedingS|flexs)ubs|o(?:tated(?:HeavyBlack|Floral)HeartBull|undTarg)|eflexsupers)e|(?:inchenspungsshad|d(?:el(?:Dkar(?:RdelNag|G(?:nyis|cig))|Nag(?:RdelDkar|G(?:nyis|cig))|(?:Dkar|Nag)Gsum)|oRjeRgyaGram)|(?:r(?:VocalicMatr)?|VocalicMatr)a|gyagramshad|jesSuNgaRo|namBcad|doRje)\-tibe|a(?:(?:Fixedform(?:Sub)?\-t|Sub\-t|\-t)ibe|isedFis)|ightFacingFis|noon\-ar\.ini|(?:comma|dot)accen|eturnRigh|eturnLef|o(?:wboa|cke))t|(?:i(?:ght(?:white(?:tortoiseshell|square)bracket|flattenedparenthesis|doubleanglebracket|anglebracket)|singDiagonal|talic)|bolditalic|boldscript|script|bold)\-math|(?:i(?:ghtArrowAbove(?:Reverse)?AlmostEqualT|ng(?:(?:in)?equalt|\-k))|oastedSweetPotat|\-bopomof|o(?:Rot\-la|m\-k)|a(?:(?:em?|n|m)\-k|ti)|w[ai]\-k|ya\-k|e[hn]\-k|(?:ep|ot|at|[ao]p)\-k)o|(?:e(?:verseLightFourPointedPinwheelSt|versedAngleWithUnderb|h(?:Dotbelow|Twodots)\-)|i(?:ght(?:(?:HarpoonWithBarb(?:Down|Up)|DoubleArrow)FromB|HarpoonWithBarb(?:Down|Up)ToB|squarebracketunderb|T(?:woHeadedArrowFrom|riangleArrowTo)B)|nsul)|umaipalaung(?:tone5|fa)\-myanm|r?VocalicMark\-myanm|(?:r?Vocalic|a)\-myanm|aMedial\-myanm|a(?:ilway|cing)C)ar|(?:otated(?:LightFourPointedBlack|WhiteFourPointed)Cus|stirru)p|aised(?:(?:inverted)?exclamationmark|downarrow|uparrow|colon)mod|(?:ightHandedInterlacedPentagr|(?:r(?:VocalicMatra|Vocalic|Chillu|a)|Vocalic(?:Matra)?)\-malayal|a\-(?:malayal|adl|[ct]h))am|(?:i(?:ght(?:ha(?:rpoonwithbarbdown|(?:lfring|rpoon)above)|arrowabove|(?:arrow|tack)below)|ng(?:(?:half(?:righ|lef)t)?below|overlay)?)|eversesolidusoverlay|etroflexhook|rotunda|below)comb|(?:i(?:ghtArrowThroughGreaterTh|s(?:h\-samarit|ingtone\-h))|e(?:duplicationMod\-s|verseAnnotation\-)h|r?e\-elbas|e\-avest)an|(?:ing(?:(?:Bottom|Right|Top)half|Small)?Final|a(?:iseddotFinal|WestCree|ai)|(?:waa|e|o|i)?WestCree|BeaverDene|(?:ee?|o|i|a)Carrier|w?eRCree|Medial|w(?:aa|o)|w(?:oo|ii|ee)|aa?|w[ai]|ii?|ay|oo|o|e)?\-canadian|(?:(?:i(?:eul(?:(?:(?:(?:Yeorinhieuh|Tikeut)H|Kiyeokh|MieumH)ieuh|Kapyeounpieup|(?:pieupPhieup|Khieuk)h|Yeorinhieuh|MieumKiyeok|Ssangkiyeok|P(?:ieup(?:tikeut|Hieuh)|ieup(?:Sios)?|hieuph|ansios)|KiyeokSios|(?:MieumS|Ssangs)ios|Yesieung|Thieuth|Tikeut|Kiyeok|Mieum|Hieuh|Nieun|Sios)?Jong|(?:Yeorinhieuh|KiyeokSios|P(?:ieup(?:Sios)?|hieuph|anSios)|Thieuth|Tikeut|Kiyeok|Mieum|Sios)Compa|(?:kapyeounpieup|s(?:sang(?:tikeut|kiyeok|pieup)|ios)|khieukh|tikeut|kiyeok|pieup|Nieun|cieuc|mieum)Cho|(?:Hieuh)?C(?:ompa|ho)|a?Paren)|ss|bs|g[gs]|n[hj]|[dhjp])|(?:(?:w(?:eo|ae)|y(?:eo|ae|[iou])|eo)[bs]|w(?:i[bs]|e[bs]|a[bs])|y(?:e[bs]|a[bs])|e(?:u[bs]|b)|oe[bs])s|(?:w(?:eo|ae)|y(?:eo|ae|[iou])|w[aei]|y[ae]|eu|eo|oe|i)l[bghmpst]|(?:w(?:eo|ae)|y(?:eo|ae|[iou])|w[aei]|y[ae]|eu|eo|oe?)n[ghj]|(?:w(?:eo|ae)|y(?:eo|ae|[iou])|w[aei]|y[ae]|eu|eo|oe?)g[gs]|(?:w(?:eo|ae)|y(?:eo|ae|[iou])|eo)[cdhjkmpt]|a(?:e(?:[bs]s|l[bghmpst]|n[ghj]|[cdhjkpt])|e?g[gs]|ss|bs|l[bghmpst]|n[ghj]|[hjk])|w(?:i[cdhjkmpt]|e[cdhjkmpt]|a[cdjkmpt])|y(?:e[cdhjkmpt]|a[cdhjkmpt])|e(?:u[cdhjkmpt]|ss|l[bghmpst]|n[ghj]|g[gs]|[jk])|o(?:e[cdhjkmpt]|bs|l[bghmpst]|ss|[dhjk]))\-|(?:(?:w(?:eo|ae)|y(?:eo|ae|[iou])|eo)[bs]|w(?:i[bs]|e[bs]|a[bs])|y(?:e[bs]|a[bs])|e(?:u[bs]|b)|oe[bs])\-|(?:w(?:eo|ae)|y(?:eo|ae|[iou])|w[aei]|y[ae]|eu|eo|oe|i)l\-|(?:w(?:eo|ae)|y(?:eo|ae|[iou])|w[aei]|y[ae]|eu|eo|oe?)n\-|(?:w(?:eo|ae)|y(?:eo|ae|[iou])|w[aei]|y[ae]|eu|eo|oe?)g\-|ra\-n|w(?:ah|e)\-|(?:w(?:eo|ae)|y(?:eo|ae|[iou])|eo)\-|a(?:(?:e[blns]|e?g|s|b|l|c|d)\-|\-n)|ye\-|e[cdglms-u]\-|o[bcels]\-|i[bcgkmnst]\-)ko|e(?:peatArrowCircledOneOverla|versedze\-c)y|i(?:ght(?:T(?:woHeadedArrowWithTail|riangleArrow)|FacingSvasti|(?:Double|Heavy|White)Arrow|BlackArrow|Speaker|Arrow|tack)|ng(?:half(?:righ|lef)t|operator)?|(?:ee|i)\-bamum|bbon)|(?:i(?:ghtAngleVariantWith|ra)|adoverssquared|e(?:ntogen|mu)|ittoru)Square|(?:ight(?:curlybracket(?:low|upp)erhoo|toleftmar)|eferencemar|palatalhoo)k|(?:(?:e(?:peat(?:Voiced(?:Upperhalf)?|Lowerhalf|Upperhalf)?\-ka|h\-ar\.fi)|(?:noon|reh)\-ar\.fi)n|(?:rVocalic(?:Matra)?|Vocalic(?:Matra)?)\-sinhal|(?:r(?:Vocalic(?:Matra)?\-k|a\-k)|Vocalic(?:Matra)?\-k|a\-k)annad|(?:r(?:Vocalic(?:Matra)?|a)|Vocalic(?:Matra)?)\-oriy|(?:r(?:Vocalic(?:Matra)?|a)|Vocalic(?:Matra)?|a(?:comb)?)\-dev|a(?:(?:Sub|n)\-lepch|isedcomm|\-(?:sinhal|lepch)|a\-chakm)|[aeio]small\-kat|u(?:small\-kat|mrotund|\-hir)|a\-osmany|\-lepch|a\-oriy|[aeio]\-hir)a|eversedforkedparagraphos|(?:(?:ollingOnTheFloorLaugh|ight(?:toleftembedd|Ceil)|scriptr)i|a(?:(?:u\-pahawhh|Manchu\-|aSibe\-)mo|\-(?:be|mo)))ng|(?:i(?:ght(?:ArrowWithDottedSte|FacingEternity\-ar)|nghalfleft\-ar)|a(?:dicalsymbolbotto|\-ar)|estroo)m|(?:(?:rVocalic(?:Matra)?|Vocalic(?:Matra)?)\-gujarat|(?:eduplication|a)\-khamt|u(?:p(?:ee\-gujarat|\-y)|(?:r?x|o[px]?|r|t)\-y|\-(?:tha|y))|noon\-ar\.med|ra\-gurmukh|a\-(?:gurmukh|bug|y)|a\-gujarat|oRua\-tha|(?:(?:r(?:yr|u[or])|yr)x|r(?:ot?|[uy])|r(?:yr|u[or])|r(?:y[ptx]|u[ptx]|e[ptx]|o[px]|ax)|yr|y[ptx]|ex|ox|ax)\-y|r[ae]\-y|(?:ep|ot|at|[ao]p)\-y|y\-y|e\-y|o\-y)i|(?:ightarrowhead|ehV)below\-ar|(?:e(?:cordSeparatorContr|h\-ar\.is)|(?:noon|reh)\-ar\.is)ol|(?:r(?:Vocalic(?:Matra)?|ra|a)|Vocalic(?:Matra)?)\-telugu|(?:a(?:middle|lower)diagonal|r(?:Vocalic(?:Matra)?|a)|Vocalic(?:Matra)?|upee(?:Sign|Mark))\-beng|(?:ightHeavyArrowS|ecycledPaperS|eturns|ingS)ymbol|e(?:strictedLeftEntry[12]|ux\-bamum\.phase[EF]|h\-arm)|en(?:much|old)\-bamum\.phaseD|(?:ightHalfBlackS|a(?:d(?:overs)?S|iseds))quare|(?:osette\-phaistosDis|(?:basabelow|basaabove|eversedpe|waha)\-syria|am\-phaistosDis|ightanglear|ish\-syria)c|(?:itsi(?:comb)?\-glagoli|o\-cop)tic|u(?:nningShirtWithSash|Carrier\-canadian|kkakha\-syriac|\-(?:bamum\.phase[CF]|k(?:ata\.half|o)|ethiopic)|uburuSquare|p(?:iiSquare|eeIndian)|e\-tham|(?:ss|l[bghmpst]|n[ghj]|g[gs]|bs?|[gklns]|[cdhj])\-ko|[pt]\-ko|m\-ko|ble)|imgba\-bamum\.phaseE|(?:ight(?:OneEighth)?Blo|doubleStru)ck|h(?:o(?:mbusStop(?:above|below)\-ar|S(?:trokeS)?ymbol|ok(?:turned(?:mod)?)?|tichookmod|subscript|dasia|psili)?|inoceros|a\-(?:oriy|dev)a|a\-(?:beng|cy))|a(?:e(?:m\-bamum\.phaseD|\-bamum\.phaseE)|q\-bamum\.phaseE|i(?:lwayTrack|nbow)|\-(?:telugu|ko)|fe\-hb)|o(?:m\-bamum\.phaseA|\-ko)|e[en]\-bamum\.phaseF|e(?:viamugra|shdage)sh\-hb|(?:ae\-(?:old)?georg|oar\-shav)ian|(?:i(?:krik)?|[wy]a|ee|oa|aa?|o)\-ethiopic|ightArrow\.half|a(?:t(?:ha(?:High|Low)|a)|na)\-tham|e(?:versed(?:Angl|tild)e|peatArrow|ux\-bamum|cycling|h\-ar)|(?:aMedial\-[ct]|Final\-c)ham|a\-kata\.half|o\-kata\.half|[ei]\-k(?:ata\.half|o)|e\-ethiopic|a(?:i(?:sed(?:Hand|dot)|n)|e\-bamum|di(?:cal|o)|bbit|m|t)|subscript|a\-kayahli|turned(?:mod)?|fishhook|do(?:tbelow|uble)|e[en]\-bamum|rightleg|noon\-ar|longleg|r(?:otunda|eh\-ar)|u(?:\-(?:bamum|kata)|pee|m)|script|ose(?:tte)?|a\-kata|o\-kata|[ei]\-kata|esh\-hb|comb)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bh(?:e(?:a(?:vy(?:(?:(?:rightpointingangle(?:quotationmark|bracket)|leftpointingangle(?:quotationmark|bracket))o|(?:Double(?:Turned)?CommaQuotationMark|Low(?:Sing|Doub)leCommaQuotationMark|HeartExclamation|LigatureOpenEt|Ampersand)O|S(?:ingle(?:Turned)?CommaQuotationMark|ansSerifInterrobang|criptLigatureEt)O|ExclamationO|InterrobangO)rnamen|B(?:eat\-tibe|lackHear))|rtTipOnTheLef)t|(?:avy(?:(?:(?:Right|Left|Up)ArrowWith(?:Large)?|DownArrowWith(?:Large)?)EquilateralArrowhea|ArrowShaftWidthOneThir|North(?:Ea|We)stBu|South(?:Ea|We)stBu)|\-kata\.circle)d|(?:avy(?:(?:EightTeardropSpokedPropeller|TeardropSpokedPinwheel|(?:FourBalloon|Eight)Spoked|TeardropSpoked|FiveSpoked|SixSpoked)?Asteris|CheckMar)|r(?:aeumoneplethron|mionian(?:fifty|one|ten))\-ancientGree)k|avy(?:EightPointedRectilinearBlackSt|(?:Twelve|Eight)PointedPinwheelSt|(?:Twelve|Eight)PointedBlackSt|FivePointedBlackSt|SixPointedBlackSt|OutlinedBlackSt|VerticalB)ar|a(?:vy(?:ArrowShaftWidthTwoThird|Minu|Plu)s|v(?:y(?:Multiplication|Ballot)X|enTrigram)|vyOpenCentreCross|rNoEvilMonkey|vyGreekCross|vyCross)|avyArrowShaftWidthOneHalf|(?:a(?:dstoneGraveyard|vyExclamation)S|lms)ymbol|r(?:mitianconjugatematrix|b)|h(?:(?:Doachashmee|goal)\-ar\.i(?:nit|sol)|(?:_(?:meem(?:_[jm]eem\-ar\.|\-ar\.)|jeem\-ar\.)|Alefabove\-ar\.)init|Hamzaabove\-ar\.isol|(?:Vinvertedabove|goalHamzaabove|_(?:alefMaksura|yeh))\-ar|\-ar\.i(?:nit|sol))|avy(?:North(?:Ea|We)|South(?:Ea|We))stVineLeaf|(?:h(?:Doachashmee|Hamzaabove|goal)?\-ar\.fin|adstroke\-dev|small\-kat)a|lmetWithWhiteCross|art(?:Black|White)Suit|\-(?:k(?:ata\.half|o)|h(?:ira|b))|dagesh\-hb|licopter|dgehog|ng(?:hook|mod)|(?:[ou](?:[bs]s|l[bghmpst]|n[ghj]|g[gs]|[cdhjkmpt])|lm?|[ou](?:[bs]|l|n|g)?|ss|l[bghpst]|bs|g[gs]|n(?:[hj]|g)?|[hp]|[ks]|d|b|g|[cjm])\-ko|t(?:\-(?:ko|hb)|a))|(?:(?:o(?:llowQuiltSquareOrnamentInBlack|rizontalFill|o(?:ru|n))|u(?:(?:aradd|iit)o|ran))Squar|e(?:a(?:vy(?:C(?:ircleWith(?:StrokeAndTwoDotsAbov|CircleInsid)|hevronSnowflak)|OvalWithOvalInsid|(?:White(?:DownTriang|Circ)|LargeCirc|Spark)l)|vy(?:Circled)?Saltir|vyWhiteSquar|dphon)|iseieraSquar|kutaaruSquar|rutuSquar)|i(?:gh(?:SpeedTrainWithBulletNos|HeeledSho)|storicSit)|(?:ieuha?\-ko\.circ|yp(?:odiasto|hendoub))l|ammerAndSickl|(?:u(?:gging|shed)F|a(?:msterF|irsp))ac|o(?:tBeverag|rseFac)|aituSquar|ya\-osag|andshak|(?:Pa|on)Squar|a\-osag|aSquar)e|(?:andWithIndexAndMiddleFingersCrosse|(?:appyPersonRaisingOneH|ourglassWithFlowingS)an|(?:orizontalbarnotchC|(?:igh\-han|ave\-han)?\.c)ircle|a\-kata\.circle|[iou]\-kata\.circle)d|ahT(?:ahTwodotshorizont|wodots(?:horizont|vertic))alabove\-ar|(?:ah_(?:meem_(?:alefMaksura|yeh)|alefMaksura|jeem_yeh|yeh)\-ar\.fin|ighspacingdot\-dev|a(?:lant\-(?:kannad|chakm|oriy)|\-(?:sinhal|kannad|lepch)|a\-chakm|\-osmany|\-oriy)|[aiou]small\-kat|a(?:lant)?\-dev|ah\-ar\.fin|la\-lepch|cedill|ryvni)a|(?:igh(?:Dotted(?:LeftStem)?|LeftStem)ToneBar|turned|hook)mod|(?:(?:orizontalMaleWithStrok|ighVoltag)eSig|orizontallineextensio|(?:orizontalBlack(?:Oct|Hex)ag|car)o|(?:(?:a(?:thi\-sgawk|ve\-han\.p)|\.p)ar|ouseGard)e|ea(?:rt(?:WithRibb|Decorati)o|vyD(?:ollarSig|ivisio)))n|(?:undred(?:thousandssign|millions)comb|a(?:rdsigncomb|abkhasian|descender|rdsign|stroke|hook)|we)\-cy|(?:(?:undredmillions|undreds|lau|n(?:ub|au)|li)\-pahawhhmo|a(?:(?:wjClan\-pahawhh|mClan\-pahawhh|u\-pahawhh|(?:a(?:Sibe|Todo)|Sibe|a)\-)mo|lant\-be|\-be)|orseRaci)ng|(?:orizontalTabulationContr|(?:(?:ighBrightnes|undredPoint)sS|ysteresiss)ymb|amza\-ar\.is)ol|o(?:llowQuiltSquareOrnament|r(?:izontalbar|se)|u(?:se(?:Building)?|rglass)|mothetic)|(?:arklean(?:Asterisc|(?:Meto|O)bel)us|eth)\-syriac|e(?:avy(?:ArrowShaftWidthOn|Circl)e|h(?:Doachashmee|Hamzaabove|_[jm]eem|goal)?\-ar|\-kata|ng)|b(?:a(?:sa(?:Esasadotted|below|above)\-syriac|r)|old(?:script|italic)?\-math|revebelow)|(?:a(?:h(?:T(?:hreedotsup|ah)|Four)|mza)below|igh(?:hamzaAlef|(?:hamzaW|w)aw)|ighhamzaYeh)\-ar|(?:o(?:rizontalTrafficLigh|neyPo)|yphenationpoin|a(?:l(?:f(?:s(?:even|ix)|(?:thre|fiv)e|four|zero|(?:ni|o)ne|two)|anta)|Sub)\-tibe|alfeight\-tibe|(?:yphenbull|\-deser)e|dotaccen|a\-tibe|aircu)t|(?:turnedfishhookandtai|a(?:lf(?:PedalMark|Note|Rest)|uptstimme)\-musica|alf(?:Ounce|Dram)\-alchemica|o(?:rseDung\-alchemica|ur\-alchemica|spita|te)|(?:yphen(?:\.fu|sma)|\.fu)l|a(?:ndbal|\-tami))l|(?:(?:i(?:g(?:htoneapostrophe\-n|\-)|[bdns]\-)|(?:i(?:euh(?:(?:Mieum|Rieul|nieun|Pieup)?Jong|siosCho|a?Paren|C(?:ompa|ho))|ss|bs|n[ghj]|g[gs]|[chjkmp])|(?:w(?:ae|eo)|y(?:eo|ae|[iou]))(?:[bs]s|l[bghmpst]|n[ghj]|g[gs]|[cdhjkmpt])|(?:w(?:i[bs]|a[bs]|e[bs])|y(?:e[bs]|a[bs])|ae[bs]|o(?:e[bs]|b)|ub|ab)s|(?:w[aei]|y[ae]|ae|oe|i|u)l[bghmpst]|(?:w[aei]|y[ae]|ae|oe)n[ghj]|(?:w[aei]|y[ae]|ae|oe?|a)g[gs]|w(?:i[cdhjkmpt]|a[cdhjkmpt]|e[cdhjkmpt])|y(?:e[cdhjkmpt]|a[cdhjkmpt])|u(?:ss|n[hj]|gs|[cdhjkmpt])|a(?:ss|n[ghj]|l[bghmpst]|[cjk])|ae[cdhjkmpt]|o(?:e[cdhjkmpt]|ss|n[ghj]|l[bghmpst]|[dhjk]))\-|(?:w(?:ae|eo)|y(?:eo|ae|[iou]))(?:[bs]|l|n|g)?\-|u(?:gg?|[ns])\-|(?:w(?:i[bs]|a[bs]|e[bs])|y(?:e[bs]|a[bs])|ae[bs]|o(?:e[bs]|b)|ub|ab)\-|(?:w[aei]|y[ae]|ae|oe|i|u)l\-|(?:w[aei]|y[ae]|ae|oe)n\-|(?:w[aei]|y[ae]|ae|oe?|a)g\-|(?:w[ai]|ye)\-|a(?:[dmns]\-|\-n|l\-)|o[cl-ns]\-)k|o(?:(?:H(?:eu|a)an|Mo|No)\-la|e\-k|ch)|\-bopomof|y(?:phentw|a\-k)|ung\-k|we\-k|ae\-k|(?:a[pt]|ot)\-k|(?:it|op)\-k|ah\-k)o|(?:e(?:h(?:Doachashmee|goal)?\-ar\.med|p\-y|\-y)|a(?:lant\-gurmukh|\-(?:gurmukh|kayahl|bug|y))|a(?:lant)?\-gujarat|o(?:(?:Nokhuk|Hip)\-tha|\-y)|ta\-kayahl|ah\-ar\.med|ha\-khamt|a\-khamt|(?:l[ai]|na|ie)\-y|(?:a[pt]|ot)\-y|(?:it|op)\-y)i|a(?:hT(?:hreedots|ah)|mza)above\-ar|(?:(?:(?:w(?:ee?|[aiou])|i)?Carrier\-canad|(?:(?:(?:ii?|aa?|oo)?Nunavi|oNunavi)?k|(?:oo?|i)Sayisi|aSayisi)\-canad|yphen\-canad|(?:ung|aha)\-shav)i|e(?:avenAnnotaion\-h|(?:eCarrier|Nunavik|Sayisi)\-canadi|\-(?:(?:old)?georgi|elbas))|alfFillSpace\-h|(?:(?:ar(?:dsign)?|ie|ae|oe)\-|(?:ie|ar|ae|oe)\-old)georgi|undred\-rom|a\-sh)an|(?:aSpidery\-glagoliti|(?:oriDialectP|aLshaped|(?:ori|at?)Old|ori|ate)\-copti|e(?:lmet\-phaistosDis|ru(?:comb)?\-glagoliti|iOld\-copti|e?\-ethiopi)|(?:ide|orn)\-phaistosDis|(?:(?:u(?:ndred)?|idet|h(?:wa|ee|aa|[iu])|aa?|ha|h[eo]|oa|i|o)\-ethiop|alqa\-manda)i)c|o(?:rizontalscanline[1379]|useBuildings|le)|(?:(?:o(?:(?:mothetic|ok)above|rn)|ungarumlaut)?com|(?:ataf(?:qamats|segol)|olamhaser|iriq)\-h|atafpatah\-h|olam\-h)b|a(?:h_(?:alefMaksura|yeh)\-a|m(?:za\-a|me))r|(?:oortobbhere\-adl|a(?:lant\-malaya|\-malaya|mza\-ad)l|(?:SignFinal\-c|ighRatha\-t|a(?:High|Low)\-t)h|a\-adl)am|(?:a(?:Medial)?\-myanm|ighhamza\-)ar|ahHamzaabove\-ar|ah_[jm]eem\-ar\.init|turned(?:fishhook)?|ammerAndWrench|ighSpeedTrain|(?:(?:yphen)?dieresi|otspring|ibiscu)s|(?:o_ka\-hira\.bo|circumfle)x|(?:x(?:uo|op|it)Radical|x(?:uo[ptx]|o[tx]|i[px])|(?:lyr|nuo)x|lu(?:rx|[ptx])|(?:x(?:ie|a)|nie|uo)[ptx]|(?:l(?:ie|[eo])|luo|xe|ne)[px]|x(?:u?o|op|it?)|lyr|nuo|lur?|x(?:ie|a)|nie|l(?:ie|[eo])|luo|l(?:y[ptx]|a[ptx]|i[ptx])|n(?:o[ptx]|ut|a[ptx]|i[ptx])|iex|ly|ni|uo|xe|ne|ax|ox|ex)\-yi|eartWithArrow|a(?:l(?:ant\-telugu|fh)|\-telugu|ndbag|\-(?:ko|cy))|(?:(?:Bold)?\-fraktu|(?:descend|a(?:mburg|\-khm)|otPepp)e|inferio)r|(?:(?:doubleStru|a(?:tchingCh|mmerAndP)i)c|ardDis)k|m(?:o(?:(?:Radical|[ptx])?\-yi|d)|e\-avestan|\-khamti|(?:y(?:rx|[px])|u(?:rx|[ptx])|uo[px]|i(?:e[px]|[ptx])|yr?|ur?|uo|ie?|a[ptx]|a)\-yi)|ungarumlaut|a\-kata\.half|[iou]\-k(?:ata\.half|o)|Palatalhook|script\-math|(?:na|i|u|o|e)\-cherokee|ah_[jm]eem\-ar|ahabove\-ar|ah\-ar\.i(?:nit|sol)|a\-cherokee|v(?:\-cherokee)?|(?:yphen\-ar|a\-cha|o\-ar)m|e\-avestan|linebelow|dotbelow|e\-syriac|oneybee|a\-kata|[iou]\-kata|[aiou]\-hira|yphen|ah\-ar|hook)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bw(?:(?:h(?:ite(?:Fl(?:agWithHorizontalMiddleBlackStrip|orett)|(?:LozengeWithBlackSmall|Medium)Lozeng|S(?:quareWithBlack(?:Medium|Small)Squar|mall(?:Lozeng|Squar))|squarecentreverticallin|(?:Upper(?:Righ|Lef)tQuadrant|L(?:ower(?:Righ|Lef)tQuadrant|arge)|RoundedCorners|DiamondIn|InBlack)Squar|(?:ArrowShaftWidthO|TouchtoneTelepho|telepho)n|(?:Horizont|Vertic)alEllips|VerysmallSquar|LeftLaneMerg)|(?:ite(?:trianglecontainingwhitetriang|CircleWithBlackCirc)|a)l)|igglyverticallin|(?:hite(?:Frown|Smil)ing|in(?:dBlow|k)ing|earyCat)Fac|hiteShogiPiec|attoSquar|indChim|aterWav|earyFac|avyLin|a\-osag|bSquar|grav|acut)e|ideHeaded(?:(?:(?:(?:South(?:Ea|We)|North(?:Ea|We))s|Righ)t|Down|Left)(?:(?:Very)?Heavy|Medium|Light)?|Up(?:(?:Very)?Heavy|Medium|Light)?)BarbArrow|h(?:ite(?:(?:ConcaveSidedDiamondWithRightTic|ConcaveSidedDiamondWithLeftTic|H(?:ardShellFloppyDis|eavyCheckMar)|SquareWith(?:Righ|Lef)tTic)k|CircleWithDownArrow|RightBackhandIndex|DownLeftHandIndex|(?:Left|Down|Up)BackhandIndex|(?:Parallelogra|trapeziu)m|DraughtsKing|Nib)|ook)|(?:hite(?:(?:DiamondWithBlack(?:VerySmall|Medium)|Medium|XBlack)Diamon|sunwithclou)|iredKeyboar|ritingHan|mo)d|(?:hite(?:(?:lenticularbracket(?:righ|lef)|cornerbracket(?:righ|lef))t\.ver|tortoiseshellbracket(?:righ|lef)|(?:Exclama|Ques)tionOrnamen|CircleWithDotRigh|squarebracket(?:righ|lef)|VerticalRec|Pennan|Rec)|hiteDiamondWithCentredDo|aveArrowDirectlyRigh|(?:a(?:(?:Fixedform)?Sub\-tib|stebask|terClos|\-tib)|u\-deser)e|avyunderscore\.ver|(?:rappedPres|dotacc)en|hitesesamedo|reathproduc)t|(?:hite(?:ArrowShaftWidthTwoThird|Hourglas|Cros)|estSyriacCros|(?:hiteScisso|restle)r|(?:eierstr|ineGl)as|dieresi)s|hite(?:(?:lenticularbracket(?:righ|lef)|cornerbracket(?:righ|lef))t|C(?:oncaveSidedDiamond|ircle)|S(?:un(?:BehindCloud)?|quare)|Diamond|Bullet|Flag)|hiteTwoWayLeftWayTraffic|(?:(?:(?:a(?:xing(?:Crescent|Gibbous)|ning(?:Crescent|Gibbous))Moon|heelchair)Symb|aw(?:Hamzaabove)?\-ar\.is)o|(?:hole(?:Note|Rest)\-mus|a(?:ter|x)\-alchem)ica)l|(?:hite(?:S(?:unBehindCloudRai|quareButto)|(?:RightPent|Pent|Hex)ago)|ater\-han\.pare|a(?:(?:vingHand|rning)Sig|termelo)|\.pare|yn)n|hiteCircleWithTwoDots|o(?:rdseparatormiddledot|(?:Blackfoot|oWestCree|oNaskapi|WestCree|Carrier|o)\-canadian|man\-phaistosDisc|(?:rdspace|a)\-ethiopic|od\-han\.circled|\-(?:kata\.(?:circled|half)|ethiopic|c(?:herokee|anadian)|hira|yi)|man(?:BunnyEars|s(?:(?:Clothe|Boot)s|Hat))|od\-han\.paren|(?:ol|e)\-shavian|(?:(?:Radical|[px])\-y|Waen\-tha)i|m(?:ensSymbo|ansSanda)l|(?:rried|lf)Face|r(?:djoiner|ldMap)|Wi\-lao|n(?:\.full)?|\-kata|man)|a(?:ngkuoq\-bamum\.phaseC|p\-bamum\.phaseD|\-(?:bamum\.phaseF|ko))|a(?:vyBand\-phaistosDis|w\-syria)c|(?:a(?:w(?:Hamzaabove)?\-ar\.fin|small\-kat|w\-osmany|a\-chakm|\-(?:lepch|oriy))|heelOfDharm)a|(?:hite(?:FourPointedSt|VerticalB|MediumSt|SmallSt|st)a|a(?:(?:vyhamzabelow|w(?:T(?:hreeAbove|wo(?:above|dots))|Dot(?:center|above)|S(?:traight|mall)|ring)|sallam)\-|Medial\-myanm|\-myanm)a|(?:Bold)?\-fraktu)r|hiteFourPointedCusp|(?:[aei]Blackfoot|(?:ii?|aa?|e)WestCree|Blackfoot|(?:ee|u)Carrier|aaNaskapi|[aei]Carrier|esternw|aa|ii|ay|e)\-canadian|hiteparen(?:righ|lef)t(?:\.full)?|(?:i(?:(?:debridgeabove|gglylinebelow)com|de(?:lamed|dalet|resh|alef|tav|kaf|he)\-h)|com)b|(?:hite(?:Bullet|Star)|ater\-han|[ei]\-kata)?\.circled|u(?:aet\-bamum\.phaseB|aen\-bamum\.phaseD|e\-bamum\.phase[EF]|p\-bamum\.phaseC)|(?:aGlottal|aa?|ee|[iu]|e)\-ethiopic|e(?:ux\-bamum\.phaseE|\-(?:ko|cy))|a(?:w(?:Hamzaabove)?\-ar|\-bamum)|(?:(?:(?:bold)?script|bolditalic|italic|bold)\-mat|a(?:v[ey]das|tc))h|uo\-bamum\.phaseE|(?:hiteDraughtsM|aMedial\-sh)an|hiteCircle\.half|(?:aving(?:Black|White)Fla|rin)g|a\-kata\.(?:circled|half)|(?:e\-(?:old)?georg|au\-nub)ian|a(?:Medial\-ch|w\-adl|\-th)am|doubleStruck|(?:ater|ind)Trigram|(?:iltedFlow|eightLift|hiteFlow)er|(?:a(?:ter(?:Buffa|Po)l|p\-k|t\-k)|ae(?:Compa|Jung|[bs]s|l[bghmpst]|n[ghj]|g[gs]?|[bs]|l|n|[cdhjkmpt])?\-k|e(?:o(?:Compa|Jung|[bs]s|l[bghmpst]|n[ghj]|g[gs]?|[bs]|l|n|[cdhjkmpt])?|Compa|Jung|ss|bs|l[bghmpst]|n[ghj]|g[gs]?|p|[bdlns]|[chjkmt])\-k|(?:(?:[ai]Compa|[ai]Jung|i(?:l[bghmps]|n[ghj]|gs|[chjkmp])|a(?:ss|n[hj]|[dhjkm])|(?:i[bs]|ab)s|al[bghmpst])\-|i(?:lt?|gg?|t|d|n)\-|a(?:(?:ng?|s|c)\-|\-n)|ag[gs]?\-|(?:i[bs]|ab)\-|al\-)k)o|(?:a(?:small)?|i|e)\-hira|a(?:Todo)?\-mong|circumflex|[euv]\-cherokee|[ai]\-c(?:herokee|anadian)|(?:a(?:\-(?:kayahl|y)|[px]\-y)|(?:uo[px]|ex)\-y|uo?\-y|at\-y|ep?\-y)i|ue\-bamum|dotbelow|[ei]\-kata|a\-kata|edding|turned|rench|\.full|i\-ko)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\by(?:e(?:h(?:(?:Hamzaabove_(?:alefMaksura|alef|waw|yeh|yu|oe|ae|u)|barree(?:Hamzaabove)?|Hamzaabove_meem|Hamzaabove_(?:noo|zai)n|Hamzaabove_reh|Hamzaabove_e|_(?:alefMaksura|meem(?:_meem)?|(?:meem_y|r)eh|jeem_yeh|hah_yeh|(?:noo|zai)n|yeh))\-ar\.fina|(?:T(?:wodotsbelow(?:Hamza|Noon|Dot)above|hreedotsbelow|ail)|barreeT(?:hree|wo)above|Rohingya|Kashmiri|V?above|Small)\-ar|(?:Hamzaabove_(?:meem|khah|jeem|heh|hah|e)\-ar\.i|_(?:meem(?:_meem)?\-ar\.i|khah\-ar\.i|jeem\-ar\.i|h[ae]h\-ar\.i))nit|Hamzaabove\-ar\.(?:fina|init)|\-(?:farsi\.(?:fina|init)|ar\.(?:fina|init)))|h(?:(?:Hamzaabove_(?:alefMaksura|waw|yu|oe|ae|u)|barree(?:Hamzaabove)?|Hamzaabove_meem|Hamzaabove_alef|Hamzaabove_(?:jeem|hah)|Hamzaabove_yeh|Hamzaabove_e|_(?:alefMaksura|meem|khah|jeem|yeh|hah)|Hamzaabove)\-ar|\-(?:farsi|ar))|(?:h(?:barree(?:Hamzaabove)?\-ar\.is|Hamzaabove\-ar\.is|\-(?:farsi|ar)\.is)o|ar\-tami)l|h(?:(?:Hamzaabove_(?:meem|heh)|_(?:meem|heh))\-ar\.med|(?:T(?:hree(?:dots)?a|wo(?:dots)?a)bove|Fourbelow|Vinverted)\-fars|Hamzaabove\-ar\.med|\-(?:farsi|ar)\.med)i|(?:sieung(?:Pans|S)iosCompa|sieung(?:(?:Pans|S)ios|Hieuh|Mieum)?Jong|o(?:rinhieuhCompa|rinhieuhJong|rinhieuhCho|(?:ya|[OU])?Jung|Compa|[bs]s|l[bghmpst]|n[ghj]|g[gs]|[cdhjkmpt])|(?:sieung)?Compa|sieungCho|Jung|o(?:[bs]|l|n|g)?|ss|l[bghmpst]|bs|g[gs]|h|[bglst]|[cdjkmp])?\-ko|egClan\-pahawhhmong|(?:stu(?:comb)?\-g|r(?:u(?:comb)?\-g|i(?:comb)?\-g))lagolitic|u(?:rae\-bamum\.phaseB|(?:aet|[mx])\-bamum\.phaseE|ae\-bamum\.phaseE|q\-bamum\.phaseC)|rahbenyomoleft\-hb|(?:e?Carrier\-canad|[aw]\-shav)ian|n(?:\-(?:bamum\.phaseD|ko)|\.full|[ghj]\-ko)?|r(?:u(?:dieresis|Backyer|comb)?|Neutral)\-cy|e\-ethiopic|(?:e\-desere|llowHear)t|\-(?:ethiopic|cherokee|canadian|avestan|tifi)|ar\-greek|tiv\-hb|y\-tifi|ar\-ar)|(?:(?:u(?:s(?:(?:iotifiedClosedL|Closedl)ittle|littleiotified|bigiotified|Blended)|Reversed)|atIotified|icomb)\-|us(?:little|big)\-|(?:a[et]|n)\-)cy|afuleeraewa\-bamum\.phaseB|(?:oq(?:swimming|cover)|u(?:aen|eq)|iee)\-bamum\.phaseE|(?:(?:ig(?:mgotshegshadm|Mgo(?:Sgab|Mdun)M)a|a(?:FixedformSub|ngRtags|rTshes|Sub)?)\-tibe|dotaccen)t|(?:usWithtail|ati(?:comb)?|uscomb|[ou]comb|us?|o)\-glagolitic|umuomae\-bamum\.phaseC|(?:(?:(?:(?:w(?:aa?|oo|ii?|o|e))?WestCree|waaNaskapi|cree(?:p(?:waa|oo)|[ck-nsty]oo|w)|i(?:Sayis)?i|Creeoo|aai|o[oy])\-|[aiou]Carrier\-|w(?:aa|oo|ii?|o|e)\-|(?:aa?|wa|ay|i)?\-)canadi|n\-(?:old)?georgi|final\-sh|o\-canadi|\-elbas)an|(?:a(?:hBerberacademy|jBerberacademy|z(?:Tawellemet|z)|zhAhaggar|(?:zh|kh?|ng|q|h)Tuareg|g(?:nTuareg|h(?:Tuareg|Ayer|h))|khh|dd?h|rr|hh|sh|bh|t[ht]|ch|[vw])\-|(?:a(?:ss?|[apy]|[hjk]|b|m|l|d|n|g|t)|u|i|o)\-|a(?:zh?|kh|dd|gh|r|q|f)\-)tifi|(?:aemmae|uo[mp])\-bamum\.phaseD|ajClan\-pahawhhmong|(?:(?:uukaleapintu|y?Mark|a)\-khme|(?:Bold)?\-fraktu|o\-khme)r|(?:(?:wa\-easternpwok|\.p)are|macro)n|u(?:woq\-bamum\.phase[CD]|\-ko)|a(?:HalfAligali|Todo)\-mong|[au]small\-kata\.half|o(?:small\-kata\.half|q\-bamum\.phaseF|\-k(?:ata\.(?:circled|half)|o)|gh)|(?:pogegrammenicom|od\-h)b|(?:a(?:ngdepartington|cut)|aa(?:ru|do)Squar|uanSquar|hookabov|strok|tild|grav)e|(?:bold)?script\-math|bolditalic\-math|uq\-bamum\.phaseE|(?:ap|un|it)\-bamum\.phaseE|(?:aa|um)\-bamum\.phaseC|a(?:Medial)?\-myanmar|a\-bamum\.phaseF|a\-kata\.(?:circled|half)|u\-kata\.(?:circled|half)|au\-pahawhhmong|(?:a(?:kash\-gurmukh|\-(?:gu(?:jarat|rmukh)|kayahl|tif|bug))|amakkan\-tha|(?:itRadical|y(?:rx|[ptx])|u(?:r?x|o[tx])|i(?:e[ptx]|x))\-y|o(?:(?:Radical|x)\-y|Y(?:ing|ak)\-tha|p\-y|t\-y|\-y)|u(?:op|t)?\-y|it?\-y|(?:yr?|u[or]|ie)\-y|[iu]p\-y)i|shortrightleg|od(?:yodpatah|dagesh|hiriq)\-hb|(?:izet|aa?|oa?|u|i)\-ethiopic|pogegrammeni|(?:a(?:Medial\-c|High\-t|Low\-t)|Final\-c)ham|doubleStruck|udh(?:he)?\-syriac|ut\-samaritan|(?:(?:(?:u(?:Yeo|I)|o(?:Yae?|I)|(?:uY|a)e)Compa|(?:u(?:Yeo|I)|o(?:Yae?|A|I)?|o(?:Yeo|Ae|Eo|O)|u(?:Ye|E)?|u(?:Eo|[OU])|uAe|aYo|a(?:u|e)?|uA|aO|iU|i)Jung|[aiou]Compa|(?:ae[bs]|ub|i[bs]|ob)s|(?:ae|u|i|o)l[bghmpst]|(?:ae|o)n[ghj]|(?:ae|u)g[gs]|a(?:bs|l[bghmpst]|n[hj]|g[gs]|e[cdhjkpt])|u(?:ss|n[ghj]|[hjk])|i(?:n[ghj]|g[gs]|[dhjkm])|o(?:ss|g[gs]|[hjkm]))\-k|o(?:Ya\-la|d\-k|p\-k|t\-k)|(?:a(?:ss?|p|[hjk]|b|m|l|d|n|g|e|t)|u[mnst]|it?|[iu]p)\-k|(?:a(?:(?:ng|em|c)\-|\-n)|(?:ae[bs]|ub|i[bs]|ob)\-|(?:ae|u|i|o)l\-|(?:ae|o)n\-|(?:ae|u)g\-|ud\-|i[cgn]\-|uc\-|o[cgs]\-)k)o|[au]small\-kata|o(?:small\-kata|q\-bamum|\-kata|t)|i(?:talic\-math|\-cy)|a\-malayalam|(?:a(?:Sub\-lepch|a\-chakm|\-(?:sinhal|o(?:sman|ri)y|kannad|lepch|dev))|(?:[au]small|[au])\-hir|o(?:small)?\-hir|ya(?:a\-chakm|\-oriy|\-dev))a|circumflex|a\-cherokee|[iuv]\-cherokee|o\-cherokee|ye\-avestan|bold\-math|u\-ar\.fina|(?:u\-ar\.iso|a\-tami)l|uq\-bamum|d(?:otbelow|ieresis)|a\-(?:telugu|ko)|he\-adlam|\.circled|odyod\-hb|a\-bamum|(?:i(?:wn)?\-ar|a\-cha)m|a\-adlam|(?:ya\-be|a\-(?:be|mo)|inya|ri)ng|a\-kata|u\-kata|turned|\.full|hook|u\-ar|loop|mod)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bq(?:(?:ua(?:ternion|druple)IntegralOperato|(?:Bold)?\-fraktu)r|a(?:f(?:(?:LamAlefMaksura|Threedots)above|Dot(?:below|above|less)|_lam_yeh|African)\-ar|(?:f(?:_(?:alefMaksura\-ar\.|meem_(?:(?:meem|yeh)\-ar\.|hah\-ar\.)|yeh\-ar\.)f|\-ar\.f)in|af\-osmany)a|f(?:_(?:meem(?:_hah)?|hah)\-ar\.init|\-ar\.(?:medi|init))|r\-(?:old)?georgian|matsqatan\-hb|rneypara\-hb|(?:ai?\-c|i\-c)anadian|\-(?:c(?:anadian|y)|khmer|deva)|af\-adlam|mats\-hb|[aiqu]\-khmer|dma\-hb)|(?:u(?:(?:i(?:n(?:dicesima(?:Bass|Alt)a\-mus|tessence\-alchem)|ckLime\-alchem)|arter(?:Tone(?:Sharp|Flat)|Rest|[Nn]ote)\-mus)ica|ote(?:single|dbl)\.ful|estionsmal|estion\.ful)|af\-ar\.iso|\.ful)l|u(?:o(?:te(?:(?:d(?:oubleprimeR|bl(?:right|base)r)|r)eversed|singlbase)|\-cherokee)|estion\-han\.circled|e(?:stion(?:edequalto|greek|\-arm)|en(?:Black|White)Chess)|estionreversed|adrupleprime|[aeiuv]\-cherokee|incunx)|strokethroughdescender|(?:uestion(?:exclamatio|dow)|\.pare)n|af(?:_(?:alefMaksura|meem|yeh|hah))?\-ar|(?:u(?:estion)?|aa?|o|i)\-ethiopic|u(?:ote(?:d(?:oubleprime|bl(?:right|base)?)|single)|estion(?:\-ar)?)|(?:bold)?script\-math|bolditalic\-math|(?:ootype(?:two|one)|u(?:uv|k)|uu?|ii|e|i)\-khmer|(?:ushshaya|aph)\-syriac|h(?:au\-pahawhhmong|(?:w(?:aa|i)|w?ee|wa|w?e|aa?|[iu])\-ethiopic|o(?:\-ethiopic|ok(?:tail)?))|diagonalstroke|uestion\-chakma|(?:uinarius\-rom|itsa\-samarit|uf\-samarit|e\-elbas)an|uestion\-bamum|uestion\-adlam|doubleStruck|(?:(?:o(?:tRadical|[px])|u(?:ot|r)|y(?:rx|[ptx])|u(?:rx|o[px]|[ptx])|yr?|ot)\-y|n\-khamt|i(?:e[ptx]|e|[px]|t)?\-y|uo?\-y|o\-y)i|u(?:estion\.ver|ote(?:dbllef|righ|lef))t|(?:yaa|w(?:aa|i)|[wy]ee|[wy]a|[wy]e|ee|y[iou]|oa)\-ethiopic|italic\-math|(?:ofdagesh|ubuts)\-hb|(?:oo|ii|o|i)?\-canadian|aTodo\-mong|e\-ethiopic|\-bopomofo|bold\-math|\.circled|pdigraph|a\-mong|of\-hb)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bx(?:lo(?:ngleftlegandlo)?wrightring|(?:y(?:eem(?:(?:Ntxi|To)v|Rho)|oojClan)|aus)\-pahawhhmong|yeemFaib\-pahawhhmong|longleftlegserif|Notehead\-musical|(?:yoo|au)\-pahawhhmong|(?:bold)?script\-math|bolditalic\-math|i(?:ab\-pahawhhmong|talic\-math|\-(?:ethiopic|yi)|nferior|(?:e[ptx]|e|[px]|t)\-yi)?|(?:an\-(?:old)?georgi|e\-elbas)an|(?:doubleStruc|palatalhoo)k|(?:Bold)?\-fraktur|(?:y(?:ee|[ao])|w(?:ee|i)|waa|y(?:aa|[iu])|ye|we|wa|aa|ee|oa|a|u)\-ethiopic|longleftleg|e(?:stes\-greek|h\-arm)|v?e\-avestan|ye\-avestan|(?:x?below|above)?comb|e\-ethiopic|o\-(?:ethiopic|yi)|\-bopomofo|a\-osmanya|d(?:otaccent|ieresis)|bold\-math|\.circled|(?:a\-khamt|(?:uox|y(?:rx|[ptx])|uo|yr?|o[ptx])\-y)i|\.paren|\.full|mod|or)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bC(?:h(?:e(?:(?:d(?:escender(?:abkhasian)?|ieresis)|verticalstroke|khakassian|abkhasian)?\-cy|e\-deseret)|rivi\-glagolitic|ar\-(?:old)?georgian|i(?:n\-(?:old)?georgian|\-(?:latin|adlam))|a\-osage|(?:eh|a)\-arm|ook)|ryptogrammic(?:eie|ni)\-coptic|b(?:old(?:script|italic)?\-math|ar)|\.(?:roundBlackBox|b(?:lackCircled|ox)|circled|full)|(?:(?:il|an)\-(?:old)?georgia|\.pare|caro)n|uatrillocomma|(?:Bold)?\-fraktur|(?:cedillaacut|strok|acut)e|doubleStruck|(?:script|italic)\-math|(?:reverseddo|dotaccen)t|circumflex|(?:rossedO|che)\-cy|uatrillo|cedilla|small|[ao]\-arm|hi|on|R)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bI(?:o(?:t(?:a(?:t(?:ed(?:BigY|y)us\-glagolitic|onos)|dasiaperispomeni|psiliperispomeni|(?:dasia|psili)?varia|(?:dasia|psili)?oxia|dieresis|(?:africa|macro)n|vrachy|\-cy)|ifiedA\-cy)|gonek|\-cy)|zheInitial\-glagolitic|epigraphicsideways|(?:zhitsa)?\-glagolitic|(?:(?:zhitsadbl|i)grave|ishorttail|dieresis|i(?:short)?|macron|e(?:bre|gra)ve|a|e|u)\-cy|boldscript\-math|bolditalic\-math|\.(?:roundBlackBox|full|box)|zhe\-glagolitic|s(?:trokeSmallmod|(?:hort\-desere|crip)t|mallmod)|(?:dieresisacut|invertedbrev|(?:hookabo|(?:dbl)?gra)v|USquar|acut|brev)e|(?:n\-(?:old)?georgia|\.pare)n|(?:\.(?:blackC|c)ircle|mo)d|Bold\-fraktur|doubleStruck|(?:long\-desere|dotaccen)t|italic\-math|auda\-coptic|tildebelow|circumflex|bold\-math|\-(?:c(?:herokee|y)|fraktur|adlam|osage)|zhitsa\-cy|dieresis|ota(?:dasia|psili)?|dotbelow|macron|s(?:troke|mall)?|ni\-arm|tilde|caron|J)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bL(?:reversedSansSerif|j(?:udije\-glagolitic|e\-cy)|ongaepigraphici|turnedSansSerif|c(?:ircumflexbelow|omb)|b(?:old(?:script|italic)?\-math|elt)|\.(?:roundBlackBox|full|box)|(?:a(?:bial\-|s\-(?:old)?)georgia|\.pare|broke)n|do(?:tbelowmacron|uble(?:Struck|bar))|(?:\.(?:blackC|c)ircle|smallmo)d|(?:L\-middleWel|sla)sh|(?:(?:Bold)?\-fraktu|ba)r|(?:strokeS|amdas)mall|m(?:iddletilde|od)|italic\-math|(?:commaaccen|scrip)t|aula\-coptic|(?:highstrok|[eiouv]\-cheroke|a(?:\-(?:cheroke|osag)|cut))e|a(?:am\-adlam|mbda)|linebelow|dot(?:below)?|iwn\-arm|turned|small|caron|ha\-cy|j|J)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bN(?:(?:bold)?italic\-math|boldscript\-math|ashi\-glagolitic|c(?:ircumflexbelow|om(?:maaccent|b)|aron)|\.(?:roundBlackBox|full|box)|(?:(?:ar\-(?:old)?georgi|ine\-rom|[gy]i\-nubi)a|\.pare)n|s(?:mallmodifier|cript\-math)|reversedSmall|\.(?:blackC|c)ircled|(?:obliquestrok|a(?:\-osag|cut)|grav|tild)e|longrightleg|doubleStruck|(?:Bold)?\-fraktur|(?:Reversed)?mod|(?:ah|[eov])\-cherokee|i\-cherokee|a\-cherokee|u(?:\-cherokee|n\-adlam)|bold\-math|descender|linebelow|dotaccent|i\-coptic|dotbelow|hookleft|[hy]a\-adlam|ow\-arm|small|je\-cy|u|j|J)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bP(?:s(?:trokethroughdescender|i\-cy)|(?:epigraphicrevers|\.(?:blackC|c)ircl)ed|amphyliandigamma|(?:okoji|e)\-glagolitic|h(?:ar\-(?:old)?georgian|Square|i)|(?:bold)?script\-math|bolditalic\-math|\.(?:roundBlackB|b)ox|e(?:(?:middlehook|descender)\-cy|e\-deseret|\-cy)|ar\-(?:old)?georgian|i(?:doubleStruck|talic\-math|\-coptic|wr\-arm|small)?|(?:Bold)?\-fraktur|doubleStruck|squirreltail|alochka\-cy|dotaccent|bold\-math|si\-coptic|(?:PM|R)Square|flourish|a(?:\-osag|cut)e|e\-adlam|sismall|s(?:troke|i)|pv\.box|\.paren|eh\-arm|\.full|small|hook|mod)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bZ(?:hivete\-glagolitic|e(?:mlja\-glagolitic|n\-(?:old)?georgian|(?:d(?:escender|ieresis)|mlya)?\-cy|e\-deseret|ta)|(?:bold)?italic\-math|boldscript\-math|har\-(?:old)?georgian|\.(?:roundBlackBox|b(?:lackCircled|ox)|circled|full)|h(?:ed(?:escender|ieresis)|(?:ebrev|w)e)\-cy|(?:Bold)?\-fraktur|doubleStruck|script\-math|hee\-deseret|circumflex|visigothic|ata\-coptic|(?:line|dot)below|descender|bold\-math|swashtail|dotaccent|al\-adlam|h(?:a\-osage|e\-arm|ook)|a\-osage|(?:strok|acut)e|(?:\.pare|caro)n|small|a\-arm|he\-cy)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bO(?:m(?:ega(?:(?:dasia(?:p(?:erispomenip)?|variap|oxiap)|p(?:sili(?:p(?:erispomenip)?|variap|oxiap))?)rosgegrammeni|Broad\-cy|\-(?:latin|cy)|tonos|varia|oxia)|icron(?:(?:dasia|psili)?varia|(?:dasia|psili)?oxia|tonos))|(?:n(?:e(?:hundred(?:thousan|reverse)d|thousandcd)?\-rom|\-(?:old)?georgi)a|dotaccentmacro|(?:dieresis|tilde)macro|ogonekmacro|\.pare|caro)n|m(?:ega(?:dasia(?:perispomeni|varia|oxia)?|psili(?:perispomeni|varia|oxia)?)?|icron(?:dasia|psili)?|acron)|(?:(?:circumflex(?:hookabo|gra)|ho(?:rn(?:hookabo|gra)|okabo)|(?:macron|dbl)?gra)v|circumflex(?:tild|acut)|centeredtild|(?:macron|slash|tilde)?acut|longstrok|\-cheroke|horn(?:tild|acut)|brev)e|(?:(?:(?:Double)?Mo|Bi)nocular|barreddieresis|dieresis|barred)\-cy|circumflexdotbelow|(?:bold)?script\-math|bolditalic\-math|\.(?:roundBlackB|b)ox|(?:o(?:short|long)|short|long|w)\-deseret|tildedieresis|[nt]u\-glagolitic|(?:\.(?:blackC|c)ircle|hminverte|mo)d|i(?:n(?:vertedbrev|\-osag)e|talic\-math|\-deseret)|doubleStruck|Bold\-fraktur|ou(?:Old)?\-coptic|h(?:orndotbelow|\-arm)|hungarumlaut|circumflex|dotaccent|bold\-math|(?:openS|megas|Us)mall|dieresis|eVolapuk|\-(?:fraktur|c(?:optic|y))|dotbelow|o(?:gonek|pen)|\-adlam|\-osage|E(?:small)?|slash|tilde|\.full|small|h(?:orn|m)|loop|Umod|U|i|O)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bE(?:t(?:a(?:(?:dasia(?:p(?:erispomenip)?|variap|oxiap)|p(?:sili(?:p(?:erispomenip)?|variap|oxiap))?)rosgegrammeni|tonos|varia|oxia)|a(?:dasia(?:perispomeni|varia|oxia)?|psili(?:perispomeni|varia|oxia)?)?|ildebelow|h(?:\-deseret|Small)?|ilde|\-arm)?|(?:(?:(?:circumflex)?hookabo|(?:inverted|cedilla)bre|bre)v|circumflextild|(?:circumflex)?acut|(?:circumflex|dbl)?grav|macron(?:acut|grav)|(?:h(?:ch|ts|t|[kp])a|in)\-osag|\-(?:cheroke|osag))e|(?:circumflex(?:dot)?|dot)below|psilon(?:dasia|psili)?varia|(?:bold(?:script|italic)?|italic)\-math|psilon(?:dasia|psili)?oxia|\.(?:roundBlackB|b)ox|(?:l(?:middle)?hook|[ls]descender|iotified|lsmall|lSoft|mSoft|[lm]tail|rtick)\-cy|n(?:(?:(?:(?:middle)?h|LeftH)ook|descender|tail)\-cy|\-(?:(?:old)?georgian|cy)|ghe\-cy)|(?:\.(?:blackC|c)ircl|zhrevers)ed|lifi\-georgian|(?:sh(?:ort)?|long|ng|w)\-deseret|doubleStruck|Bold\-fraktur|s(?:hOld\-coptic|mallturned|troke)|(?:(?:reversedOp|\.par|op)e|zhcaro|caro)n|psilon(?:dasia|psili)?|(?:Reversed)?mod|(?:leven|ight)\-roman|(?:dieresis|reversed)\-cy|psilontonos|c(?:ircumflex|edilla)|ie\-coptic|(?:dotaccen|scrip)t|[fl-nrs]\-deseret|dieresis|reversed|\-(?:fraktur|cy)|zhSmall|macron|ogonek|\-adlam|c?h\-arm|s(?:mall|h)|\.full|[flmrs]\-cy|zh|ng)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bF(?:(?:epigraphicrevers|turn)ed|(?:i(?:(?:ve(?:thousand|hundred)?|fty)\-rom|\-georgi)|our\-rom)an|boldscript\-math|bolditalic\-math|ritu\-glagolitic|i(?:ta(?:\-(?:glagolitic|cy)|lic\-math)|\-coptic|nsular)|\.(?:roundBlackBox|b(?:lackCircled|ox)|circled|paren|full)|(?:Bold)?\-fraktur|doubleStruck|bold\-math|ei\-coptic|dotaccent|VS[1-3]\-mong|a\-adlam|Stroke|eh\-arm|script|small|hook)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bM(?:(?:epigraphicinvert|\.(?:blackC|c)ircl)ed|(?:yslite\-glagoli|i\-cop)tic|e(?:pigraphicarchaic|n\-arm)|boldscript\-math|bolditalic\-math|an\-(?:old)?georgian|\.(?:roundBlackBox|paren|full|box)|Bold\-fraktur|doubleStruck|italic\-math|(?:turned)?small|i\-cherokee|a\-cherokee|[eov]\-cherokee|u(?:\-cherokee)?|bold\-math|iim\-adlam|dotaccent|dotbelow|\-fraktur|(?:BSquar|a(?:\-osag|cut))e|turned|script|v\.box|comb|hook|mod)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bG(?:a(?:ngia(?:Cryptogrammic|Old)?\-coptic|mma(?:\-coptic|small)|y\-deseret)|lagoli\-glagolitic|(?:anTurned\-georgia|han\-(?:old)?georgia|an\-(?:old)?georgia|ammaafrica|\.pare)n|(?:amma)?doubleStruck|turnedSansSerif|bold(?:script|italic)?\-math|h(?:e(?:middlehook|stroke|upturn)\-cy|a(?:\-osage|d\-arm)|ook)|\.(?:roundBlackB|b)ox|(?:e(?:strokehook|descender)|je)\-cy|turnedinsular|(?:obliquestrok|e\-cheroke|[iouv]\-cheroke|a(?:\-cheroke|cut)|BSquar|strok|brev)e|\.(?:blackC|c)ircled|(?:Bold)?\-fraktur|(?:script|italic)\-math|(?:comma|dot)accent|lottalstop|c(?:ircumflex|omb)|e(?:rmandbls|\-cy)|smallhook|(?:be|a)\-adlam|insular|s(?:cript|mall)|im\-arm|m(?:acron|od)|\.full|caron|amma)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bY(?:(?:us(?:iotifiedClosedL|Closedl)ittle|us(?:little|big)iotified|er(?:u(?:dieresis|BackYer)|Neutral)|a(?:t(?:Iotified)?|e)|u(?:Revers|sBlend)ed|us(?:little|big)|eru)\-cy|(?:usWithtail|e(?:stu|ri)|eru|ati|us)\-glagolitic|turnedSansSerif|(?:(?:bold)?script|bolditalic|italic|bold)\-math|\.(?:roundBlackBox|b(?:lackCircled|ox)|circled|full)|n\-(?:(?:old)?georgian|cy)|(?:(?:Bold)?\-fraktu)?r|d(?:o(?:ubleStruck|tbelow)|ieresis)|u\-(?:glagolitic|cherokee)|o(?:\-(?:glagolitic|cherokee)|gh|t)|ee\-deseret|circumflex|i\-cherokee|[aev]\-cherokee|dotaccent|(?:hookabov|strok|tild|acut|grav)e|he\-adlam|i(?:wn)?\-arm|a\-adlam|(?:macro|\.pare)n|small|hook|loop|i\-cy)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bD(?:irectlyLeftWaveArrow|(?:italicD|d)oubleStruck|(?:jervi|obro)\-glagolitic|bolditalic\-math|boldscript\-math|circumflexbelow|z(?:e(?:lo\-(?:glagolitic|cy)|(?:abkhasian|Reversed)?\-cy)|(?:zh|z|[hw])e\-cy)|\.(?:roundBlackBox|full|box)|(?:(?:on\-(?:old)?georgi|afric)a|\.pare)n|\.(?:blackC|c)ircled|(?:(?:Bold)?\-fraktu|insula|topba)r|(?:jaOld|alda|ei)\-coptic|(?:italic|bold)\-math|script\-math|(?:(?:la|[uv]|o|i|a)\-cheroke|e\-cheroke|aSquar)e|e(?:e\-deseret|\-cy|lta)|aali\-adlam|linebelow|(?:dotaccen|croa)t|(?:oubleO|eSoft|je(?:rv)?|(?:ch|w)e)\-cy|dotbelow|h(?:a\-(?:osage|adlam)|ook)|(?:cedill|igamm)a|zcaron|Z(?:caron)?|small|a\-arm|caron|mod|EL|z)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bT(?:(?:hornstrokethroughdescende|(?:Bold)?\-fraktu|insula)r|(?:rokutastiA|vrido|si)\-glagolitic|e(?:WithMiddleHook|descender|tse)?\-cy|(?:enthousand|h(?:ousand|ree)|w(?:elve|o)|en)\-roman|c(?:ircumflexbelow|edilla)|b(?:old(?:script|italic)?\-math|ar)|\.(?:roundBlackB|b)ox|(?:diagonalstrok|s?e\-cheroke|(?:l?i|l[aeouv]|s[iouv])\-cheroke|onefiv)e|a(?:[nr]\-(?:old)?georgian|\-(?:cheroke|osag)e|u\-coptic)|s(?:eReversed|he)\-cy|(?:retroflexhoo|doubleStruc)k|\.(?:blackC|c)ircled|hethe\-coptic|(?:comma|dot)accent|(?:(?:turnedS|s)ma|\.fu)ll|h(?:e(?:e\-deseret|taSymbol)|ook)|(?:script|italic)\-math|sa\-(?:cheroke|osag)e|h(?:orn(?:stroke)?|eta)|ee\-deseret|linebelow|sha\-osage|dotbelow|resillo|u\-adlam|iwn\-arm|turned|o(?:netwo|\-arm)|onesix|(?:s[sw]|ch)e\-cy|(?:\.pare|caro)n|we\-cy|se\-cy|mod|au|z)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bS(?:i(?:gmaLunate(?:Dotted(?:Reversed)?|Reversed)?Symbol|talic\-math|nsular)|h(?:(?:ei(?:Cryptogrammic|Crossed|Old)?|ima(?:Old)?)\-coptic|ta(?:pic)?\-glagolitic|i(?:n\-(?:old)?georg|ma\-nub)ian|(?:ha(?:descender)?|cha|we)\-cy|a\-(?:glagolitic|osage|a(?:dla|r)m|cy)|o)|(?:dotbelow|caron)dotaccent|(?:bold)?script\-math|bolditalic\-math|lovo\-glagolitic|(?:innyiiyhe\-adla|eh\-ar)m|(?:chwadieresis|(?:emis)?oftsign|chwa)\-cy|(?:\.(?:roundBlackB|b)|[ds]\.b)ox|a(?:cutedotaccent|ltillo)|an\-(?:old)?georgian|\.(?:blackC|c)ircled|(?:obliquestrok|(?:[eouv]|i)?\-cheroke|a\-cheroke)e|doubleStruck|(?:Bold)?\-fraktur|commaaccent|(?:ampi|ima|ou)\-coptic|c(?:ircumflex|edilla)|(?:even|ix)\-roman|bold\-math|(?:s(?:washtai|mal)|\.ful)l|dotaccent|dotbelow|a\-osage|\.paren|caron|a(?:cute|mpi|n)|tigma|igma|chwa)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bA(?:lpha(?:dasia(?:p(?:erispomenip)?|variap|oxiap)|p(?:sili(?:p(?:erispomenip)?|variap|oxiap))?)rosgegrammeni|PL(?:greaterthan|circle|uptack|tilde|star|jot|del)dieresis|lpha(?:dasia(?:perispomeni|varia|oxia)?|psili(?:perispomeni|varia|oxia)?)?|(?:teMyslite|zu)\-glagolitic|(?:(?:PL(?:(?:(?:semico|epsi)lon|d(?:owntack|iamond|elta)|circle|quote|jot)underb|uptackoverb|(?:alph|omeg)aunderb|(?:backslash|comma|slash)b|iotaunderb|circlest)|Vhorizontalb)a|Bold\-fraktu|\-fraktu)r|(?:(?:circumflexhookabo|brevehookabo|invertedbre|hookabo)v|PL(?:(?:downcarett|upcarett|stilet|delt|z)ild|(?:downshoes|leftshoes|circles|del(?:ta)?s)til|quad(?:circl|divid)|rightvan|(?:down|left|up)van)|(?:circumflex|breve|dbl)?grav|(?:circumflex|breve)?tild|overMSquar|\-(?:cheroke|osag)|(?:in?|h)\-osag|uSquar|strok)e|l(?:efDialectP\-coptic|ong\-deseret|fa\-coptic|pha(?:vrachy|tonos|varia|oxia)|if\-adlam|eutka\-cy)|(?:circumflex|breve)?dotbelow|PL(?:(?:circleback|quad)slash|rho)|(?:(?:PLquad(?:greater|less)th|(?:en\-(?:old)?|n\-(?:old)?|in\-)georgi)a|lpha(?:turned)?\-lati|\.pare)n|(?:lef\-egyptologica|in\-egyptologica|PLquad(?:not)?equa|nnuitySymbo)l|PLquad(?:(?:righ|lef)t|down|up)arrow|(?:bold(?:script|italic)?|script|italic)\-math|PLquad(?:down|up)caret|(?:circumflex|breve|ring)?acute|\.(?:roundBlackB|b)ox|h?short\-deseret|PLquad(?:questi|col)on|(?:d(?:ieresis|ot)|lpha)macron|(?:PL(?:downtack|circle|up(?:shoe|tack)|quad)jo|dotaccen)t|hlong\-deseret|(?:PL(?:qu(?:addiamon|otequa)|squishqua)|\.(?:blackC|c)ircle|turne)d|inOld\-coptic|(?:doubleStruc|eVolapu)k|(?:dieresis|breve|ie)\-cy|PLquaddelta|r(?:chaicsampi|ingbelow)|circumflex|PL(?:quad(?:del)?|(?:alph|omeg)a|iota)|y\-deseret|E(?:Modifier|macron|small|acute)?|dieresis|PLIbeam|yb\-arm|ogonek|macron|breve|caron|\.full|small|ring|mod|\-cy|u|o|[AYv])?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bK(?:(?:(?:stroke)?diagonalstrok|obliquestrok|a(?:\-cheroke|cut)|[BKM]Squar)e|a(?:(?:(?:vertical)?stroke|(?:descende|bashki)r)\-cy|y\-deseret|hook\-cy|iSymbol|\-cy|ppa)|h(?:(?:ei(?:Akhmim|Bohair)ic|ei|i)\-coptic|a(?:r\-(?:old)?georgian|\-(?:osage|adlam))|ook)|(?:bold)?italic\-math|boldscript\-math|\.(?:roundBlackB|b)ox|ako\-glagolitic|an\-(?:old)?georgian|(?:\.(?:blackC|c)ircl|turn)ed|Bold\-fraktur|doubleStruck|s(?:cript\-math|i\-cy)|commaaccent|oppaArchaic|(?:(?:omi(?:dz?|[lnstz]))?j|omid)e\-cy|apa\-coptic|(?:line|dot)below|descender|bold\-math|si\-coptic|\-fraktur|y?a\-osage|(?:po|af)\-adlam|oppa\-cy|stroke|(?:\.pare|caro)n|e[hn]\-arm|(?:sma|\.fu)ll|oppa|mod)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bH(?:aSpidery\-glagolitic|(?:oriDialectP|ate)\-coptic|(?:(?:ardSign|[io]e|a[er])\-|(?:[io]e|a[er])\-old)georgian|aLshaped\-coptic|b(?:old(?:script|italic)?\-math|revebelow|ar(?:mod)?)|\.(?:roundBlackBox|full|box)|e(?:(?:ru\-glagoli|iOld\-cop)tic|\-(?:(?:old)?georgian|cherokee)|ng|ta)|a(?:descender|abkhasian|stroke|rdsign|hook)\-cy|(?:ori|at?)Old\-coptic|(?:\.(?:blackC|c)ircl|turn)ed|doubleStruck|(?:Bold\-fraktu|descende|\-fraktu)r|undred\-roman|(?:na|u|i|v|o)\-cherokee|italic\-math|(?:circumfle|v\.bo)x|ori\-coptic|a\-cherokee|(?:dotaccen|\-desere)t|dieresis|(?:ya\-osag|[Pgz]Squar|a\-osag)e|dotbelow|a\-(?:adlam|cy)|cedilla|script|(?:\.pare|caro)n|small|o\-arm|w(?:e\-cy|air)|hook|alfh|mod)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bB(?:(?:igYus|uky)\-glagolitic|(?:bold(?:script|italic)?|italic)\-math|\.(?:roundBlackBox|full|box)|(?:an\-(?:old)?georgia|\.pare)n|\.(?:blackC|c)ircled|(?:Bold)?\-fraktur|doubleStruck|(?:barredS|s)mall|e(?:e\-deseret|ta(?:\-latin)?|n\-arm|\-cy)|linebelow|(?:Barred)?mod|(?:dotaccen|scrip)t|Flourish|dotbelow|ra\-osage|(?:he|a)\-adlam|topbar|stroke|hook)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bJ(?:(?:bold)?italic\-math|boldscript\-math|(?:han\-(?:old)?|il\-(?:old)?)georgian|\.(?:roundBlackBox|paren|full|box)|\.(?:blackC|c)ircled|doubleStruck|(?:Bold)?\-fraktur|s(?:cript\-math|troke)|crossedtail|circumflex|e(?:e\-deseret|\-cy)|bold\-math|iim\-adlam|(?:heh|a)\-arm|small|mod)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bQ(?:strokethroughdescender|bold(?:script|italic)?\-math|d(?:iagonalstroke|oubleStruck)|\.(?:roundBlackBox|b(?:lackCircled|ox)|circled|full)|a(?:r\-(?:old)?georgian|af\-adlam|\-cy)|(?:Bold)?\-fraktur|u[aeiouv]\-cherokee|(?:script|italic)\-math|hooktail|rotated|\.paren)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bR(?:(?:smallinverted)?mod|boldscript\-math|bolditalic\-math|i(?:t(?:si\-glagolitic|alic\-math)|nsular)|\.(?:roundBlackB|b)ox|(?:ae\-(?:old)?georgia|\.pare)n|dotbelowmacron|small(?:inverted)?|(?:(?:invertedbre|dblgra)v|obliquestrok|strok)e|\.(?:blackC|c)ircled|reversedSmall|doubleStruck|(?:Bold)?\-fraktur|eversedze\-cy|c(?:om(?:maaccent|b)|aron)|linebelow|bold\-math|dotaccent|(?:umR|r)otunda|dotbelow|o\-coptic|a(?:\-a(?:dla|r)m|cute)|h(?:o(?:small|dasia)?|a\-cy)|eh\-arm|script|\.full|tail)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bU(?:psilon(?:dieresis|acute)?hookSymbol|psilon(?:dasiaperispomeni|(?:dasia)?varia|(?:dasia)?oxia)|(?:s(?:traightstroke|hort)|hungarumlaut|k(?:Monograph)?|dieresis|straight)\-cy|(?:circumflex|dieresis|tilde)below|b(?:old(?:script|italic)?\-math|reve|ar)|psilon(?:d(?:ieresis|asia))?|(?:(?:dieresis(?:mac|ca)|psilonmac)ro|(?:n\-(?:old)?georgi|psilonafric)a|caro)n|\.(?:roundBlackBox|paren|full|box)|m(?:acron(?:dieresis|\-cy)|od)|ku\-glagolitic|(?:\.(?:blackC|c)ircle|smallmo)d|(?:(?:dieresis|tilde)?acut|horn(?:tild|acut)|\-(?:cheroke|osag))e|(?:(?:d(?:ieresis|bl))?gra|ho(?:rn(?:hookabo|gra)|okabo))ve|invertedbreve|h(?:ungarumlaut|orn)|(?:doubleStruc|eVolapu)k|horndotbelow|psilonvrachy|(?:Bold)?\-fraktur|psilontonos|(?:script|italic)\-math|circumflex|dieresis|a\-coptic|dotbelow|macron|ogonek|\-(?:adlam|cy)|small|tilde|ring)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bV(?:(?:bold)?italic\-math|boldscript\-math|(?:diagonalstrok|\-cheroke|tild)e|in\-(?:old)?georgian|\.(?:roundBlackBox|paren|full|box)|e(?:de\-glagolitic|e\-deseret|w\-arm|\-cy)|(?:(?:\.(?:blackC|c)ircl|turn)e|en)d|Bold\-fraktur|\-middleWelsh|doubleStruck|script\-math|overMSquare|ida\-coptic|bold\-math|\-fraktur|dotbelow|a\-adlam|small|o\-arm|hook|mod|S(?:1[0-6]|[2-9])|S1|Y)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bW(?:(?:bold)?italic\-math|boldscript\-math|\.(?:roundBlackBox|full|box)|\.(?:blackC|c)ircled|(?:e\-(?:old)?georgia|au\-nubia|\.pare)n|(?:Bold)?\-fraktur|doubleStruck|script\-math|c(?:ircumfle|\.bo)x|[aiouv]\-cherokee|e\-c(?:herokee|y)|u\-deseret|d(?:ot(?:accent|below)|ieresis)|bold\-math|aw\-adlam|(?:a(?:\-osag|cut)|grav)e|small|hook|mod|ynn)?\b
            name: constant.character.entity.agl.so
          - match: (?x)\bX(?:(?:bold)?script\-math|bolditalic\-math|an\-(?:old)?georgian|\.(?:roundBlackBox|b(?:lackCircled|ox)|circled|paren|full)|(?:Bold)?\-fraktur|d(?:o(?:ubleStruck|taccent)|ieresis)|i(?:talic\-math)?|bold\-math|eh\-arm)?\b
            name: constant.character.entity.agl.so

    patterns:
      - include: "#string-escapes"
      - comment: Yes this is a bit ridiculous, there are quite a lot of these
        name: constant.character.html.so
        match: (?x)\b(A(Elig|MP|acute|breve|c(irc|y)|fr|grave|lpha|macr|nd|o(gon|pf)|pplyFunction|ring|s(cr|sign)|tilde|uml)|B(a(ckslash|r(wed|v))|cy|e(cause|rnoullis|ta)|fr|opf|reve|scr|umpeq)|C(Hcy|OPY|a(cute|p(italDifferentialD)?|yleys)|c(aron|edil|irc|onint)|dot|e(dilla|nterDot)|fr|hi|ircle(Dot|Minus|Plus|Times)|lo(ckwiseContourIntegral|seCurly(DoubleQuote|Quote))|o(lone?|n(gruent|int|tourIntegral)|p(roduct|f)|unterClockwiseContourIntegral)|ross|scr|up(Cap)?)|D(D(otrahd)?|Jcy|Scy|Zcy|a(gger|rr|shv)|c(aron|y)|el(ta)?|fr|i(a(critical(Acute|Do(ubleAcute|t)|Grave|Tilde)|mond)|fferentialD)|o(pf|t((Dot|Equal))?|uble(ContourIntegral|Do(wnArrow|t)|L(eft(Arrow|RightArrow|Tee)|ong(Left(Arrow|RightArrow)|RightArrow))|Right(Arrow|Tee)|Up(Arrow|DownArrow)|VerticalBar)|wn(Arrow((Bar|UpArrow))?|Breve|Left(RightVector|TeeVector|Vector(Bar)?)|Right(TeeVector|Vector(Bar)?)|Tee(Arrow)?|arrow))|s(cr|trok))|E(NG|TH|acute|c(aron|irc|y)|dot|fr|grave|lement|m(acr|pty(SmallSquare|VerySmallSquare))|o(gon|pf)|psilon|qu(al(Tilde)?|ilibrium)|s(cr|im)|ta|uml|x(ists|ponentialE))|F(cy|fr|illed(SmallSquare|VerySmallSquare)|o(pf|rAll|uriertrf)|scr)|G(Jcy|ammad?|breve|c(edil|irc|y)|dot|fr|opf|reater(Equal(Less)?|FullEqual|Greater|Less|SlantEqual|Tilde)|scr|[Tgt])|H(ARDcy|a(cek|t)|circ|fr|ilbertSpace|o(pf|rizontalLine)|s(cr|trok)|ump(DownHump|Equal))|I(Ecy|Jlig|Ocy|acute|c(irc|y)|dot|fr|grave|m((a(cr|ginaryI)|plies))?|n(t(e(gral|rsection))?|visible(Comma|Times))|o(gon|pf|ta)|scr|tilde|u(kcy|ml))|J(c(irc|y)|fr|opf|s(cr|ercy)|ukcy)|K(Hcy|Jcy|appa|c(edil|y)|fr|opf|scr)|L(Jcy|a(cute|mbda|ng|placetrf|rr)|c(aron|edil|y)|e(ft(A(ngleBracket|rrow((Bar|RightArrow))?)|Ceiling|Do(ubleBracket|wn(TeeVector|Vector(Bar)?))|Floor|Right(Arrow|Vector)|T(ee((Arrow|Vector))?|riangle((Bar|Equal))?)|Up(DownVector|TeeVector|Vector(Bar)?)|Vector(Bar)?|arrow|rightarrow)|ss(EqualGreater|FullEqual|Greater|Less|SlantEqual|Tilde))|fr|l(eftarrow)?|midot|o(ng(Left(Arrow|RightArrow)|RightArrow|left(arrow|rightarrow)|rightarrow)|pf|wer(LeftArrow|RightArrow))|s(cr|trok|h)|[Tt])|M(ap|cy|e(diumSpace|llintrf)|fr|inusPlus|opf|scr|u)|N(Jcy|acute|c(aron|edil|y)|e(gative(MediumSpace|Thi(ckSpace|nSpace)|VeryThinSpace)|sted(GreaterGreater|LessLess)|wLine)|fr|o(Break|nBreakingSpace|pf|t((C(ongruent|upCap)|DoubleVerticalBar|E(lement|qual(Tilde)?|xists)|Greater((Equal|FullEqual|Greater|Less|SlantEqual|Tilde))?|Hump(DownHump|Equal)|Le(ftTriangle((Bar|Equal))?|ss((Equal|Greater|Less|SlantEqual|Tilde))?)|Nested(GreaterGreater|LessLess)|Precedes((Equal|SlantEqual))?|R(everseElement|ightTriangle((Bar|Equal))?)|S(quareSu(bset(Equal)?|perset(Equal)?)|u(bset(Equal)?|cceeds((Equal|SlantEqual|Tilde))?|perset(Equal)?))|Tilde((Equal|FullEqual|Tilde))?|VerticalBar))?)|scr|tilde|u)|O(Elig|acute|c(irc|y)|dblac|fr|grave|m(acr|ega|icron)|opf|penCurly(DoubleQuote|Quote)|s(cr|lash)|ti(lde|mes)|uml|ver(B(ar|rac(ket|e))|Parenthesis)|r)|P(artialD|cy|fr|hi|lusMinus|o(incareplane|pf)|r((ecedes((Equal|SlantEqual|Tilde))?|ime|o(duct|portion(al)?)))?|s(cr|i)|i)|Q(UOT|fr|opf|scr)|R(Barr|EG|a(cute|ng|rr(tl)?)|c(aron|edil|y)|e(verse(E(lement|quilibrium)|UpEquilibrium))?|fr|ho|ight(A(ngleBracket|rrow((Bar|LeftArrow))?)|Ceiling|Do(ubleBracket|wn(TeeVector|Vector(Bar)?))|Floor|T(ee((Arrow|Vector))?|riangle((Bar|Equal))?)|Up(DownVector|TeeVector|Vector(Bar)?)|Vector(Bar)?|arrow)|o(pf|undImplies)|rightarrow|s(cr|h)|uleDelayed)|S(H(CHcy|cy)|OFTcy|acute|c((aron|edil|irc|y))?|fr|hort(DownArrow|LeftArrow|RightArrow|UpArrow)|igma|mallCircle|opf|q(rt|uare((Intersection|Su(bset(Equal)?|perset(Equal)?)|Union))?)|scr|tar|u(b(set(Equal)?)?|c(ceeds((Equal|SlantEqual|Tilde))?|hThat)|p((erset(Equal)?|set))?|m))|T(HORN|RADE|S(Hcy|cy)|a[bu]|c(aron|edil|y)|fr|h(e(refore|ta)|i(ckSpace|nSpace))|ilde((Equal|FullEqual|Tilde))?|opf|ripleDot|s(cr|trok))|U(a(cute|rr(ocir)?)|br(cy|eve)|c(irc|y)|dblac|fr|grave|macr|n(der(B(ar|rac(ket|e))|Parenthesis)|ion(Plus)?)|o(gon|pf)|p(Arrow((Bar|DownArrow))?|DownArrow|Equilibrium|Tee(Arrow)?|arrow|downarrow|per(LeftArrow|RightArrow)|si(lon)?)|ring|scr|tilde|uml)|V(Dash|bar|cy|dashl?|e(r(bar|t(ical(Bar|Line|Separator|Tilde))?|yThinSpace)|e)|fr|opf|scr|vdash)|W(circ|edge|fr|opf|scr)|X(fr|opf|scr|i)|Y(Acy|Icy|Ucy|acute|c(irc|y)|fr|opf|scr|uml)|Z(Hcy|acute|c(aron|y)|dot|e(roWidthSpace|ta)|fr|opf|scr)|a(acute|breve|c((irc|ute|[Edy]))?|elig|fr?|grave|l(e(fsym|ph)|pha)|m(a(cr|lg)|p)|n(d((and|slope|[dv]))?|g((le|msd(a[a-h])?|rt(vbd?)?|s(ph|t)|zarr|e))?)|o(gon|pf)|p((acir|id|os|prox(eq)?|[Ee]))?|ring|s(cr|ymp(eq)?|t)|tilde|uml|w(conint|int))|b(Not|a(ck(cong|epsilon|prime|sim(eq)?)|r(vee|wed(ge)?))|brk(tbrk)?|c(ong|y)|dquo|e(cause?|mptyv|psi|rnou|t(ween|[ah]))|fr|ig(c(ap|irc|up)|o(dot|plus|times)|s(qcup|tar)|triangle(down|up)|uplus|vee|wedge)|karow|l(a(ck(lozenge|square|triangle((down|left|right))?)|nk)|k(1[24]|34)|ock)|n(e(quiv)?|ot)|o(pf|t(tom)?|wtie|x(D[LRlr]|H[DUdu]?|U[LRlr]|V[HLRhlr]?|box|d[LRlr]|h[DUdu]?|minus|plus|times|u[LRlr]|v[HLRhlr]?))|prime|r(eve|vbar)|s(cr|emi|ime?|ol((hsub|b))?)|u(ll(et)?|mp((eq?|E))?))|c(a(cute|p((and|brcup|c(ap|up)|dot|s))?|r(et|on))|c(a(ps|ron)|edil|irc|ups(sm)?)|dot|e(dil|mptyv|nt(erdot)?)|fr|h(cy|eck(mark)?|i)|ir((c((eq|le(arrow(left|right)|d(ast|circ|dash|[RS]))))?|fnint|mid|scir|[Ee]))?|lubs(uit)?|o(lon(eq?)?|m(mat?|p((fn|le(ment|xes)))?)|n(g(dot)?|int)|p(rod|y(sr)?|f))|r(arr|oss)|s(cr|u(be?|pe?))|tdot|u(darr[lr]|e(pr|sc)|larrp?|p((brcap|c(ap|up)|dot|or|s))?|r(arrm?|ly(eq(prec|succ)|vee|wedge)|ren|vearrow(left|right))|vee|wed)|w(conint|int)|ylcty)|d(Arr|Har|a(gger|leth|rr|shv?)|b(karow|lac)|c(aron|y)|d((a(gger|rr)|otseq))?|e(lta|mptyv|g)|f(isht|r)|har[lr]|i(am((ond(suit)?|s))?|gamma|sin|v((ide(ontimes)?|onx))?|e)|jcy|lc(orn|rop)|o(llar|pf|t((eq(dot)?|minus|plus|square))?|ublebarwedge|wn(arrow|downarrows|harpoon(left|right)))|r(bkarow|c(orn|rop))|s(c[ry]|ol|trok)|t(dot|rif?)|u(arr|har)|wangle|z(cy|igrarr))|e(D(Dot|ot)|a(cute|ster)|c(aron|irc?|olon|y)|dot|f(Dot|r)|g((rave|s(dot)?))?|l((inters|s(dot)?|l))?|m(acr|pty((set|v))?|sp(1[34])?)|n(sp|g)|o(gon|pf)|p(ar(sl)?|lus|si((lon|v))?)|q(c(irc|olon)|s(im|lant(gtr|less))|u(als|est|iv(DD)?)|vparsl)|r(Dot|arr)|s(cr|dot|im)|t[ah]|u(ml|ro)|x(cl|ist|p(ectation|onentiale))|e)|f(allingdotseq|cy|emale|f(ilig|l(ig|lig)|r)|ilig|jlig|l(at|lig|tns)|nof|o(pf|r(all|kv?))|partint|r(a(c(1[2-68]|2[35]|3[458]|45|5[68]|78)|sl)|own)|scr)|g(El?|a(cute|mmad?|p)|breve|c(irc|y)|dot|e((q((slant|q))?|s((cc|dot(ol?)?|l(es)?))?|l))?|fr|gg?|imel|jcy|l[Eaj]?|n(ap(prox)?|e(qq?)?|sim|E)|opf|rave|s(cr|im[el]?)|t((c(ir|c)|dot|lPar|quest|r(a(pprox|rr)|dot|eq(less|qless)|less|sim)))?|v(ertneqq|nE))|h(Arr|a(irsp|lf|milt|r(dcy|r((cir|w))?))|bar|circ|e(arts(uit)?|llip|rcon)|fr|ks(earow|warow)|o(arr|mtht|ok(leftarrow|rightarrow)|pf|rbar)|s(cr|lash|trok)|y(bull|phen))|i(acute|c((irc|y))?|e(cy|xcl)|f[fr]|grave|i((i(int|nt)|nfin|ota))?|jlig|m(a(cr|g(line|part|e)|th)|of|ped)|n((care|fin(tie)?|odot|t((cal|e(gers|rcal)|larhk|prod))?))?|o(cy|gon|pf|ta)|prod|quest|s(cr|in((dot|sv?|[Ev]))?)|t(ilde)?|u(kcy|ml))|j(c(irc|y)|fr|math|opf|s(cr|ercy)|ukcy)|k(appav?|c(edil|y)|fr|green|hcy|jcy|opf|scr)|l(A(arr|rr|tail)|Barr|Eg?|Har|a(cute|emptyv|gran|mbda|ng((le|d))?|quo|rr((b(fs)?|fs|hk|lp|pl|sim|tl))?|t((ail|es?))?|p)|b(arr|brk|r(ac[ek]|k(sl[du]|e)))|c(aron|e(dil|il)|ub|y)|d(ca|quor?|r(dhar|ushar)|sh)|e((ft(arrow(tail)?|harpoon(down|up)|leftarrows|right(arrows?|harpoons|squigarrow)|threetimes)|q((slant|q))?|s((cc|dot(or?)?|g(es)?|s(approx|dot|eq(gtr|qgtr)|gtr|sim)))?|g))?|f(isht|loor|r)|gE?|h(ar(ul?|d)|blk)|jcy|l((arr|corner|hard|tri))?|m(idot|oust(ache)?)|n(ap(prox)?|e(qq?)?|sim|E)|o(a(ng|rr)|brk|ng(left(arrow|rightarrow)|mapsto|rightarrow)|oparrow(left|right)|p(ar|lus|f)|times|w(ast|bar)|z((enge|f))?)|par(lt)?|r(arr|corner|hard?|tri|m)|s(aquo|cr|im[eg]?|q(uor?|b)|trok|h)|t((c(ir|c)|dot|hree|imes|larr|quest|r(Par|i[ef]?)))?|ur(dshar|uhar)|v(ertneqq|nE))|m(DDot|a(cr|l(t(ese)?|e)|p(sto((down|left|up))?)?|rker)|c(omma|y)|dash|easuredangle|fr|ho|i(cro|d((ast|cir|dot))?|nus((du?|b))?)|l(cp|dr)|nplus|o(dels|pf)|s(cr|tpos)|u((ltimap|map))?|p)|n(G(tv?|g)|L(eft(arrow|rightarrow)|tv?|l)|Rightarrow|V(Dash|dash)|a(bla|cute|ng|p((id|os|prox|E))?|tur(als?)?)|b(sp|umpe?)|c(a(ron|p)|edil|ong(dot)?|up|y)|dash|e((Arr|ar(hk|r(ow)?)|dot|quiv|s(ear|im)|xists?))?|fr|g(e((q((slant|q))?|s))?|sim|tr?|E)|h(Arr|arr|par)|i((sd?|v))?|jcy|l(Arr|arr|dr|e((ft(arrow|rightarrow)|q((slant|q))?|ss?))?|sim|t(rie?)?|E)|mid|o(pf|t((in((dot|v[a-c]|E))?|ni(v[a-c])?))?)|p(ar((allel|sl|t))?|olint|r((cue|e(c(eq)?)?))?)|r(Arr|arr[cw]?|ightarrow|trie?)|s(c((cue|[er]))?|hort(mid|parallel)|im(eq?)?|mid|par|qsu(be|pe)|u(b((set(eqq?)?|[Ee]))?|cc(eq)?|p((set(eqq?)?|[Ee]))?))|t(gl|ilde|lg|riangle(left(eq)?|right(eq)?))|u(m((ero|sp))?)?|v(Dash|Harr|ap|dash|g[et]|infin|l(Arr|t(rie)?|e)|r(Arr|trie)|sim)|w(Arr|ar(hk|r(ow)?)|near))|o(a(cute|st)|c(irc?|y)|d(ash|blac|iv|ot|sold)|elig|f(cir|r)|g(on|rave|t)|h(bar|m)|int|l(arr|c(ir|ross)|ine|t)|m(acr|ega|i(cron|nus|d))|opf|p(ar|erp|lus)|r((arr|d((er(of)?|[fm]))?|igof|or|slope|v))?|s(cr|lash|ol)|ti(lde|mes(as)?)|uml|vbar|S)|p(ar((a(llel)?|s(im|l)|t))?|cy|er(cnt|iod|mil|tenk|p)|fr|h(iv?|mmat|one)|i((tchfork|v))?|l(an(ckh?|kv)|us((acir|cir|d[ou]|mn|sim|two|[be]))?)|o(intint|pf|und)|r((ap|cue|e(c((approx|curlyeq|eq|n(approx|eqq|sim)|sim))?)?|imes?|n(ap|sim|E)|o(f(alar|line|surf)|p(to)?|d)|sim|urel|E))?|s(cr|i)|uncsp|m)|q(fr|int|opf|prime|scr|u(at(ernions|int)|est(eq)?|ot))|r(A(arr|rr|tail)|Barr|Har|a(c(ute|e)|dic|emptyv|ng((le|[de]))?|quo|rr((ap|b(fs)?|fs|hk|lp|pl|sim|tl|[cw]))?|t(ail|io(nals)?))|b(arr|brk|r(ac[ek]|k(sl[du]|e)))|c(aron|e(dil|il)|ub|y)|d(ca|ldhar|quor?|sh)|e(al((ine|part|s))?|ct|g)|f(isht|loor|r)|h(ar(ul?|d)|ov?)|i(ght(arrow(tail)?|harpoon(down|up)|left(arrows|harpoons)|rightarrows|squigarrow|threetimes)|ng|singdotseq)|l(arr|har|m)|moust(ache)?|nmid|o(a(ng|rr)|brk|p(ar|lus|f)|times)|p(ar(gt)?|polint)|rarr|s(aquo|cr|q(uor?|b)|h)|t(hree|imes|ri((ltri|[ef]))?)|uluhar|x)|s(acute|bquo|c((a(ron|p)|cue|e(dil)?|irc|n(ap|sim|E)|polint|sim|[Ey]))?|dot[be]?|e(Arr|ar(hk|r(ow)?)|ct|mi|swar|tm(inus|n)|xt)|fr(own)?|h(arp|c(hcy|y)|ort(mid|parallel)|y)|i(gma[fv]?|m((dot|eq?|gE?|lE?|ne|plus|rarr))?)|larr|m(a(llsetminus|shp)|eparsl|i(le|d)|t(es?)?)|o(ftcy|l(b(ar)?)?|pf)|pa(des(uit)?|r)|q(c(aps?|ups?)|su(b((set(eq)?|e))?|p((set(eq)?|e))?)|u((ar[ef]|f))?)|rarr|s(cr|etmn|mile|tarf)|t(arf?|r(aight(epsilon|phi)|ns))|u(b((dot|e(dot)?|mult|n[Ee]|plus|rarr|s(et((eqq?|neqq?))?|im|u[bp])|E))?|cc((approx|curlyeq|eq|n(approx|eqq|sim)|sim))?|ng|p((d(ot|sub)|e(dot)?|hs(ol|ub)|larr|mult|n[Ee]|plus|s(et((eqq?|neqq?))?|im|u[bp])|[1-3E]))?|m)|w(Arr|ar(hk|r(ow)?)|nwar)|zlig)|t(a(rget|u)|brk|c(aron|edil|y)|dot|elrec|fr|h(e(re(fore|4)|ta((sym|v))?)|i(ck(approx|sim)|nsp)|k(ap|sim)|orn)|i(lde|mes((b(ar)?|d))?|nt)|o(ea|p((bot|cir|f(ork)?))?|sa)|prime|r(ade|i(angle((down|left(eq)?|right(eq)?|q))?|dot|minus|plus|sb|time|e)|pezium)|s(c[ry]|hcy|trok)|w(ixt|ohead(leftarrow|rightarrow)))|u(Arr|Har|a(cute|rr)|br(cy|eve)|c(irc|y)|d(arr|blac|har)|f(isht|r)|grave|h(ar[lr]|blk)|l(c(orn(er)?|rop)|tri)|m(acr|l)|o(gon|pf)|p(arrow|downarrow|harpoon(left|right)|lus|si((lon|h))?|uparrows)|r(c(orn(er)?|rop)|ing|tri)|scr|t(dot|ilde|rif?)|u(arr|ml)|wangle)|v(Arr|Barv?|Dash|a(ngrt|r(epsilon|kappa|nothing|p(hi|ropto|i)|r(ho)?|s(igma|u(bsetneqq?|psetneqq?))|t(heta|riangle(left|right))))|cy|dash|e(e((bar|eq))?|llip|r(bar|t))|fr|ltri|nsu[bp]|opf|prop|rtri|s(cr|u(bn[Ee]|pn[Ee]))|zigzag)|w(circ|e(d(bar|geq?)|ierp)|fr|opf|r(eath)?|scr|p)|x(c(ap|irc|up)|dtri|fr|h(Arr|arr)|l(Arr|arr)|map|nis|o(dot|p(lus|f)|time)|r(Arr|arr)|s(cr|qcup)|u(plus|tri)|vee|wedge|i)|y(ac(ute|y)|c(irc|y)|en|fr|icy|opf|scr|u(cy|ml))|z(acute|c(aron|y)|dot|e(etrf|ta)|fr|hcy|igrarr|opf|scr|w(nj|j)))\b
      - comment: Same for these
        match: (?x)\b(A((E(acute)?|acute|breve|circumflex|dieresis|grave|lpha(tonos)?|macron|ogonek|ring(acute)?|tilde))?|B(eta)?|C((acute|c(aron|edilla|ircumflex)|dotaccent|hi))?|D((c(aron|roat)|elta))?|E((acute|breve|c(aron|ircumflex)|d(ieresis|otaccent)|grave|macron|ng|ogonek|psilon(tonos)?|t(a(tonos)?|h)|uro))?|G((amma|breve|c(aron|ircumflex)|dotaccent))?|H((185(33|43|51)|22073|bar|circumflex))?|I((acute|breve|circumflex|d(ieresis|otaccent)|fraktur|grave|macron|o(gonek|ta((dieresis|tonos))?)|tilde|J))?|J(circumflex)?|K(appa)?|L((a(cute|mbda)|caron|dot|slash))?|Mu?|N((acute|caron|tilde|u))?|O((acute|breve|circumflex|dieresis|grave|h(orn|ungarumlaut)|m(acron|ega(tonos)?|icron(tonos)?)|slash(acute)?|tilde|E))?|P((hi|si|i))?|R((acute|caron|fraktur|ho))?|S((F(0(10000|20000|30000|40000|50000|60000|70000|80000|90000)|1(00000|10000|90000)|2(00000|10000|20000|30000|40000|50000|60000|70000|80000)|3(60000|70000|80000|90000)|4(00000|10000|20000|30000|40000|50000|60000|70000|80000|90000)|5(00000|10000|20000|30000|40000))|acute|c(aron|edilla|ircumflex)|igma))?|T((au|bar|caron|h(eta|orn)))?|U((acute|breve|circumflex|dieresis|grave|h(orn|ungarumlaut)|macron|ogonek|psilon((dieresis|tonos|1))?|ring|tilde))?|W((acute|circumflex|dieresis|grave))?|Xi?|Y((acute|circumflex|dieresis|grave))?|Z((acute|caron|dotaccent|eta))?|a((acute|breve|c(ircumflex|ute(comb)?)|dieresis|e(acute)?|grave|l(eph|pha(tonos)?)|m(acron|persand)|n(gle((left|right))?|oteleia)|ogonek|pproxequal|r(ing(acute)?|row(both|d(bl(both|down|left|right|up)|own)|left|right|up(dn(bse)?)?))|s(cii(circum|tilde)|terisk(math)?)|t(ilde)?))?|b((a(ckslash|r)|eta|lock|r(ac(e(left|right)|ket(left|right))|eve|okenbar)|ullet))?|c((a(cute|r(on|riagereturn))|c(aron|edilla|ircumflex)|dotaccent|e(dilla|nt)|hi|irc(le((multiply|plus))?|umflex)|lub|o(lon(monetary)?|mma|ngruent|pyright)|urrency))?|d((agger(dbl)?|c(aron|roat)|e(gree|lta)|i(amond|eresis(tonos)?|vide)|kshade|nblock|o(llar|ng|t(accent|belowcomb|lessi|math))))?|e((acute|breve|c(aron|ircumflex)|d(ieresis|otaccent)|grave|ight|l(ement|lipsis)|m(acron|dash|ptyset)|n(dash|g)|ogonek|psilon(tonos)?|qu(al|ivalence)|stimated|t(a(tonos)?|h)|x(clam(d(bl|own))?|istential)))?|f((emale|i(guredash|lled(box|rect)|ve(eighths)?)|lorin|our|ra(ction|nc)))?|g((amma|breve|c(aron|ircumflex)|dotaccent|ermandbls|r(a(dient|ve(comb)?)|eater(equal)?)|uil(lemot(left|right)|singl(left|right))))?|h((bar|circumflex|eart|o(okabovecomb|use)|ungarumlaut|yphen))?|i((acute|breve|circumflex|dieresis|grave|macron|n(finity|te(gral((bt|tp))?|rsection)|v(bullet|circle|smileface))|o(gonek|ta((dieresis(tonos)?|tonos))?)|tilde|j))?|j(circumflex)?|k((appa|greenlandic))?|l((a(cute|mbda)|caron|dot|ess(equal)?|fblock|ira|o(gical(and|not|or)|ngs|zenge)|slash|tshade))?|m((a(cron|le)|inu(te|s)|u((ltiply|sicalnote(dbl)?))?))?|n((a(cute|postrophe)|caron|ine|ot(e(lement|qual)|subset)|tilde|u(mbersign)?))?|o((acute|breve|circumflex|dieresis|g(onek|rave)|h(orn|ungarumlaut)|m(acron|ega((tonos|1))?|icron(tonos)?)|ne((dotenleader|eighth|half|quarter|third))?|penbullet|r(d(feminine|masculine)|thogonal)|slash(acute)?|tilde|e))?|p((ar(agraph|en(left|right)|tialdiff)|e(r(cent|iod(centered)?|pendicular|thousand)|seta)|hi1?|lus(minus)?|r(escription|o(duct|p(ersu(bset|perset)|ortional)))|si|i))?|q(u(estion(down)?|ote(dbl((base|left|right))?|left|r(eversed|ight)|singl(base|e))))?|r((a(cute|dical)|caron|e(flexsu(bset|perset)|gistered|vlogicalnot)|ho|ing|tblock))?|s((acute|c(aron|edilla|ircumflex)|e(c(ond|tion)|micolon|ven(eighths)?)|hade|i(gma1?|milar|x)|lash|mileface|pa(ce|de)|terling|u(chthat|mmation|n)))?|t((au|bar|caron|h(e(refore|ta1?)|orn|ree((eighths|quarters))?)|ilde(comb)?|onos|r(ademark|iag(dn|lf|rt|up))|wo((dotenleader|thirds))?))?|u((acute|breve|circumflex|dieresis|grave|h(orn|ungarumlaut)|macron|n(derscore(dbl)?|i(on|versal))|ogonek|p(block|silon((dieresis(tonos)?|tonos))?)|ring|tilde))?|w((acute|circumflex|dieresis|eierstrass|grave))?|xi?|y((acute|circumflex|dieresis|en|grave))?|z((acute|caron|dotaccent|e(ro|ta)))?|[FQVv])\b
        name: constant.character.aglfn.so
      - include: '#aglfn'

  entities:
    patterns:
      - include: "#function-names"
      - include: "#constant-names"
      - include: "#type-names"
      - include: "#variable-names"

  class-names:
    comment: Names for built-in classes
    patterns:
      - comment:

  type-names:
    comment: Names for built-in types
    patterns:
      - comment: Primitive data types
        match: |
          (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(
          bool(ean)?|u?int|float|natural|ratio|real|imag|complex|number
          |char|rune|string|symbol|regexp?|function|buffer|binary
          |# numeric types
          ([cifsun]|natural|ratio|u?int|real|imag|complex)
          (8|16|32|64|128)
          |[ci](half|float|double|decimal|octuple)
          )\b
        name: support.type.builtin.primitive.so
      - comment: Constant/algebraic types
        match: |
          (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(
          true|false|null|void|nan|infin
          |any|empty|object|record|unit|mixed
          |just|some|none|never|(im)?pure|channel
          )\b
        name: support.type.builtin.so
      - comment: Data structures
        match: |
          (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(
          array|tuple|(?:mut)?(?:list|set|map)|dict|function
          |process|sequence|generator|range|stack|heap|queue|tree|trie
          )\b
        name: support.type.primitive.so
      - comment: Primitive classes
        match: |
          (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(
          Bool(ean)?|U?Int|Float|Natural|Ratio|Real|Imag|Complex|Number
          |Char|Rune|String|Symbol|RegExp?|Function|Buffer|Binary
          |# Numeric Types
          ([CIFSUN]|Natural|Ratio|U?Int|Real|Imag|Complex)
          (8|16|32|64|128)
          |[CI](Half|Float|Double|Decimal|Octuple)
          )\b
        name: support.class.builtin.primitive.so
      - comment: Constant/algebraic classes
        match: |
          (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(
          True|False|Null|Void|NaN|Infin
          |Any|Empty|Object|Record|Unit|Mixed
          |Just|Some|None|Never|(Im)?pure|Channel
          )\b
        name: support.class.builtin.so
      - comment: Data structure classes
        match: |
          (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(
          Array|Tuple|(Mut)?(List|Set|Map)|Dict|Function
          |Process|Sequence|Generator|Range|Stack|Heap|Queue|Tree|Trie
          )\b
        name: support.class.primitive.so

      - comment: Interface classes | IEnumerable, etc
        match: \s*\bI((\p{Lu}[\w&&\P{Lu}]*)+)\b
        name: entity.name.interface.so
      - comment: Namespace classes | NSString, etc
        match: \s*\bNS((\p{Lu}[\w&&\P{Lu}]*)+)\b
        name: entity.name.namespace.so
      - comment: Error classes | BaseError, etc
        match: \s*\b((\p{Lu}[\w&&\P{Lu}]*)+)?(Error|Exception)\b
        name: support.class.error.so
      - comment: Trait classes | Serializable, Loggable etc
        match: \s*\b((\p{Lu}[\w&&\P{Lu}]*)+)able\b
        name: support.class.trait.so

  function-names:
    comment: Names for built-in functions (initial dump)
    patterns:
      - comment: isName functions
        match: (?x)\s*\bis(\p{Lu}[\w&&\P{Lu}]*)+\b\s*
        name: support.function.predicate

  constant-names:
    comment: Names for constants, symbols and static properties
    patterns: []

  variable-names:
    comment: Standard Library variable names
    patterns: []

  property-names:
    comment: Standard Library property names
    patterns: []

  literals:
    patterns:
      - include: "#regexps"
      - include: "#strings-unquoted"
      - include: "#strings-quoted"
      - include: "#symbols"
      - include: "#numbers"
      - include: "#constants"

  constants:
    patterns:
      - match: |
          (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(?:
          (true)|(false)|(null)|(void)|(nan)|(infin)
          )\b\s*
        captures:
          1: {name: constant.language.boolean.true.so}
          2: {name: constant.language.boolean.false.so}
          3: {name: constant.language.null.so}
          4: {name: constant.language.undefined.so}
          5: {name: constant.language.nan.so}
          6: {name: constant.language.infinity.so}
      - match: |
          (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(?:
          (it|that|arguments|super|this|self|proto|prototype|constructor|target)
          )\b\s*
        captures:
          1: {name: variable.language.$1.so}

  numbers:
    patterns:
      - match: (?<=(^|[({\[])\s*\d\w*)\.
        name: punctuation.separator.decimal.period.so
      - match: (?<=(?:^|[({\[])\s*|\s)\.(?=\d)
        name: punctuation.separator.decimal.period.so
      - match: (?ix)\s*\b
          ((?:[2-9]|[1-9]\d+)b)
          (?:\p{Alnum}+(?:_*\p{Alnum}+)*)
          (?:(\.)(?:\p{Alnum}+(?:_*\p{Alnum}+)*)?)?
          (?:(\*)\p{Alnum}+(?:_*\p{Alnum}+)*)?
          (\^(?:\d|[1-9]\d+)?[+-]?\d+)?
          (=(?:\d|[1-9]\d+))?
          (:[\p{Pc}\p{L}]\w*)?
          \b\s*
        captures:
          0: {name: constant.numeric.arbitrary-radix.so}
          1: {name: storage.type.numeric.so}
          2: {name: punctuation.separator.decimal.period.so}
          3: {name: constant.numeric.other.separator.so}
          4: {name: constant.numeric.other.exponent.so}
          5: {name: constant.numeric.other.density.so}
          6: {name: storage.type.numeric.so}
      - match: (?ix)\s*\b
          ((?:[2-9]|[1-9]\d+)b)
          (?:\p{Alnum}+(?:_*\p{Alnum}+)*)?
          (?:(\.)(?:\p{Alnum}+(?:_*\p{Alnum}+)*)?)
          (?:(\*)\p{Alnum}+(?:_*\p{Alnum}+)*)?
          (\^(?:\d|[1-9]\d+)?[+-]?\d+)?
          (=(?:\d|[1-9]\d+))?
          (:[\p{Pc}\p{L}]\w*)?
          \b\s*
        captures:
          0: {name: constant.numeric.arbitrary-radix.so}
          1: {name: storage.type.numeric.so}
          2: {name: punctuation.separator.decimal.period.so}
          3: {name: constant.numeric.other.separator.so}
          4: {name: constant.numeric.other.exponent.so}
          5: {name: constant.numeric.other.density.so}
          6: {name: storage.type.numeric.so}
      - match: (?ix)\s*\b
          (0b)
          (?:[01]+(?:_*[01]+)*)
          (?:(\.)(?:[01]+(?:_*[01]+)*)?)?
          (?:(\*)[01]+(?:_*[01]+)*)?
          (\^(?:\d|[1-9]\d+)?[+-]?\d+)?
          (=(?:\d|[1-9]\d+))?
          (:[\p{Pc}\p{L}]\w*)?
          \b\s*
        captures:
          0: {name: constant.numeric.binary.so}
          1: {name: storage.type.numeric.so}
          2: {name: punctuation.separator.decimal.period.so}
          3: {name: constant.numeric.other.separator.so}
          4: {name: constant.numeric.other.exponent.so}
          5: {name: constant.numeric.other.density.so}
          6: {name: storage.type.numeric.so}
      - match: (?ix)\s*\b
          (0b)
          (?:[01]+(?:_*[01]+)*)?
          (?:(\.)(?:[01]+(?:_*[01]+)*)?)
          (?:(\*)[01]+(?:_*[01]+)*)?
          (\^(?:\d|[1-9]\d+)?[+-]?\d+)?
          (=(?:\d|[1-9]\d+))?
          (:[\p{Pc}\p{L}]\w*)?
          \b\s*
        captures:
          0: {name: constant.numeric.binary.so}
          1: {name: storage.type.numeric.so}
          2: {name: punctuation.separator.decimal.period.so}
          3: {name: constant.numeric.other.separator.so}
          4: {name: constant.numeric.other.exponent.so}
          5: {name: constant.numeric.other.density.so}
          6: {name: storage.type.numeric.so}
      - match: (?ix)\s*\b
          (0q)
          (?:[0-3]+(?:_*[0-3]+)*)
          (?:(\.)(?:[0-3]+(?:_*[0-3]+)*)?)?
          (?:(\*)[0-3]+(?:_*[0-3]+)*)?
          (\^(?:\d|[1-9]\d+)?[+-]?\d+)?
          (=(?:\d|[1-9]\d+))?
          (:[\p{Pc}\p{L}]\w*)?
          \b\s*
        captures:
          0: {name: constant.numeric.quaternary.so}
          1: {name: storage.type.numeric.so}
          2: {name: punctuation.separator.decimal.period.so}
          3: {name: constant.numeric.other.separator.so}
          4: {name: constant.numeric.other.exponent.so}
          5: {name: constant.numeric.other.density.so}
          6: {name: storage.type.numeric.so}
      - match: (?ix)\s*\b
          (0q)
          (?:[0-3]+(?:_*[0-3]+)*)?
          (?:(\.)(?:[0-3]+(?:_*[0-3]+)*)?)
          (?:(\*)[0-3]+(?:_*[0-3]+)*)?
          (\^(?:\d|[1-9]\d+)?[+-]?\d+)?
          (=(?:\d|[1-9]\d+))?
          (:[\p{Pc}\p{L}]\w*)?
          \b\s*
        captures:
          0: {name: constant.numeric.quaternary.so}
          1: {name: storage.type.numeric.so}
          2: {name: punctuation.separator.decimal.period.so}
          3: {name: constant.numeric.other.separator.so}
          4: {name: constant.numeric.other.exponent.so}
          5: {name: constant.numeric.other.density.so}
          6: {name: storage.type.numeric.so}
      - match: (?ix)\s*\b
          (0s)
          (?:[0-5]+(?:_*[0-5]+)*)
          (?:(\.)(?:[0-5]+(?:_*[0-5]+)*)?)?
          (?:(\*)[0-5]+(?:_*[0-5]+)*)?
          (\^(?:\d|[1-9]\d+)?[+-]?\d+)?
          (=(?:\d|[1-9]\d+))?
          (:[\p{Pc}\p{L}]\w*)?
          \b\s*
        captures:
          0: {name: constant.numeric.senary.so}
          1: {name: storage.type.numeric.so}
          2: {name: punctuation.separator.decimal.period.so}
          3: {name: constant.numeric.other.separator.so}
          4: {name: constant.numeric.other.exponent.so}
          5: {name: constant.numeric.other.density.so}
          6: {name: storage.type.numeric.so}
      - match: (?ix)\s*\b
          (0s)
          (?:[0-5]+(?:_*[0-5]+)*)?
          (?:(\.)(?:[0-5]+(?:_*[0-5]+)*)?)
          (?:(\*)[0-5]+(?:_*[0-5]+)*)?
          (\^(?:\d|[1-9]\d+)?[+-]?\d+)?
          (=(?:\d|[1-9]\d+))?
          (:[\p{Pc}\p{L}]\w*)?
          \b\s*
        captures:
          0: {name: constant.numeric.senary.so}
          1: {name: storage.type.numeric.so}
          2: {name: punctuation.separator.decimal.period.so}
          3: {name: constant.numeric.other.separator.so}
          4: {name: constant.numeric.other.exponent.so}
          5: {name: constant.numeric.other.density.so}
          6: {name: storage.type.numeric.so}
      - match: (?ix)\s*\b
          (0o)
          (?:[0-7]+(?:_*[0-7]+)*)
          (?:(\.)(?:[0-7]+(?:_*[0-7]+)*)?)?
          (?:(\*)[0-7]+(?:_*[0-7]+)*)?
          (\^(?:\d|[1-9]\d+)?[+-]?\d+)?
          (=(?:\d|[1-9]\d+))?
          (:[\p{Pc}\p{L}]\w*)?
          \b\s*
        captures:
          0: {name: constant.numeric.octal.so}
          1: {name: storage.type.numeric.so}
          2: {name: punctuation.separator.decimal.period.so}
          3: {name: constant.numeric.other.separator.so}
          4: {name: constant.numeric.other.exponent.so}
          5: {name: constant.numeric.other.density.so}
          6: {name: storage.type.numeric.so}
      - match: (?ix)\s*\b
          (0o)
          (?:[0-7]+(?:_*[0-7]+)*)?
          (?:(\.)(?:[0-7]+(?:_*[0-7]+)*)?)
          (?:(\*)[0-7]+(?:_*[0-7]+)*)?
          (\^(?:\d|[1-9]\d+)?[+-]?\d+)?
          (=(?:\d|[1-9]\d+))?
          (:[\p{Pc}\p{L}]\w*)?
          \b\s*
        captures:
          0: {name: constant.numeric.octal.so}
          1: {name: storage.type.numeric.so}
          2: {name: punctuation.separator.decimal.period.so}
          3: {name: constant.numeric.other.separator.so}
          4: {name: constant.numeric.other.exponent.so}
          5: {name: constant.numeric.other.density.so}
          6: {name: storage.type.numeric.so}
      - match: (?ix)\s*\b
          (0z)
          (?:[\dab]+(?:_*[\dab]+)*)
          (?:(\.)(?:[\dab]+(?:_*[\dab]+)*)?)?
          (?:(\*)[\dab]+(?:_*[\dab]+)*)?
          (\^(?:\d|[1-9]\d+)?[+-]?\d+)?
          (=(?:\d|[1-9]\d+))?
          (:[\p{Pc}\p{L}]\w*)?
          \b\s*
        captures:
          0: {name: constant.numeric.duodecimal.so}
          1: {name: storage.type.numeric.so}
          2: {name: punctuation.separator.decimal.period.so}
          3: {name: constant.numeric.other.separator.so}
          4: {name: constant.numeric.other.exponent.so}
          5: {name: constant.numeric.other.density.so}
          6: {name: storage.type.numeric.so}
      - match: (?ix)\s*\b
          (0z)
          (?:[\dab]+(?:_*[\dab]+)*)?
          (?:(\.)(?:[\dab]+(?:_*[\dab]+)*)?)
          (?:(\*)[\dab]+(?:_*[\dab]+)*)?
          (\^(?:\d|[1-9]\d+)?[+-]?\d+)?
          (=(?:\d|[1-9]\d+))?
          (:[\p{Pc}\p{L}]\w*)?
          \b\s*
        captures:
          0: {name: constant.numeric.duodecimal.so}
          1: {name: storage.type.numeric.so}
          2: {name: punctuation.separator.decimal.period.so}
          3: {name: constant.numeric.other.separator.so}
          4: {name: constant.numeric.other.exponent.so}
          5: {name: constant.numeric.other.density.so}
          6: {name: storage.type.numeric.so}
      - match: (?ix)\s*\b
          (0x)
          (?:\h+(?:_*\h+)*)
          (?:(\.)(?:\h+(?:_*\h+)*)?)?
          (?:(\*)\h+(?:_*\h+)*)?
          (\^(?:\d|[1-9]\d+)?[+-]?\d+)?
          (=(?:\d|[1-9]\d+))?
          (:[\p{Pc}\p{L}]\w*)?
          \b\s*
        captures:
          0: {name: constant.numeric.hexadecimal.so}
          1: {name: storage.type.numeric.so}
          2: {name: punctuation.separator.decimal.period.so}
          3: {name: constant.numeric.other.separator.so}
          4: {name: constant.numeric.other.exponent.so}
          5: {name: constant.numeric.other.density.so}
          6: {name: storage.type.numeric.so}
      - match: (?ix)\s*\b
          (0x)
          (?:\h+(?:_*\h+)*)?
          (?:(\.)(?:\h+(?:_*\h+)*)?)
          (?:(\*)\h+(?:_*\h+)*)?
          (\^(?:\d|[1-9]\d+)?[+-]?\d+)?
          (=(?:\d|[1-9]\d+))?
          (:[\p{Pc}\p{L}]\w*)?
          \b\s*
        captures:
          0: {name: constant.numeric.hexadecimal.so}
          1: {name: storage.type.numeric.so}
          2: {name: punctuation.separator.decimal.period.so}
          3: {name: constant.numeric.other.separator.so}
          4: {name: constant.numeric.other.exponent.so}
          5: {name: constant.numeric.other.density.so}
          6: {name: storage.type.numeric.so}
      - match: (?ix)\s*\b
          ()
          (?:\d+(?:_*\d+)*)
          (?:(\.)(?:\d+(?:_*\d+)*)?)?
          (?:(\*)\d+(?:_*\d+)*)?
          (\^(?:\d|[1-9]\d+)?[+-]?\d+)?
          (=(?:\d|[1-9]\d+))?
          (:[\p{Pc}\p{L}]\w*)?
          \b\s*
        captures:
          0: {name: constant.numeric.decimal.so}
          1: {name: storage.type.numeric.so}
          2: {name: punctuation.separator.decimal.period.so}
          3: {name: constant.numeric.other.separator.so}
          4: {name: constant.numeric.other.exponent.so}
          5: {name: constant.numeric.other.density.so}
          6: {name: storage.type.numeric.so}
      - match: (?ix)\s*\b
          ()
          (?:\d+(?:_*\d+)*)?
          (?:(\.)(?:\d+(?:_*\d+)*)?)
          (?:(\*)\d+(?:_*\d+)*)?
          (\^(?:\d|[1-9]\d+)?[+-]?\d+)?
          (=(?:\d|[1-9]\d+))?
          (:[\p{Pc}\p{L}]\w*)?
          \b\s*
        captures:
          0: {name: constant.numeric.decimal.so}
          1: {name: storage.type.numeric.so}
          2: {name: punctuation.separator.decimal.period.so}
          3: {name: constant.numeric.other.separator.so}
          4: {name: constant.numeric.other.exponent.so}
          5: {name: constant.numeric.other.density.so}
          6: {name: storage.type.numeric.so}
      - match: (?ix)\s*\b
          (\d+\w)
          (?:\w+(?:_*\w+)*)
          (?:(\.)(?:\w+(?:_*\w+)*)?)?
          (?:(\*)\w+(?:_*\w+)*)?
          (\^(?:\d|[1-9]\d+)?[+-]?\d+)?
          (=(?:\d|[1-9]\d+))?
          (:[\p{Pc}\p{L}]\w*)?
          \b\s*
        captures:
          0: {name: constant.numeric.illegal.so}
          1: {name: storage.type.numeric.so}
          2: {name: punctuation.separator.decimal.period.so}
          3: {name: constant.numeric.other.separator.so}
          4: {name: constant.numeric.other.exponent.so}
          5: {name: constant.numeric.other.density.so}
          6: {name: storage.type.numeric.so}
      - match: (?ix)\s*\b
          (\d+\w)
          (?:\w+(?:_*\w+)*)?
          (?:(\.)(?:\w+(?:_*\w+)*)?)
          (?:(\*)\w+(?:_*\w+)*)?
          (\^(?:\d|[1-9]\d+)?[+-]?\d+)?
          (=(?:\d|[1-9]\d+))?
          (:[\p{Pc}\p{L}]\w*)?
          \b\s*
        captures:
          0: {name: constant.numeric.illegal.so}
          1: {name: storage.type.numeric.so}
          2: {name: punctuation.separator.decimal.period.so}
          3: {name: constant.numeric.other.separator.so}
          4: {name: constant.numeric.other.exponent.so}
          5: {name: constant.numeric.other.density.so}
          6: {name: storage.type.numeric.so}

  strings-quoted:
    patterns:
      - comment: single quoted raw string
        begin: \s*('{3,})
        contentName: string.quoted.single.so
        end: \s*((\1)(?!\1))
        captures:
          1: {name: punctuation.definition.string.so}
        patterns:
          - include: "#embedded-raw"
      - comment: simple single quoted raw string
        begin: \s*(')
        contentName: string.quoted.single.so
        end: \s*((\1)(?!\1))
        captures:
          1: {name: punctuation.definition.string.so}
        patterns:
          - match: "''"
            name: constant.character.escape.so
          - include: "#embedded-raw"
      - comment: double quoted standard string
        begin: \s*("{3,}|")
        contentName: string.quoted.double.so
        end: \s*((\1)(?!\1))
        captures:
          1: {name: punctuation.definition.string.so}
        patterns:
          - include: "#string-content"

  strings-unquoted:
    patterns:
      - begin: |
          (?x)\s*
          (\\\|)\s*
          ([-+*/<=>])?\s*
          (?:(\d\w*)|
          (
          [\p{Pc}\p{L}]\w*
          (?:(?:[?!]?\.|[?!:]:|->)
          (?:(?:[\p{Pc}\p{L}]\w*)))*
          )
          )?\s*
          (.*\n?)
        beginCaptures:
          1: {name: keyword.control.flow.block-scalar.literal.so}
          2: {name: storage.modifier.chomping-indicator.so}
          3: {patterns: [include: "#numbers"]}
          4: {name: fenced_code.block.language.so}
          5:
            patterns:
              - include: "#comments"
              - match: .+
                name: invalid.illegal.expected-comment-or-newline.so
        end: ^(?=\S)|(?!\G)
        patterns:
          - begin: ^((\p{Zs})+)(?!\2)
            end: ^(?!\1|\s*$)
            name: string.unquoted.block.so
            patterns:
              - include: "#embedded-raw"
              - include: text.html.markdown#inline
          - include: $self
      - begin: |
          (?x)\s*
          (\\\>)\s*
          ([-+*/<=>])?\s*
          (?:(\d\w*)|
          (
          [\p{Pc}\p{L}]\w*
          (?:(?:[?!]?\.|[?!:]:|->)
          (?:(?:[\p{Pc}\p{L}]\w*)))*
          )
          )?\s*
          (.*\n?)
        beginCaptures:
          1: {name: keyword.control.flow.block-scalar.folded.so}
          2: {name: storage.modifier.chomping-indicator.so}
          3: {patterns: [include: "#numbers"]}
          4: {name: fenced_code.block.language.so}
          5:
            patterns:
              - include: "#comments"
              - match: .+
                name: invalid.illegal.syntax.so
        end: ^(?=\S)|(?!\G)
        patterns:
          - begin: ^((\p{Zs})+)(?!\2)
            end: ^(?!\1|\s*$)
            name: string.unquoted.plain.in.so
            patterns:
              - include: "#string-content"
              - include: text.html.markdown#inline
          - include: $self
      - match: |
          (?x)
          \s*(\\)
          ((?:\\.|[^({\[)}\]\s.,:;])+?)
          (?=[({\[)}\]\s.,:;]|$)\s*
        name: string.unquoted.so
        captures:
          1: {name: punctuation.definition.string.so}
          2: {patterns: [include: "#string-content"]}

  string-content:
    patterns:
      - include: "#string-escapes"
      - include: "#embedded"

  string-escapes:
    patterns:
      - match: \\(?=\s*$)
        name: constant.character.escape.newline.so
      - match: (?i)\\b(?:[01]{1,21}|{[01\s]+?})
        name: constant.character.escape.binary.so
      - match: (?i)\\q(?:[0-3]{1,11}|{[0-3\s]+?})
        name: constant.character.escape.quaternary.so
      - match: (?i)\\s(?:[0-5]{1,8}|{[0-5\s]+?})
        name: constant.character.escape.senary.so
      - match: (?i)\\o(?:[0-7]{1,7}|{[0-7\s]+?})
        name: constant.character.escape.octal.so
      - match: (?i)\\d?\d{1,7}|\\d{[\d\s]+?}
        name: constant.character.escape.decimal.so
      - match: (?i)\\z(?:[\dab]{1,6}|{[\s\dab]+?})
        name: constant.character.escape.duodecimal.so
      - match: (?i)\\x(?:\h{1,6}|{[\h\s]+?})
        name: constant.character.escape.hexadecimal.so
      - match: (?i)\\u(?:\h{1,6}|{[\h\s]+?})
        name: constant.character.escape.unicode.so
      - begin: \\j{
        end: \s*}
        name: constant.character.entity.named.so
        patterns:
          - include: "#unicode-named-chars"
          - include: "#regexp-patterns"
      - match: (?i)\\[abceflnprtvz]
        name: constant.character.escape.so
      - match: \\[\p{S}\p{P}]
        name: constant.character.escape.symbol.so
      - match: \\[\p{L}\p{N}\p{Z}\p{C}]
        name: constant.character.escape.illegal.so

  embedded:
    patterns:
      - match: (\$)(\d+)
        captures:
          1: {name: punctuation.section.embedded.so}
          2: {name: constant.numeric.decimal.so}
      - match: (%)((['"`])(?:\\\g<-1>|.)*?\g<-1>|\w+(?:[^\s'"`]+\w+)*)
        captures:
          1: {name: punctuation.separator.key-value.so}
          2: {name: storage.type.format.so}
      - match: |
          (?xi)
          (?#?<!\\)# discard escape prefix
          (\$)# prefix
          (
          [\p{Pc}\p{L}]\w*
          (?:(?:[?!]?\.|[?!:]:|->)
          (?:(?:[\p{Pc}\p{L}]\w*)))*
          )# variable
        captures:
          1: {name: punctuation.section.embedded.so}
          2: {patterns: [include: $self]}
      - begin: (?#?<!\\)(\${)\s*
        end: (})
        name: entity.quasi.element.so
        captures:
          1: {name: punctuation.section.embedded.so}
        patterns:
          - include: $self

  embedded-raw:
    patterns:
      - match: (\$)(\d+)
        captures:
          1: {name: punctuation.section.embedded.so}
          2: {name: constant.numeric.decimal.so}
      - match: ([$%]){2}
        name: constant.character.escape.so
      - match: (%)((['"`])(?:\\\g<-1>|.)*?\g<-1>|\w+(?:[^\s'"`]+\w+)*)
        captures:
          1: {name: punctuation.separator.key-value.so}
          2: {name: storage.type.format.so}
      - match: |
          (?xi)
          (?<!\$)# discard escape prefix
          (\$)# prefix
          (
          [\p{Pc}\p{L}]\w*
          (?:(?:[?!]?\.|[?!:]:|->)
          (?:(?:[\p{Pc}\p{L}]\w*)))*
          )# variable
        captures:
          1: {name: punctuation.section.embedded.so}
          2: {patterns: [include: $self]}
      - begin: (?<!\$)(\${)\s*
        end: (})
        name: entity.quasi.element.so
        captures:
          1: {name: punctuation.section.embedded.so}
        patterns:
          - include: $self

  symbols:
    match: |
      (?x)
      \s*
      (:)((?:\\.|[^({\[)}\]\s.,:;])+?)
      (?=[({\[)}\]\s.,:;]|$)\s*
    name: meta.symbol.so
    captures:
      1: {name: punctuation.definition.symbol.so}
      2: {name: constant.other.symbol.so}

  labels:
    match: |
      (?x)
      (?<=^|[({\[\s,;*+-])\s*
      ((?:\w|\\.)(?:\\.|[^({\[)}\]\s.,:;])*?)
      (:)\s+
    name: meta.object-literal.key.so
    captures:
      1:
        name: constant.other.object.key.so
        patterns: [include: "#string-escapes"]
      2: {name: punctuation.separator.key-value.so}

  regexps:
    patterns:
      - begin: (\p{Alnum}*)(`)\s*
        end: \s*(?!\\)(`(?!`))(\p{Alnum}*)
        contentName: string.pattern.regexp.so
        beginCaptures:
          1: {name: keyword.modifier.so}
          2: {name: punctuation.section.regexp.begin.so}
        endCaptures:
          1: {name: punctuation.section.regexp.end.so}
          2: {name: keyword.other.flag.so}
        patterns:
          - include: "#comments"
          - include: "#regexp-patterns"
          - begin: (`)(`)\s*\n?
            end: \s*(?=(?!\\)`)
            contentName: string.replace.regexp.so
            beginCaptures:
              1: {name: punctuation.section.regexp.end.so}
              2: {name: punctuation.section.regexp.begin.so}
            patterns:
              - include: "#back-references"
      - begin: |
          (?x)\s*
          (\\\<)\s*
          ([-+*/<=>])?\s*
          (?:(\w+)?\b\s*\b
          (
          \w+\s*
          (?:[+-]\s*
          (?:(?:\w+)))*
          )
          )?\s*
          (.*\n?)
        beginCaptures:
          1: {name: keyword.control.flow.block-scalar.regexp.so}
          2: {name: storage.modifier.chomping-indicator.so}
          3: {name: keyword.modifier.so}
          4: {name: keyword.other.flag.so}
          5:
            patterns:
              - include: "#comments"
              - match: .+
                name: invalid.illegal.expected-comment-or-newline.so
        end: ^(?=\S)|(?!\G)
        patterns:
          - begin: ^((\p{Zs})+)(?!\2)
            end: ^(?!\1|\s*$)
            name: string.unquoted.plain.out.so
            patterns:
              - include: "#regexp-patterns"
          - include: $self

  back-references:
    patterns:
      - match: \$[&+-]
        name: keyword.other.back-reference.so
      - match: \${2}
        name: constant.character.escape.so
      - begin: (\$<)
        end: \s*(>)
        name: keyword.other.back-reference.so
        beginCaptures:
          1: {name: keyword.other.back-reference.so}
        endCaptures:
          1: {name: keyword.other.back-reference.so}
        patterns:
          - include: "#variables"
          - include: "#operators"
          - include: "#numbers"
      - include: "#string-content"

  regexp-patterns:
    patterns:
      - include: "#embedded"
      - include: "#comments"
      - include: "#strings-quoted"
      - match: \|
        name: keyword.operator.or.so
      - match: \&
        name: keyword.operator.match.so
      - match: \!
        name: keyword.operator.disjunction.so
      - match: \.
        name: constant.character.all.so
      - match: (?i)\\[by]({\p{Alpha}+})?
        name: keyword.control.anchor.so
      - match: (?i)(\^|\\<|\\a(?:{\p{Alpha}+})?)|(\$|\\>|\\z(?:{\p{Alpha}+})?)
        captures:
          1: {name: keyword.control.begin.so}
          2: {name: keyword.control.end.so}
      - match: (\\\()(?:(\?)|(\+)|(\*))
        captures:
          1: {name: constant.character.escape.other.so}
          2: {name: keyword.operator.quantifier.lazy.so}
          3: {name: keyword.operator.quantifier.eager.so}
          4: {name: keyword.operator.quantifier.greedy.so}
      - match: \\\d+
        name: keyword.other.back-reference.so
      - match: \{(\s*\d*\s*(?:,?\s*\d*\s*)*)\}
        name: keyword.operator.quantifier.so
      - begin: (\\Q)
        contentName: string.quoted.single.so
        end: (\\E)
        name: string.quoted.raw.so
        captures:
          1: {name: punctuation.definition.string.so}
        patterns:
          - include: "#string-content"
      - begin: (\\q)
        contentName: string.quoted.double.so
        end: (\\e)
        name: string.quoted.so
        captures:
          1: {name: punctuation.definition.string.so}
        patterns:
          - include: "#embedded-raw"
      - begin: (\\k<)
        end: \s*(>)
        name: keyword.other.back-reference.so
        beginCaptures:
          1: {name: keyword.other.back-reference.so}
        endCaptures:
          1: {name: keyword.other.back-reference.so}
        patterns:
          - include: "#variables"
          - include: "#numbers"
      - begin: (\\g<)
        end: \s*(>)
        name: keyword.other.subroutine.so
        beginCaptures:
          1: {name: keyword.other.subroutine.so}
        endCaptures:
          1: {name: keyword.other.subroutine.so}
        patterns:
          - include: "#variables"
          - include: "#numbers"
      - include: "#regexp-groups"
      - include: "#regexp-char-set"
      - include: "#regexp-char-class"
      - match: (?i)(?:(\\M)|(\\K)|(\\G)|(\\X))
        captures:
          1: {name: keyword.control.anchor.so}
          2: {name: keyword.control.keepout.so}
          3: {name: keyword.control.search.so}
          4: {name: constant.character.unicode.so}
      - match: (?<=[^\\][*+?}])(?:(\?)|(\+)|(\*))
        captures:
          1: {name: keyword.operator.modifier.lazy.so}
          2: {name: keyword.operator.modifier.eager.so}
          3: {name: keyword.operator.modifier.greedy.so}
      - match: (\?)|(\+)|(\*)
        captures:
          1: {name: keyword.operator.quantifier.lazy.so}
          2: {name: keyword.operator.quantifier.eager.so}
          3: {name: keyword.operator.quantifier.greedy.so}
      - match: \\.
        name: constant.character.escape.other.so

    repository:
      regexp-groups:
        patterns:
          - begin: \(([*+])
            end: \s*(\))
            name: constant.other.pcre.so
            captures:
              0: {name: punctuation.section.expression.so}
            patterns:
              - include: source.clojure
          - begin: (\()(\?#)
            contentName: comment.block.regexp.so
            end: \s*(\))
            name: comment.block.regexp.so
            captures:
              1: {name: punctuation.definition.comment.so}
            patterns:
              - match: \\.
                name: comment.block.regexp.so
          - begin: (\(\?=)
            end: \s*(\))
            name: meta.group.look-ahead.so
            captures:
              1: {name: punctuation.definition.group.look-ahead.so}
            patterns:
              - include: "#regexp-patterns"
          - begin: (\(\?<=)
            end: \s*(\))
            name: meta.group.look-behind.so
            captures:
              1: {name: punctuation.definition.group.look-behind.so}
            patterns:
              - include: "#regexp-patterns"
          - begin: (\(\?!)
            end: \s*(\))
            name: meta.group.negative-look-ahead.so
            captures:
              1: {name: punctuation.definition.group.negative-look-ahead.so}
            patterns:
              - include: "#regexp-patterns"
          - begin: (\(\?<!)
            end: \s*(\))
            name: meta.group.negative-look-behind.so
            captures:
              1: {name: punctuation.definition.group.negative-look-behind.so}
            patterns:
              - include: "#regexp-patterns"
          - begin: (\(\?(?:([+-]?\d+?)|(\p{upper}+(?:[+-]\p{upper}+)*)|(\p{Lower}+(?:[+-]\p{Lower}+)*)))\s*(:)?
            end: \s*(\))
            name: meta.group.flag.so
            captures:
              0: {name: punctuation.definition.group.flag.so}
              1: {name: punctuation.definition.group.flag.so}
              2: {name: entity.name.function.method.so}
              3: {name: keyword.control.recursion.so}
              4: {name: keyword.other.flag.so}
              5: {name: punctuation.separator.colon.so}
            patterns:
              - include: "#regexp-patterns"
          - begin: (\(\?)(?={)
            end: \s*(\))
            name: meta.group.call-out.so
            captures:
              1: {name: punctuation.definition.group.call-out.so}
            patterns:
              - begin: (?<=\(\?)({)
                end: \s*(\})([<*>])?(?:(\[)(.*?)(\]))?
                name: punctuation.definition.group.call-out.so
                captures:
                  1: {name: punctuation.definition.group.call-out.so}
                  2: {name: keyword.operator.range.so}
                  3: {name: punctuation.definition.tag.so}
                  4: {patterns: [include: "#function-entities"]}
                  5: {name: punctuation.definition.tag.so}
                patterns:
                  - include: $self
              - include: "#regexp-patterns"
          - begin: (\(\?>)
            end: \s*(\))
            name: meta.group.atomic.so
            captures:
              1: {name: punctuation.definition.group.atomic.so}
            patterns:
              - include: "#regexp-patterns"
          - begin: (\(\?:)
            end: \s*(\))
            name: meta.group.non-capturing.so
            captures:
              1: {name: punctuation.definition.group.non-capturing.so}
            patterns:
              - include: "#regexp-patterns"
          - begin: (\(\?)(?=[(|])
            end: \s*(\))
            name: meta.group.branch.so
            captures:
              1: {name: punctuation.definition.group.branch.so}
            patterns:
              - include: "#regexp-patterns"
          - begin: (\(\?~)
            end: \s*(\))
            name: meta.group.absent.so
            captures:
              1: {name: punctuation.definition.group.absent.so}
            patterns:
              - include: "#regexp-patterns"
          - begin: \((\?(?:&)(?:([+-]?\d+)|([\p{Pc}\p{L}]\w*)|([+-]?\d*)))(:)?
            end: \s*\)
            name: meta.group.back-reference.so
            captures:
              0: {name: punctuation.definition.group.back-reference.so}
              1: {name: punctuation.definition.group.back-reference.so}
              2: {name: entity.name.function.method.so}
              3: {name: variable.other.so}
              4: {name: punctuation.separator.colon.so}
            patterns:
              - include: "#regexp-patterns"
          - begin: \(\?(?=<(?![!=]))
            end: \s*(\))
            name: meta.group.named.so
            beginCaptures:
              0: {name: punctuation.definition.group.named.so}
              1: {patterns: [include: "#variables"]}
            endCaptures:
              0: {name: punctuation.definition.group.named.so}
            patterns:
              - begin: (?<=\(\?)(<)
                end: \s*(>)
                name: punctuation.definition.group.named.so
                beginCaptures:
                  1: {name: punctuation.definition.group.named.so}
                endCaptures:
                  1: {name: punctuation.definition.group.named.so}
                patterns:
                  - include: "#variables"
                  - include: "#numbers"
              - include: "#regexp-patterns"
          - begin: \(
            end: \s*\)
            name: meta.group.so
            captures:
              0: {name: punctuation.definition.group.so}
            patterns:
              - include: "#regexp-patterns"

      regexp-char-class:
        patterns:
          - match: \\(?=\s*$)
            name: constant.character.escape.newline.so
          - begin: (?i)\\p{
            end: \s*}
            name: constant.other.character-class.unicode.so
            patterns:
              - include: "#expression-keywords"
              - include: "#variables"
              - include: "#operators"
          - begin: \\j{
            end: \s*}
            name: constant.character.entity.named.so
            patterns:
              - include: "#unicode-named-chars"
              - include: "#regexp-patterns"
          - match: (?i)\\b(?:[01]{1,21}|{[01\s]+?})
            name: constant.character.escape.binary.so
          - match: (?i)\\q(?:[0-3]{1,11}|{[0-3\s]+?})
            name: constant.character.escape.quaternary.so
          - match: (?i)\\s(?:[0-5]{1,8}|{[0-5\s]+?})
            name: constant.character.escape.senary.so
          - match: (?i)\\o(?:[0-7]{1,7}|{[0-7\s]+?})
            name: constant.character.escape.octal.so
          - match: (?i)\\d?\d{1,7}|\\d{[\d\s]+?}
            name: constant.character.escape.decimal.so
          - match: (?i)\\z(?:[\dab]{1,6}|{[\s\dab]+?})
            name: constant.character.escape.duodecimal.so
          - match: (?i)\\x(?:\h{1,6}|{[\h\s]+?})
            name: constant.character.escape.hexadecimal.so
          - match: (?i)\\u(?:\h{1,6}|{[\h\s]+?})
            name: constant.character.escape.unicode.so
          - match: (?i:\\[cm][a-z])|\\R
            name: constant.character.control.so
          - match: *posix-class
            name: constant.other.character-class.posix.so
          - match: (?i:\\p(c[cfos]?|l[lmotu]?|m[cen]?|n[dlo]?|p[c-fios]?|s[ckmo]?|z[lps]))
            name: constant.other.character-class.unicode.so
          - match: (?i)\\[ci]
            name: constant.other.character-class.xml.so
          - match: \.|\\[dhlns-w]
            name: constant.other.character-class.so
          - match: \\[DHLNS-W]
            name: constant.other.character-class.negated.so
          - match: (?i)\\n{[\w\s]+}
            name: constant.character.escape.unicode.name.so
          - match: (?i)\\[abceflnprtvz]
            name: constant.character.escape.so
          - match: \\[\p{S}\p{P}]
            name: constant.character.escape.symbol.so
          - match: \\\p{Z}
            name: constant.character.escape.symbol.so
          - match: \\[\p{L}\p{N}\p{Z}\p{C}]
            name: constant.character.escape.illegal.so
          - include: "#embedded"

      regexp-char-ops:
        patterns:
          - match: \.
            name: constant.other.character-class.range.so
          - match: (?<!\|)\|\|(?!\|)
            name: keyword.operator.union.so
          - match: (?<!&)&&(?!&)
            name: keyword.operator.intersection.so
          - match: (?<!\^)\^\^(?!\^)
            name: keyword.operator.symmetric.so
          - match: (?<!~)~~(?!~)
            name: keyword.operator.negation.so
          - match: (?<!-)--(?!-)
            name: keyword.operator.difference.so
          - match: (?<!\\?[\\\[])-(?![-\[\]])
            name: keyword.operator.range.so
          - match: \\.
            name: constant.character.escape.other.so

      regexp-char-set:
        patterns:
          - begin: (\[=)
            end: \s*(\])
            name: constant.other.character-class.posix.so
            captures:
              1: {name: punctuation.definition.character-class.posix.so}
            patterns:
              - include: "#comments"
              - include: "#variables"
              - include: "#operators"
              - include: "#regexp-patterns"
          - begin: (\[\.)
            end: \s*(\])
            name: constant.other.character-class.posix.so
            captures:
              1: {name: punctuation.definition.character-class.posix.so}
            patterns:
              - include: "#comments"
              - include: "#variables"
              - include: "#operators"
              - include: "#regexp-patterns"
          - begin: (\[:)
            end: \s*(\])
            name: constant.other.character-class.posix.so
            captures:
              1: {name: punctuation.definition.character-class.posix.so}
            patterns:
              - include: "#comments"
              - include: "#variables"
              - include: "#operators"
              - include: "#regexp-patterns"
          - begin: (\[\^)
            end: \s*(\])
            name: constant.other.character-class.negated.so
            captures:
              1: {name: punctuation.definition.character-class.negated.so}
            patterns:
              - include: "#comments"
              - include: "#regexp-char-class"
              - include: "#regexp-char-ops"
              - include: "#regexp-char-set"
          - begin: (\[)
            end: \s*(\])
            name: constant.other.character-class.so
            captures:
              1: {name: punctuation.definition.character-class.so}
            patterns:
              - include: "#comments"
              - include: "#regexp-char-class"
              - include: "#regexp-char-ops"
              - include: "#regexp-char-set"

  tag-names:
    patterns:
      - match: (?x)\b([\p{Pc}\p{L}]\w*)\b(?=[.:])
        name: entity.name.tag.namespace.so
      - match: |
          (?x)\b
          (?:# Regular variables
          (_+[\p{Pc}\p{L}]\w*(?!_+)|[\p{Pc}\p{L}][\w&&[^_]]*_+)|
          ([\p{L}&&\P{Ll}][\w&&\P{Ll}]*)|
          ((?:[\p{Pc}\p{L}&&\P{Ll}]+[\w&&\P{Lu}]*)+)|
          ([\p{Pc}\p{L}]\w*)
          )\b
        captures:
          1: {name: entity.name.tag.style.so}
          2: {name: entity.name.tag.script.so}
          3: {name: entity.name.tag.so support.class.component.so}
          4: {name: entity.name.tag.so}
      - match: ":"
        name: punctuation.separator.namespace.so
      - match: \.
        name: punctuation.accessor.so

  jsx:
    comment: Avoid < operator expressions as best we can using Zertosh's regex
    patterns:
      - begin: (?=<[\p{Pc}\p{L}])
        end: (?=.)
        applyEndPatternLast: 1
        patterns:
          - include: "#tag-element-name"
    repository:
      tag-element-name:
        patterns:
          - comment: JSX Fragment
            name: meta.tag.so
            contentName: meta.tag.so
            begin: \s*+(<)\s*(?=>)
            end: (?<=</)(>)
            beginCaptures:
              1: {name: punctuation.definition.tag.so}
            endCaptures:
              1: {name: punctuation.definition.tag.so}
            patterns:
              - include: "#tag-termination"
          - comment: "Tags that end > are trapped in #tag-termination"
            name: meta.tag.so
            contentName: meta.tag.so
            begin: |
              (?x)\s*+(<)#start tag begin
              ([\p{Pc}\p{L}]\w*(?:[:.][\p{Pc}\p{L}]\w*)*)#tag name
              (?=[\/>\s])(?![:])(?<!\.|:)
            end: \s*(?<=</)(\2)(>)|(<?/>)|((?<=</)\O*?)>
            beginCaptures:
              1: {name: punctuation.definition.tag.so}
              2: {patterns: [include: "#tag-names"]}
            endCaptures:
              1: {patterns: [include: "#tag-names"]}
              2: {name: punctuation.definition.tag.so}
              3: {name: punctuation.definition.tag.so}
              4: {name: invalid.illegal.termination.so}
            patterns:
              - include: "#tag-termination"
              - include: "#tag-attributes"
      tag-termination:
        comment: uses non consuming search for </ in </tag>
        contentName: meta.jsx.children.so
        name: meta.jsx.children.so
        begin: (>)
        end: (</)
        captures:
          0: {name: punctuation.definition.tag.so}
        patterns:
          - include: "#evaluated-code"
          - include: "#entities"
          - include: "#tag-element-name"
          - include: "#string-content"
          - include: markdown.math.block
          - include: text.html.markdown#inline
      attribute-expression:
        begin: (?<==)\(
        end: \)
        captures:
          0: {name: punctuation.section.embedded.so}
        patterns:
          - include: $self
      tag-attributes:
        patterns:
          - include: source.yaml#flow-collection
          - include: "#evaluated-code"
          - include: "#attribute-name"
          - include: "#attribute-expression"
          - include: "#spread-attribute"
          - include: "#strings-unquoted"
          - include: "#strings-quoted"
          - include: "#numbers"
          - include: "#regexps"
          - include: "#string-content"
          - include: "#tag-element-name"
          - include: "#comments"
      spread-attribute:
        comment: Spread attribute { ... AssignmentExpression }
        match: (?<!\*)\*(?!\*)
        name: keyword.operator.spread.so
      attribute-name:
        patterns:
          - comment: Style attribute
            begin: (?<!\S)(style)(=)?({)
            end: \s*(})\s*
            beginCaptures:
              1: {name: entity.other.attribute-name.so}
              2: {name: punctuation.separator.key-value.so}
              3: {name: punctuation.section.embedded.so}
            endCaptures:
              1: {name: punctuation.section.embedded.so}
            patterns:
              - include: source.css.scss#flow_control
              - include: source.css.scss#rules
              - include: source.css.scss#properties
              - include: source.css.scss
          - comment: Attribute names
            match: (?<=[)\]}])(=)?((?:\w|\\.)(?:\\.|[^\s</>])*)?\s*
            captures:
              1: {name: punctuation.separator.key-value.so}
              2:
                name: string.unquoted.html.so
                patterns:
                  - include: "#string-content"
                  - include: source.yaml#flow-scalar-plain-out-implicit-type
          - comment: Attribute names
            match: (?<!\S)([\p{Pc}\p{L}]\w*)(=)?((?:\w|\\.)(?:\\.|[^\s</>])*)?\s*
            captures:
              1: {name: entity.other.attribute-name.so}
              2: {name: punctuation.separator.key-value.so}
              3:
                name: string.unquoted.html.so
                patterns:
                  - include: "#string-content"
                  - include: source.yaml#flow-scalar-plain-out-implicit-type
      evaluated-code:
        begin: "{"
        end: "}"
        captures:
          0: {name: punctuation.section.embedded.so}
        patterns:
          - include: "#spread-attribute"
          - include: $self
      entities:
        patterns:
          - captures: &jsx-entities
              1: {name: punctuation.definition.entity.so}
              2: {name: punctuation.definition.entity.so}
            match: (&)#\d+(;)
            name: constant.character.escape.decimal.so
          - captures: *jsx-entities
            match: (?i)(&)#x\h+(;)
            name: constant.character.escape.hexadecimal.so
          - captures: *jsx-entities
            match: (?i)(&)#b[01]+(;)
            name: constant.character.escape.binary.so
          - captures: *jsx-entities
            match: (?i)(&)#q[0-3]\h+(;)
            name: constant.character.escape.quaternary.so
          - captures: *jsx-entities
            match: (?i)(&)#s[0-5]\h+(;)
            name: constant.character.escape.senary.so
          - captures: *jsx-entities
            match: (?i)(&)#o[0-7]\h+(;)
            name: constant.character.escape.octal.so
          - captures: *jsx-entities
            match: (?i)(&)#o[0-7]\h+(;)
            name: constant.character.escape.octal.so
          - captures: *jsx-entities
            match: (?i)(&)#z[\dab]\h+(;)
            name: constant.character.escape.duodecimal.so
          - captures: *jsx-entities
            match: (&)(?:\\.|[^(){}\[\]\s;])+?(;)
            name: constant.character.entity.xml
          - match: '&(?=\w*;)'
            name: invalid.illegal.ambiguous-ampersand.so
          - comment: Entity with & and invalid name
            match: '&\s*+;'
            name: invalid.illegal.bad-ampersand.so

  jsdoc:
    patterns:
      - include: "#jsdoc-inline-tags"
      - include: "#jsdoc-access"
      - include: "#jsdoc-as-namepath"
      - include: "#jsdoc-simple"
      - include: "#jsdoc-simple-namepath"
      - include: "#jsdoc-module"
      - include: "#jsdoc-type-name"
      - include: "#jsdoc-type-noname"
      - comment: additional jsdoc V2 keywords
        match: (?<!\w)@(add|api|body|codeend|codestart|demo|download|group|hide|iframe|image|inherits|option|outline|page|parent|signature|tag)\b
        name: storage.type.class.jsdoc
      - comment: additional jsdoc keywords
        match:
          (?<!\w)@(accessor|alternateClassName|aside|cfg|chainable|docauthor|evented|experimental|ftype|hide|inheritable|localdoc|markdown|mixins|new|override|preventable|ptype|removed|scss
          mixin|singleton|template|uses|xtype)\b
        name: storage.type.class.jsdoc

    repository:
      jsdoc-access:
        comment: "@tag protected...."
        match: (@(access))\s*(private|protected|public)?(?=\s|$)
        captures:
          1: {name: storage.type.class.jsdoc}
          3: {name: storage.modifier.jsdoc}
      jsdoc-module:
        comment: "@tag {optional type} module:file"
        begin: (@(exports|module|listens|requires)\b)\s*(?=({(?:(?>[^{}]+)|\g<-1>)*\})?\s*(\S*)([\S\s]*))
        end: ^|(?=\*/)|(?=\5$)
        beginCaptures:
          1: {name: storage.type.class.jsdoc}
        patterns:
          - include: "#jsdoc-typedef-scopes"
          - match: (?:(module)(:))?(((?!\*/)\S)+)
            captures:
              1: {name: keyword.module.jsdoc}
              2: {name: punctuation.jsdoc}
              3: {name: string.modulename.jsdoc}
      jsdoc-as-namepath:
        comment: to terminate the block
        begin: (@(borrows|lends)\b)\s*(?=(?!\*/)\S+(?:(?:\s*\bas\b\s*(?!\*/)\S+)?)?([\S\s]*))
        end: ^|(?=\*/)|(?=\3$)
        beginCaptures:
          1: {name: storage.type.class.jsdoc}
        patterns:
          - include: "#jsdoc-namepath-scopes"
      jsdoc-simple:
        comment: "@tag"
        match: (@(abstract|author|classdesc|copyright|default|defaultvalue|deprecated|description|desc|example|external|fileoverview|file|global|host|ignore|inheritdoc|inner|instance|license|override|overview|readonly|see|since|static|summary|todo|tutorial|virtual|variation|version)\b)(?=$|\s)
        captures:
          1: {name: storage.type.class.jsdoc}
      jsdoc-simple-namepath:
        comment: "@tag {opt type} Class#xxx or Class#Event:aaaa etc"
        begin: (@(alias|augments|callback|extends|emits|event|fires|interface|memberof|mixes|name|property|prop|this|typedef)\b)\s*(?=({(?:(?>[^{}]+)|\g<-1>)*\})?\s*\S*([\S*\s]*))
        end: ^|(?=\*/)|(?=\4$)
        beginCaptures:
          1: {name: storage.type.class.jsdoc}
        patterns:
          - include: "#jsdoc-typedef-scopes"
          - include: "#jsdoc-namepath-scopes"
      jsdoc-type-name:
        comment: "@tag {optional type} name"
        begin: (@(arg|argument|class|constant|constructor|constructs|const|function|func|kind|member|method|mixin|namespace|param|var)\b)\s*(?=({(?:(?>[^{}]+)|\g<-1>)*\})?\s*(((\[(?:(?>[^\[\]]+)|\g<-1>)*\])|\S)+)?([\S\s]*))
        end: ^|(?=\*/)|(?=\7$)
        beginCaptures:
          1: {name: storage.type.class.jsdoc}
        patterns:
          - include: "#jsdoc-typedef-scopes"
          - include: "#jsdoc-name-scopes"
      jsdoc-type-noname:
        comment: "@tag {types}"
        begin: (@(enum|exception|implements|private|protected|public|returns|return|throws|type)\b)\s*(?=({(?:(?>[^{}]+)|\g<-1>)*\})?\s*([\S\s]*))
        end: ^|(?=\*/)|(?=\4$)
        beginCaptures:
          1: {name: storage.type.class.jsdoc}
        patterns:
          - include: "#jsdoc-typedef-scopes"
      jsdoc-inline-tags:
        name: meta.tag.inline.jsdoc
        begin: (\[(?:(?>[^\[\]]+)|\g<-1>)*\])?({)(?=@)
        end: (})
        beginCaptures:
          1: {name: string.linktext.jsdoc}
          2: {name: meta.brace.curly.jsdoc}
        endCaptures:
          1: {name: meta.brace.curly.jsdoc}
        patterns:
          - match: (@(link|tutorial))\b([^}]*)
            captures:
              1: {name: storage.type.class.jsdoc}
              3: {name: string.jsdoc}
      jsdoc-typedef-scopes:
        name: entity.name.type.instance.jsdoc
        begin: "{"
        end: "}|^"
        captures:
          0: {name: meta.brace.curly.jsdoc}
        patterns:
          - include: "#jsdoc-typedef-primitives"
          - include: "#jsdoc-namepath-scopes"
          - include: "#jsdoc-typedef-obj"
      jsdoc-typedef-primitives:
        match: \b(null|undefined|boolean|string|number)\b
        captures:
          1: {name: support.type.builtin.primitive.jsdoc}
      jsdoc-typedef-obj:
        comment: typedef object
        begin: "{"
        end: "}|^"
        captures:
          0: {name: meta.brace.curly.jsdoc}
        patterns:
          - include: "#jsdoc-typedef-primitives"
          - match: \b([$_A-Za-z][$_A-Za-z0-9]*)\s*(:)
            captures:
              1: {name: variable.other.readwrite.jsdoc}
          - include: "#jsdoc-namepath-scopes"
          - include: "#jsdoc-typedef-obj"
      jsdoc-name-scopes:
        patterns:
          - match: ((?!\*/)[\S&&[^\[\]"']])+
            captures:
              0: {name: variable.other.jsdoc}
          - name: variable.other.jsdoc
            begin: \[
            end: \]|^
            patterns:
              - include: "#jsdoc-string"
              - include: "#jsdoc-name-scopes"
      jsdoc-namepath-scopes:
        patterns:
          - match: \s*\b(as)\b\s*(?=[$_A-Za-z])
            captures:
              1: {name: keyword.as.jsdoc}
          - match: \s*(?:([A-Z][$_A-Za-z0-9]*)|([$_A-Za-z][$_A-Za-z0-9]*))(?=[\s\-~.#]|$)
            captures:
              1: {name: entity.name.class.jsdoc}
              2: {name: entity.name.function.jsdoc}
          - match: (\.)([$_A-Za-z][$_A-Za-z0-9]*)(?=\s|$|\")
            captures:
              1: {name: keyword.operator.accessor.jsdoc}
              2: {name: entity.name.function.method.static.jsdoc}
          - match: (\#)([$_A-Za-z][$_A-Za-z0-9]*)(?=\s|$|\")
            captures:
              1: {name: keyword.operator.accessor.jsdoc}
              2: {name: entity.name.function.method.instance.jsdoc}
          - match: (~|-)([$_A-Za-z][$_A-Za-z0-9]*)(?=\s|$|\")
            captures:
              1: {name: keyword.operator.accessor.jsdoc}
              2: {name: entity.name.function.method.inner.jsdoc}
          - match: (\#)(event)(:)
            captures:
              1: {name: keyword.operator.accessor.jsdoc}
              2: {name: keyword.event.jsdoc}
              3: {name: keyword.operator.jsdoc}
          - name: string.method.jsdoc
            begin: \.(?="|')
            end: (?=.)
            applyEndPatternLast: 1
            patterns:
              - include: "#jsdoc-string"
      jsdoc-string:
        name: string.jsdoc
        match: \"(\\"|[^"])*"|'(\\'|[^'])*'

  comments:
    patterns:
      - begin: \s*((/\+\+))
        end: (\s*(\+/))
        name: comment.block.documentation.nested.so
        captures:
          1: {name: comment.block.documentation.so}
          2: {name: punctuation.definition.comment.so}
        patterns:
          - include: "#jsdoc"
          - include: text.html.markdown#inline
          - include: "#nested-block-jsdoc"
      - begin: \s*((/\+))
        end: (\s*(\+/))
        name: comment.block.nested.so
        captures:
          1: {name: comment.block.nested.so}
          2: {name: punctuation.definition.comment.so}
        patterns:
          - include: text.html.markdown#inline
          - include: "#nested-jsdoc"
      - begin: \s*((/\*\*))
        end: (\s*(\*/))
        name: comment.block.documentation.so
        captures:
          1: {name: comment.block.documentation.so}
          2: {name: punctuation.definition.comment.so}
        patterns:
          - include: "#jsdoc"
          - include: text.html.markdown#inline
      - begin: \s*((/\*))
        end: (\s*(\*/))
        name: comment.block.so
        captures:
          1: {name: comment.block.so}
          2: {name: punctuation.definition.comment.so}
        patterns:
          - include: text.html.markdown#inline
      - begin: ((^\s*)|\s*)((//=))
        end: \s*$
        name: comment.line.special.so
        beginCaptures:
          2: {name: punctuation.whitespace.comment.leading.so}
          3: {name: comment.line.special.so}
          4: {name: punctuation.definition.comment.so}
        endCaptures:
          1: {name: punctuation.definition.comment.so}
        patterns:
          - include: "#comment-special"
          - include: text.html.markdown#inline
      - begin: ((^\s*)|\s*)((//\+))
        end: \s*$
        name: comment.line.playground.so
        beginCaptures:
          2: {name: punctuation.whitespace.comment.leading.so}
          3: {name: comment.line.playground.so}
          4: {name: punctuation.definition.comment.so}
        endCaptures:
          0: {name: comment.line.playground.so}
        patterns:
          - include: "#jsdoc"
          - include: text.html.markdown#inline
      - begin: ((^\s*)|\s*)((///))
        end: \s*$
        name: comment.line.documentation.so
        beginCaptures:
          2: {name: punctuation.whitespace.comment.leading.so}
          3: {name: comment.line.documentation.so}
          4: {name: punctuation.definition.comment.so}
        endCaptures:
          0: {name: comment.line.documentation.so}
        patterns:
          - include: "#jsdoc"
          - include: text.html.markdown#inline
      - begin: ((^\s*)|\s*)((//!|\A#!))
        end: \s*$
        name: comment.line.shebang.so
        beginCaptures:
          2: {name: punctuation.whitespace.comment.leading.so}
          3: {name: comment.line.shebang.so}
          4: {name: punctuation.definition.comment.so}
        endCaptures:
          0: {name: comment.line.shebang.so}
        patterns:
          - include: text.html.markdown#inline
      - begin: ((^\s*)|\s*)((//\*))
        end: \s*$
        name: comment.line.doctype.so
        beginCaptures:
          2: {name: punctuation.whitespace.comment.leading.so}
          3: {name: comment.line.doctype.so}
          4: {name: punctuation.definition.comment.so}
        endCaptures:
          0: {name: comment.line.doctype.so}
        patterns:
          - include: text.html.markdown#inline
      - begin: ((^\s*)|\s*)((//))
        end: \s*$
        name: comment.line.number-sign.so
        beginCaptures:
          2: {name: punctuation.whitespace.comment.leading.so}
          3: {name: comment.line.double-slash.so}
          4: {name: punctuation.definition.comment.so}
        endCaptures:
          0: {name: comment.line.number-sign.so}
        patterns:
          - include: text.html.markdown#inline

    repository:
      nested-block-jsdoc:
        begin: (/\+\+)\s*
        end: \s*(\+/)
        name: comment.block.documentation.nested.so
        captures:
          1: {name: punctuation.definition.comment.so}
        patterns:
          - include: "#jsdoc"
          - include: text.html.markdown#inline
          - include: "#nested-block-jsdoc"
      nested-block:
        begin: (/\+)\s*
        end: \s*(\+/)
        name: comment.block.nested.so
        captures:
          1: {name: punctuation.definition.comment.so}
        patterns:
          - include: text.html.markdown#inline
          - include: "#nested-block"
      nested-special:
        begin: (/\+)\s*
        end: \s*(\+/)
        captures:
          1: {name: punctuation.definition.comment.so}
        patterns:
          - include: "#jsdoc"
          - include: text.html.markdown#inline
          - include: "#nested-special"

  calls:
    patterns:
      - comment: |
          Function calls
          For testing only:
          for let x int|str, y int in list arr 'json' if x % 2 < 3
        match: |
          (?x)\s*\b
          (
          (?!(?<!(?:(?<!\.)\.|[?!:]:)=?|->)
          \b(?:# don't match keywords
          in|of|as|is|new|infer|unset
          |typeof|nameof|sizeof|pairof|keyof|valueof
          |length|delete|to|til|thru|at|by
          |n?and|x?n?or|not|parallel|series|spawn|discard
          |func?|function|proc|process|macro
          |let|var|val|const|declare
          |class|given|constraint|enum|relation|lattice
          |project|attribute|protocol|member|extend|fragment|interface|struct
          |module|package|namespace|object|record|label
          |raw|data|query|schema|style|component|element|trait|friend|alias|type
          |if|else\s*(?:if|unless)?|els?if|ell?ess|unless|guard
          |for|each|repeat\s*\b\s*(?:while|until)?|while|until|repeat|do|redo
          |switch|case|fail|default|match|when|pass|fallthru
          |try|retry|throw|raise|catch|rescue|finally
          |with|ref|defer|refer|show|hide|enter|exit
          |then|begin|end|debug|check|assert
          |break|continue|halt|skip|fixed|lock
          |(?:return|give|await|yield|throw|raise)s?
          |import|export|show|hide|open|close
          |from|where|join|equals?|[io]nto|order
          |take|drop|fold|scan|select|group|use|using
          )\b
          )
          [\p{Pc}\p{L}]\w*
          )
          \b\s+
          (?=
          (?!(?<!(?:(?<!\.)\.|[?!:]:)=?|->)
          \b(?:# don't match keywords
          in|of|as|is|new|infer|unset
          |typeof|nameof|sizeof|pairof|keyof|valueof
          |length|delete|to|til|thru|at|by
          |n?and|x?n?or|not|parallel|series|spawn|discard
          |func?|function|proc|process|macro
          |let|var|val|const|declare
          |class|given|constraint|enum|relation|lattice
          |project|attribute|protocol|member|extend|fragment|interface|struct
          |module|package|namespace|object|record|label
          |raw|data|query|schema|style|component|element|trait|friend|alias|type
          |if|else\s*(?:if|unless)?|els?if|ell?ess|unless|guard
          |for|each|repeat\s*\b\s*(?:while|until)?|while|until|repeat
          |switch|case|fail|default|match|when|pass|fallthru
          |try|retry|throw|raise|catch|rescue|finally
          |with|ref|defer|refer|show|hide|enter|exit
          |then|begin|end|debug|check|assert
          |break|continue|halt|skip|fixed|lock
          |(?:return|give|await|yield|throw|raise)s?
          |import|export|show|hide|open|close
          |from|where|join|equals?|[io]nto|order
          |take|drop|fold|scan|select|group|use|using
          )\b
          )
          [\w]+|\[(?!<)|<\|(?!>)(?=\|*)|<\+(?!>)(?=\+*))
        captures:
          1: {patterns: [include: "#function-entities"]}
      - comment: |
          Function calls
          For testing only:
          for let x int|str, y int in list arr 'json' if x % 2 < 3
        match: |
          (?x)\s*\b
          (
          (?!(?<!(?:(?<!\.)\.|[?!:]:)=?|->)
          \b(?:# don't match keywords
          in|of|as|is|new|infer|unset
          |typeof|nameof|sizeof|pairof|keyof|valueof
          |length|delete|to|til|thru|at|by
          |n?and|x?n?or|not|parallel|series|spawn|discard
          |func?|function|proc|process|macro
          |let|var|val|const|declare
          |class|given|constraint|enum|relation|lattice
          |project|attribute|protocol|member|extend|fragment|interface|struct
          |module|package|namespace|object|record|label
          |raw|data|query|schema|style|component|element|trait|friend|alias|type
          |if|else\s*(?:if|unless)?|els?if|ell?ess|unless|guard
          |for|each|repeat\s*\b\s*(?:while|until)?|while|until|repeat|do|redo
          |switch|case|fail|default|match|when|pass|fallthru
          |try|retry|throw|raise|catch|rescue|finally
          |with|ref|defer|refer|show|hide|enter|exit
          |then|begin|end|debug|check|assert
          |break|continue|halt|skip|fixed|lock
          |(?:return|give|await|yield|throw|raise)s?
          |import|export|show|hide|open|close
          |from|where|join|equals?|[io]nto|order
          |take|drop|fold|scan|select|group|use|using
          )\b
          )
          [\p{Pc}\p{L}]\w*
          )
          \b
          (?=
          !(?:\.=?)?\s*|
          \s+[\p{S}\p{P}&&[^,;'"`\\\p{Pc}({\[)}\]]]*
          (?!(?<!(?:(?<!\.)\.|[?!:]:)=?|->)
          \b(?:# don't match keywords
          in|of|as|is|new|infer|unset
          |typeof|nameof|sizeof|pairof|keyof|valueof
          |length|delete|to|til|thru|at|by
          |n?and|x?n?or|not|parallel|series|spawn|discard
          |func?|function|proc|process|macro
          |let|var|val|const|declare
          |class|given|constraint|enum|relation|lattice
          |project|attribute|protocol|member|extend|fragment|interface|struct
          |module|package|namespace|object|record|label
          |raw|data|query|schema|style|component|element|trait|friend|alias|type
          |if|else\s*(?:if|unless)?|els?if|ell?ess|unless|guard
          |for|each|repeat\s*\b\s*(?:while|until)?|while|until|repeat|do|redo
          |switch|case|fail|default|match|when|pass|fallthru
          |try|retry|throw|raise|catch|rescue|finally
          |with|ref|defer|refer|show|hide|enter|exit
          |then|begin|end|debug|check|assert
          |break|continue|halt|skip|fixed|lock
          |(?:return|give|await|yield|throw|raise)s?
          |import|export|show|hide|open|close
          |from|where|join|equals?|[io]nto|order
          |take|drop|fold|scan|select|group|use|using
          )\b
          )

          [\w]+|\[<|
          (?:[!?~]?\.=?|[?!:]:=?|->)?\s*\(|
          (?:[!?~]?\.=?|[?!:]:=?|->)?\s+['"`\\\[]
          )
        captures:
          1: {patterns: [include: "#function-entities"]}

  function-entities:
    patterns:
      - match: |
          (?x)\b(?:
          (?<!\.\.+)(?<=[!?~]?\.=?|[?!:]:=?|->)
          (?:# Properties (note all properties are by default, symbols)
          (_+[\p{Pc}\p{L}]\w*(?!_+)|[\p{Pc}\p{L}][\w&&[^_]]*_+)|
          ([\p{L}&&\P{Ll}][\w&&\P{Ll}]*)|
          ((?:[\p{Pc}\p{L}&&\P{Ll}]+[\w&&\P{Lu}]*)+)|
          ([\p{Pc}\p{L}]\w*)
          )
          |
          (?:# Objects and maps
          (_+[\p{Pc}\p{L}]\w*(?!_+)|[\p{Pc}\p{L}][\w&&[^_]]*_+)|
          ([\p{L}&&\P{Ll}][\w&&\P{Ll}]*)|
          ((?:[\p{Pc}\p{L}&&\P{Ll}]+[\w&&\P{Lu}]*)+)|
          ([\p{Pc}\p{L}]\w*)
          )
          (?=(?:[?!~]?\.?=?)?\[(?!<)|(?![>.]\.[.<]?)[?!~]?\.=?|[?!:]:|->)
          |
          (?:# Regular variables
          (_+[\p{Pc}\p{L}]\w*(?!_+)|[\p{Pc}\p{L}][\w&&[^_]]*_+)|
          ([\p{L}&&\P{Ll}][\w&&\P{Ll}]*)|
          ((?:[\p{Pc}\p{L}&&\P{Ll}]+[\w&&\P{Lu}]*)+)|
          ([\p{Pc}\p{L}]\w*)
          )
          )\b
        captures:
          1: {name: entity.name.tag.so}
          2: {name: entity.name.tag.so support.class.component.so}
          3: {name: entity.name.class.builtin.so}
          4: {name: entity.name.function.method.so}
          5: {name: variable.other.global.so}
          6: {name: variable.other.constant.object.so}
          7: {name: variable.other.conditional.so}
          8: {name: variable.other.object.so}
          9: {name: entity.name.function.tagged-template.so}
          10: {name: entity.name.type.so}
          11: {name: entity.name.class.so}
          12: {name: entity.name.function.so}
      - include: $self

  variables:
    comment: |
      For testing only
      _int int_ _int._int INT INT.INT Int Int.Int int int.int
      Four types of variables:
      - underscore variables (either surrounded by _ on one end or both)
      - constant variables: in SHOUT_SNAKE_CASE
      - class variables: in PascalCase
      - regular variables: in camelCase
    match: |
      (?x)\s*\b
      (?:
      (?<!\.\.+)(?<=[!?~]?\.=?|[?!:]:=?|->)
      (?:# Properties (note all properties are by default, symbols)
      (_+[\p{Pc}\p{L}]\w*(?!_+)|[\p{Pc}\p{L}][\w&&[^_]]*_+)|
      ([\p{L}&&\P{Ll}][\w&&\P{Ll}]*)|
      ((?:[\p{Pc}\p{L}&&\P{Ll}]+[\w&&\P{Lu}]*)+)|
      ([\p{Pc}\p{L}]\w*)
      )
      |
      (?:# Objects and maps
      (_+[\p{Pc}\p{L}]\w*(?!_+)|[\p{Pc}\p{L}][\w&&[^_]]*_+)|
      ([\p{L}&&\P{Ll}][\w&&\P{Ll}]*)|
      ((?:[\p{Pc}\p{L}&&\P{Ll}]+[\w&&\P{Lu}]*)+)|
      ([\p{Pc}\p{L}]\w*)
      )
      (?=(?:[?!~]?\.?=?)?\[(?!<)|(?![>.]\.[.<]?)[?!~]?\.=?|[?!:]:|->)
      |
      (?:# Regular variables
      (_+[\p{Pc}\p{L}]\w*(?!_+)|[\p{Pc}\p{L}][\w&&[^_]]*_+)|
      ([\p{L}&&\P{Ll}][\w&&\P{Ll}]*)|
      ((?:[\p{Pc}\p{L}&&\P{Ll}]+[\w&&\P{Lu}]*)+)|
      ([\p{Pc}\p{L}]\w*)
      )
      )
      \b\s*
    captures:
      1: {name: variable.other.index.so}
      2: {name: variable.other.constant.property.so}
      3: {name: variable.other.property.static.so}
      4: {name: variable.other.property.so}
      5: {name: variable.other.global.so}
      6: {name: variable.other.constant.object.so}
      7: {name: variable.other.conditional.so}
      8: {name: variable.other.object.so}
      9: {name: variable.other.dollar.so}
      10: {name: variable.other.constant.so}
      11: {name: variable.other.class.so}
      12: {name: variable.other.readwrite.so}

  operators:
    patterns:
      - include: "#special-operators"
      - include: "#unary-ops"
      - include: "#binary-ops"

    repository:
      binary-ops-builtin:
        patterns:
          - comment: augmented assignment += -= *= /= etc
            match: (?<=^|['"`\\({\[\s])([\p{S}\p{P}&&[^,;'"`\\\p{Pc}({\[)}\]]]+(?<![!:~.<=>])=)(?=$|['"`\\\s)}\]])
            name: keyword.operator.assignment.augmented.so

          - comment: |
              BUILTIN OPERATORS

              1: assignment : :=
              2: arithmetic + - * ** *** / // /// % %% *> <*
              3: increment/decrement ++ --
              4: logical && || ^^ !& !| !^ &| &!
              5: bitwise & | ^ ~
              6: bitwise shift << >> <<< >>>
              7: function pipeline <| |> <|| ||> <||| |||>
              8: function composition +> <+ <++ +>>
              9: class <: :> :< >: <:< >:> <:> >:< <! !> !< >! <!< >!> <!> >!<
              10: relational < > <= >=
              11: regex =< <> </ /> <$ $> <$> <+> <*> </> <$> $
              12: equality == != === !==
              13: wavy operators ~> <~ ~~> <~~
              14: fat arrow-like => ==> <==
              15: skinny arrow-like -> --> <- <--
              16: null-coalescing ??
              17: non-null coalescing !!
              18: compact ternary operator ?:
              19: inverse ternary operator !:
              20: infix function call $:
            captures:
              1: {name: keyword.operator.assignment.so}
              2: {name: keyword.operator.arithmetic.so}
              3: {name: keyword.operator.successor.so}
              4: {name: keyword.operator.logical.so}
              5: {name: keyword.operator.bitwise.so}
              6: {name: keyword.operator.bitwise.shift.so}
              7: {name: keyword.operator.pipeline.so}
              8: {name: keyword.operator.compose.so}
              9: {name: keyword.operator.class.so}
              10: {name: keyword.operator.relational.so}
              11: {name: keyword.operator.regexp.so}
              12: {name: keyword.operator.comparison.so}
              13: {name: keyword.operator.similarity.so}
              14: {name: keyword.operator.arrow.fat.so}
              15: {name: keyword.operator.arrow.skinny.so}
              16: {name: keyword.operator.null-coalescing.so}
              17: {name: keyword.operator.coalescing.so}
              18: {name: keyword.operator.conditional.so}
              19: {name: keyword.operator.ternary.so}
              20: {name: keyword.operator.macro.dollar.so}
            match: |
              (?x)
              (?<=^|['"`\\({\[\s])# spacing
              (?:
              (:?=)#1
              |([+-]|\*{1,3}|~?/|%%?|\#\#?|<?\*>?)#2
              |(\+\+|--)#3
              |([&|^~]{2})#4
              |([&|^~])#5
              |(<<<?|>>>?)#6
              |(\|{1,3}>|<\|{1,3})#7
              |(\+>|<\+)#8
              |([<>]?[!:][<>]?)#9
              |([<>]=?)#10
              |(<>|=<|<?[/*|+$]>?)#11
              |([!=]==?)#12
              |(~>|<~|~~>|<~~)#13
              |(<==|==?>)#14
              |(--?>|<--?)#15
              |(\?\?)#16
              |(!!)#17
              |(\?:)#18
              |(!:)#19
              |(\$:)#20
              )
              (?=$|['"`\\\s)}\]])

          - comment: |
              CUSTOM OPERATORS

              1: custom bitwise (& | ^ ~)
              2: custom arithmetic (+ - * / %)
              3: custom prototype (:)
              4: custom accessor (.)
              5: custom equality (= !)
              6: custom comparison (< >)
              7: custom private (? #)
              8: custom mathematical (Unicode Sm)
              9: custom currency (Unicode Sc)
              10: custom ASCII (between \x80 and \xff)
              11: custom infix operators (all other chars)
            captures:
              1: {name: keyword.operator.bitwise.custom.so}
              2: {name: keyword.operator.arithmetic.custom.so}
              3: {name: keyword.operator.prototype.custom.so}
              4: {name: keyword.operator.accessor.custom.so}
              5: {name: keyword.operator.comparison.custom.so}
              6: {name: keyword.operator.relational.custom.so}
              7: {name: keyword.operator.private.custom.so}
              8: {name: keyword.operator.math.custom.so}
              9: {name: keyword.operator.currency.custom.so}
              10: {name: keyword.operator.ascii.custom.so}
              11: {name: keyword.operator.infix.custom.so}
            match: |
              (?x)
              (?<=^|['"`\\({\[\s])# spacing
              (?:
              ([&|^~][\p{S}\p{P}&&[^,;'"`\\\p{Pc}({\[)}\]]]+)#1
              |([+\-*/%][\p{S}\p{P}&&[^,;'"`\\\p{Pc}({\[)}\]]]+)#2
              |(:[\p{S}\p{P}&&[^,;'"`\\\p{Pc}({\[)}\]]]+)#3
              |(\.[\p{S}\p{P}&&[^,;'"`\\\p{Pc}({\[)}\]]]+)#3
              |([!=][\p{S}\p{P}&&[^,;'"`\\\p{Pc}({\[)}\]]]+)#4
              |([<>][\p{S}\p{P}&&[^,;'"`\\\p{Pc}({\[)}\]]]+)#5
              |([?\#][\p{S}\p{P}&&[^,;'"`\\\p{Pc}({\[)}\]]]+)#6
              |(\p{Sm}[\p{S}\p{P}&&[^,;'"`\\\p{Pc}({\[)}\]]]+)#7
              |(\p{Sc}[\p{S}\p{P}&&[^,;'"`\\\p{Pc}({\[)}\]]]+)#8
              |([\p{S}\p{P}&&[\x80-\xff]][\p{S}\p{P}&&[^,;'"`\\\p{Pc}({\[)}\]]]+)#9
              |([\p{S}\p{P}&&[^,;'"`\\\p{Pc}({\[)}\]]]+)#10
              )
              (?=$|['"`\\\s)}\]])

      binary-ops:
        match: (?<=^|['"`\\\s({\[])([\p{S}\p{P}&&[^,;'"`\\\p{Pc}({\[)}\]]]+)(?=$|['"`\\\s)}\]])
        captures:
          0: {patterns: [include: "#binary-ops-builtin"]}

      unary-ops:
        patterns:
          - &transfix-operators
            comment: Transfix binary operators
            match: |
              (?x)(?<=\b|^|[)}\]'"`\\])
              (?:
              ([>.]\.[.<])
              |(\?\.=?)
              |(~\.=?)
              |(!\.=?)
              |((?:::|\.)=?)
              |(->))
              (?=\b|$|[({\['"`\\])
            captures:
              1: {name: keyword.operator.range.so}
              2: {name: punctuation.accessor.optional.so}
              3: {name: punctuation.accessor.cascade.so}
              4: {name: punctuation.accessor.call.so}
              5: {name: punctuation.accessor.so}
              6: {name: punctuation.accessor.module.so}

          - &prefix-operators
            comment: Prefix operators
            match: |
              (?x)
              (?:(\*)#1
              |(\+)#2
              |(\-)#3
              |(\&)#4
              |(\|)#5
              |(\^)#6
              |(\!)#7
              |(\$)#8
              |(\@)#9
              |(\~)#10
              |(\?)#11
              |(\=)#12
              |(\$)#13
              |(\#)#14
              |[\p{S}\p{P}&&[^,;'"`\\\p{Pc}({\[)}\]]])#15
              (?=[\p{S}\p{P}&&[^,;'"`\\\p{Pc}({\[)}\]]]*
              [\w({\[_,;'"`])
            name: keyword.operator.prefix.so
            captures:
              1: {name: keyword.operator.module.all.so}
              2: {name: keyword.operator.increment.so}
              3: {name: keyword.operator.decrement.so}
              4: {name: keyword.operator.intersection.so}
              5: {name: keyword.operator.union.so}
              6: {name: keyword.operator.symmetric.so}
              7: {name: keyword.operator.logical.so}
              8: {name: keyword.operator.private.so}
              9: {name: keyword.operator.decorator.so}
              10: {name: keyword.operator.bitwise.not.so}
              11: {name: keyword.operator.existential.so}
              12: {name: keyword.operator.assignment.so}
              13: {name: keyword.operator.pipeline.so}
              14: {name: keyword.operator.private.so}
              15: {name: keyword.operator.prefix.so}

          - &suffix-operators
            comment: Suffix operators
            match: |
              (?x)
              (?<=[\w)}\]_,;'"`]
              [\p{S}\p{P}&&[^,;'"`\\\p{Pc}({\[)}\]]]*)
              (?:(\*)#1
              |(\+)#2
              |(\-)#3
              |(\&)#4
              |(\|)#5
              |(\^)#6
              |(\!)#7
              |(\$)#8
              |(\@)#9
              |(\~)#10
              |(\?)#11
              |(\=)#12
              |(\$)#13
              |(\#)#14
              |[\p{S}\p{P}&&[^,;'"`\\\p{Pc}({\[)}\]]])#15
            name: keyword.operator.suffix.so
            captures:
              1: {name: keyword.operator.module.all.so}
              2: {name: keyword.operator.increment.so}
              3: {name: keyword.operator.decrement.so}
              4: {name: keyword.operator.intersection.so}
              5: {name: keyword.operator.union.so}
              6: {name: keyword.operator.symmetric.so}
              7: {name: punctuation.accessor.call.so}
              8: {name: keyword.operator.private.so}
              9: {name: keyword.operator.decorator.so}
              10: {name: keyword.operator.bitwise.so}
              11: {name: punctuation.accessor.optional.so}
              12: {name: keyword.operator.assignment.so}
              13: {name: keyword.operator.pipeline.so}
              14: {name: keyword.operator.private.so}
              15: {name: keyword.operator.suffix.so}

      pipeline-operator:
        patterns:
          - applyEndPatternLast: 1
            begin: |
              (?x)\s*(?:(\++>)|(\|+>))(?=\s*(
              [\p{S}\p{P}&&[^,;'"`\\\p{Pc}({\[)}\]]]*# prefix
              (?!(?<!(?:(?<!\.)\.|[?!:]:)=?|->)
              \b(?:# don't match keywords
              in|of|as|is|new|infer|unset
              |typeof|nameof|sizeof|pairof|keyof|valueof
              |length|delete|to|til|thru|at|by
              |n?and|x?n?or|not|parallel|series|spawn|discard
              |func?|function|proc|process|macro
              |let|var|val|const|declare
              |class|given|constraint|enum|relation|lattice
              |project|attribute|protocol|member|extend|fragment|interface|struct
              |module|package|namespace|object|record|label
              |raw|data|query|schema|style|component|element|trait|friend|alias|type
              |if|else\s*(?:if|unless)?|els?if|ell?ess|unless|guard
              |for|each|repeat\s*\b\s*(?:while|until)?|while|until|repeat|do|redo
              |switch|case|fail|default|match|when|pass|fallthru
              |try|retry|throw|raise|catch|rescue|finally
              |with|ref|defer|refer|show|hide|enter|exit
              |then|begin|end|debug|check|assert
              |break|continue|halt|skip|fixed|lock
              |(?:return|give|await|yield|throw|raise)s?
              |import|export|show|hide|open|close
              |from|where|join|equals?|[io]nto|order
              |take|drop|fold|scan|select|group|use|using
              )\b
              )
              [\w]+
              (?:[\p{S}\p{P}&&[^,;'"`\\\p{Pc}({\[)}\]]]*# transfix
              [\w]+)*
              [\p{S}\p{P}&&[^,;'"`\\\p{Pc}({\[)}\]]]*# suffix
              )\s*([^(]|$|;))
            end: (?=\O)|$
            beginCaptures:
              1: {name: keyword.operator.compose.so}
              2: {name: keyword.operator.pipeline.so}
            patterns:
              - match: |
                  (?x)\s*\b
                  (?!(?<!(?:(?<!\.)\.|[?!:]:)=?|->)
                  \b(?:# don't match keywords
                  in|of|as|is|new|infer|unset
                  |typeof|nameof|sizeof|pairof|keyof|valueof
                  |length|delete|to|til|thru|at|by
                  |n?and|x?n?or|not|parallel|series|spawn|discard
                  |func?|function|proc|process|macro
                  |let|var|val|const|declare
                  |class|given|constraint|enum|relation|lattice
                  |project|attribute|protocol|member|extend|fragment|interface|struct
                  |module|package|namespace|object|record|label
                  |raw|data|query|schema|style|component|element|trait|friend|alias|type
                  |if|else\s*(?:if|unless)?|els?if|ell?ess|unless|guard
                  |for|each|repeat\s*\b\s*(?:while|until)?|while|until|repeat|do|redo
                  |switch|case|fail|default|match|when|pass|fallthru
                  |try|retry|throw|raise|catch|rescue|finally
                  |with|ref|defer|refer|show|hide|enter|exit
                  |then|begin|end|debug|check|assert
                  |break|continue|halt|skip|fixed|lock
                  |(?:return|give|await|yield|throw|raise)s?
                  |import|export|show|hide|open|close
                  |from|where|join|equals?|[io]nto|order
                  |take|drop|fold|scan|select|group|use|using
                  )\b
                  )
                  (?:
                  (?:# Objects and maps
                  (_+[\p{Pc}\p{L}]\w*(?!_+)|[\p{Pc}\p{L}][\w&&[^_]]*_+)|
                  ([\p{L}&&\P{Ll}][\w&&\P{Ll}]*)|
                  ((?:[\p{Pc}\p{L}&&\P{Ll}]+[\w&&\P{Lu}]*)+)|
                  ([\p{Pc}\p{L}]\w*)
                  )
                  (?=(?:[?!~]?\.?=?)?\[(?!<)|(?![>.]\.[.<]?)[?!~]?\.=?|[?!:]:|->)
                  |
                  (?<!\.\.+)(?<=[!?~]?\.=?|[?!:]:=?|->)
                  (?:# Properties (note all properties are by default, symbols)
                  (_+[\p{Pc}\p{L}]\w*(?!_+)|[\p{Pc}\p{L}][\w&&[^_]]*_+)|
                  ([\p{L}&&\P{Ll}][\w&&\P{Ll}]*)|
                  ((?:[\p{Pc}\p{L}&&\P{Ll}]+[\w&&\P{Lu}]*)+)|
                  ([\p{Pc}\p{L}]\w*)
                  )
                  |
                  (?:# Regular variables
                  (_+[\p{Pc}\p{L}]\w*(?!_+)|[\p{Pc}\p{L}][\w&&[^_]]*_+)|
                  ([\p{L}&&\P{Ll}][\w&&\P{Ll}]*)|
                  ((?:[\p{Pc}\p{L}&&\P{Ll}]+[\w&&\P{Lu}]*)+)|
                  ([\p{Pc}\p{L}]\w*)
                  )
                  )\b
                captures:
                  1: {name: variable.other.global.so}
                  2: {name: variable.other.constant.object.so}
                  3: {name: variable.other.conditional.so}
                  4: {name: variable.other.object.so}
                  5: {name: entity.name.tag.so}
                  6: {name: entity.name.tag.so support.class.component.so}
                  7: {name: entity.name.class.builtin.so}
                  8: {name: entity.name.function.method.so}
                  9: {name: entity.name.function.tagged-template.so}
                  10: {name: entity.name.type.so}
                  11: {name: entity.name.class.so}
                  12: {name: entity.name.function.so}
              - *transfix-operators

      special-operators:
        patterns:
          - include: "#pipeline-operator"
          - begin: (?<=\s)(\?)(?=\s)
            end: (?<=^|\s)(:)(?=\s|$)
            captures:
              1: {name: keyword.operator.conditional.so}
            patterns:
              - begin: \s*(?=([\p{Pc}\p{L}]\w*)\s*:)
                end: \s*(?=:\s|$)
                patterns:
                  - include: "#constants"
                  - include: "#variables"
              - include: $self
          - begin: (?<=\s)(\!)(?=\s)
            end: (?<=^|\s)(:)(?=\s|$)
            captures:
              1: {name: keyword.operator.ternary.so}
            patterns:
              - begin: \s*(?=([\p{Pc}\p{L}]\w*)\s*:)
                end: \s*(?=:\s|$)
                patterns:
                  - include: "#constants"
                  - include: "#variables"
              - include: $self
          - begin: (?<=\s)(\$)(?=\s)
            end: (?<=^|\s)(:)(?=\s|$)
            captures:
              1: {name: keyword.operator.macro.dollar.so}
            patterns:
              - begin: \s*(?=([\p{Pc}\p{L}]\w*)\s*:)
                end: \s*(?=:\s|$)
                name: entity.name.function.so
              - include: $self

  custom-types:
    comment: |
      For testing only
      _int int_ _int._int INT INT.INT Int Int.Int int int.int

      Four types of variables:
      - underscore variables (either surrounded by _ on one end or both)
      - constant variables: in SHOUT_SNAKE_CASE
      - class variables: in PascalCase
      - regular variables: in camelCase
    match: |
      (?x)\s*\b

      (?!(?<!(?:(?<!\.)\.|[?!:]:)=?|->)
      \b(?:# don't match keywords
      in|of|new|unset|length|delete|to|til|thru|at|by
      |n?and|x?n?or|not|parallel|series|spawn|discard
      |func?|function|proc|process|macro
      |let|var|val|const|declare
      |class|given|constraint|enum|relation|lattice
      |project|attribute|protocol|member|extend|fragment|interface|struct
      |module|package|namespace|object|record|label
      |raw|data|query|schema|style|component|element|trait|friend|alias|type
      |if|else\s*(?:if|unless)?|els?if|ell?ess|unless|guard
      |for|each|repeat\s*\b\s*(?:while|until)?|while|until|repeat|do|redo
      |switch|case|fail|default|match|when|pass|fallthru
      |try|retry|throw|raise|catch|rescue|finally
      |with|ref|defer|refer|show|hide|enter|exit
      |then|begin|end|debug|check|assert
      |break|continue|halt|skip|fixed|lock
      |(?:return|give|await|yield|throw|raise)s?
      |import|export|show|hide|open|close
      |from|where|join|equals?|[io]nto|order
      |take|drop|fold|scan|select|group|use|using
      )\b
      )
      (?:
      (?<!\.\.+)(?<=[!?~]?\.=?|[?!:]:=?|->)
      (?:# Properties (note all properties are by default, symbols)
      (_+[\p{Pc}\p{L}]\w*(?!_+)|[\p{Pc}\p{L}][\w&&[^_]]*_+)|
      ([\p{L}&&\P{Ll}][\w&&\P{Ll}]*)|
      ((?:[\p{Pc}\p{L}&&\P{Ll}]+[\w&&\P{Lu}]*)+)|
      ([\p{Pc}\p{L}]\w*)
      )
      |
      (?:# Objects and maps
      (_+[\p{Pc}\p{L}]\w*(?!_+)|[\p{Pc}\p{L}][\w&&[^_]]*_+)|
      ([\p{L}&&\P{Ll}][\w&&\P{Ll}]*)|
      ((?:[\p{Pc}\p{L}&&\P{Ll}]+[\w&&\P{Lu}]*)+)|
      ([\p{Pc}\p{L}]\w*)
      )
      (?=(?:[?!~]?\.?=?)?\[(?!<)|(?![>.]\.[.<]?)[?!~]?\.=?|[?!:]:|->)
      |
      (?:# Regular variables
      (_+[\p{Pc}\p{L}]\w*(?!_+)|[\p{Pc}\p{L}][\w&&[^_]]*_+)|
      ([\p{L}&&\P{Ll}][\w&&\P{Ll}]*)|
      ((?:[\p{Pc}\p{L}&&\P{Ll}]+[\w&&\P{Lu}]*)+)|
      ([\p{Pc}\p{L}]\w*)
      )
      )\b
    captures: &custom-types
      1: {name: entity.name.module.so}
      2: {name: entity.name.tag.so}
      3: {name: entity.name.namespace.so}
      4: {name: entity.name.interface.so}
      5: {name: entity.name.tag.block.so}
      6: {name: entity.name.tag.script.so}
      7: {name: entity.name.tag.style.so}
      8: {name: entity.name.tag.inline.so}
      9: {name: entity.name.label.so}
      10: {name: entity.name.project.so}
      11: {name: entity.name.class.so}
      12: {name: entity.name.type.so}

  type-brackets:
    patterns:
      - include: "#code-block"
      - include: "#square-brackets"
      - include: "#round-brackets"

    repository:
      curly-brackets: &type-curly-brackets
        repository:
          punctuation:
            patterns:
              - match: ","
                name: punctuation.separator.mapping.so
              - match: (?<!\s):(?!:)
                name: punctuation.separator.key-value.so
              - match: (?<=^|[({\[])\s*([*+-](?:\s+[*+-])*)
                name: punctuation.definition.block.sequence.item.so

        patterns:
          - begin: (?<=(?::|:?=|->)\s+|[({\[]\s*|\b(?:var|let|const)\b\s*)(\{\|)\s*
            end: \s*(\|\})
            captures:
              1: {name: punctuation.definition.mapping.so}
            patterns:
              - include: "#labels"
              - include: "#punctuation"
              - include: "#types"
              - include: $self
          - begin: (?<=(?::|:?=|->)\s+|[({\[]\s*|\b(?:var|let|const)\b\s*)(\{)\s*
            end: \s*(\})
            captures:
              1: {name: punctuation.definition.dictionary.so}
            patterns:
              - include: "#labels"
              - include: "#punctuation"
              - include: "#types"
              - include: $self

      round-brackets: &type-round-brackets
        repository:
          punctuation:
            patterns:
              - match: ","
                name: punctuation.separator.arguments.so
        patterns:
          - begin: \s*(\(\|)
            end: \s*(\|\))
            captures:
              1: {name: punctuation.definition.parameters.so}
            patterns:
              - include: "#punctuation"
              - include: "#types"
              - include: $self
          - begin: \s*(\()
            end: \s*(\))
            captures:
              1: {name: punctuation.definition.expression.so}
            patterns:
              - include: "#punctuation"
              - include: "#types"
              - include: $self

      square-brackets: &type-square-brackets
        repository:
          punctuation:
            patterns:
              - match: (?<=\b|^|[)}\]'"`\\\s])(:)(?=\b|$|[({\['"`\\\s])
                captures:
                  1: {name: punctuation.separator.slice.so}
              - match: ","
                name: punctuation.separator.sequence.so
        patterns:
          - begin: \s*(\[<)
            end: \s*(>\])
            captures:
              1: {name: punctuation.definition.typeparameters.so}
            patterns:
              - include: "#punctuation"
              - include: "#types"
              - include: $self
          - begin: \s*(\[\|)
            end: \s*(\|\])
            captures:
              1: {name: punctuation.definition.sequence.so}
            patterns:
              - include: "#punctuation"
              - include: "#types"
              - include: $self
          - begin: \s*(\[)
            end: \s*(\])
            captures:
              1: {name: punctuation.definition.array.so}
            patterns:
              - include: "#punctuation"
              - include: "#types"
              - include: $self

  type-keywords:
    patterns:
      - match: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(extends|implements)\b\s*
        name: storage.type.$1.so
      - match: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(typeof|nameof|sizeof|keyof|valueof|pairof|infer|as|is)\b\s*
        name: keyword.operator.expression.$1.so

  type-operators:
    patterns:
      - comment: transfix binary operators
        match: |
          (?x)(?<=^|[)}\]\w'"`])
          (?:(\?[:.])|(~[:.])|(![:.])|(::|\.)|(->))
          (?=$|[({\[\w'"`])
        captures:
          1: {name: punctuation.accessor.optional.so}
          2: {name: punctuation.accessor.cascade.so}
          3: {name: punctuation.accessor.call.so}
          4: {name: punctuation.accessor.so}
          5: {name: punctuation.accessor.module.so}

      - comment: type operators
        match: |
          (?x)\s*
          (?:
          (\+)|
          (\-)|
          (\*)|
          (\/)|
          (\%)|
          (\!)|
          (\?)|
          (\&)|
          (\|)|
          (\^)|
          (\~)|
          (\$)|
          (\#)|
          ([<>])
          )
          (?=$|[({\[\w'"\s])
        captures:
          1: {name: keyword.operator.sum.so}
          2: {name: keyword.operator.difference.so}
          3: {name: keyword.operator.product.so}
          4: {name: keyword.operator.quotient.so}
          5: {name: keyword.operator.remainder.so}
          6: {name: keyword.operator.only.so}
          7: {name: keyword.operator.maybe.so}
          8: {name: keyword.operator.intersection.so}
          9: {name: keyword.operator.union.so}
          10: {name: keyword.operator.symmetric.so}
          11: {name: keyword.operator.negation.so}
          12: {name: keyword.operator.macro.dollar.so}
          13: {name: keyword.operator.private.so}
          14: {name: keyword.operator.class.so}

  type-annotation:
    applyEndPatternLast: 1
    begin: (:)(?=\s|$)
    end: (?=\O)|$
    beginCaptures:
      1: {name: punctuation.definition.annotation.so}
    patterns:
      - include: "#types"

  types:
    patterns:
      - match: \s*(==?>|-->|~~?>)
        name: keyword.operator.type.function.so
      - match: \s*(<==|<--?|<~~?)
        name: keyword.operator.type.channel.so
      - include: "#declarations"
      - include: "#type-keywords"
      - include: "#modifier-keywords"
      - include: "#type-names"
      - include: "#custom-types"
      - include: "#type-brackets"
      - include: "#type-operators"
      - include: "#literals"

  modifier-keywords:
    match: |
      (?x)
      ((?:
      \s*(?:
      (?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(?:# Access modifiers
      public|private|protected|readonly|a?sync|inline|lazy|eager|transparent|transient|partial|whole
      |lawful|rogue|early|late|unique|handle|override|abstract|volatile|static|dynamic|threadsafe|final
      # Function or method modifiers
      |[gs]etter|[dr]efer|recursive|generator|operator|(?:im)?(?:mut|pure)|local|global|native|opaque
      |(?:un)?(?:signed|safe|checked|locked|fixed|sized|bound|sealed)
      |# Function or method modifiers
      (?:pre|in|post|suf|af|trans|interface)fix|
      (?:u|bi|ter|)nary|oper
      |# Decorators
      @(?:
      [\p{Pc}\p{L}]\w*
      (?:(?:[?!]?\.|[?!:]:|->)
      (?:(?:[\p{Pc}\p{L}]\w*)))*
      )
      )
      )
      \s*)*)
      (?=\s*\b
      (?:
      class|extend
      |given|constraint
      |enum|relation
      |fragment|struct
      |func?|function|proc|process|macro
      |interface|schema
      |module|package
      |namespace|lattice
      |object|record
      |protocol|member
      |project|attribute
      |raw
      |data|query
      |style|component|element
      |trait|friend
      )\b
      )
    captures:
      1:
        patterns: &modifier-keywords
          - match: |
              (?x)\s*@(?:
              [\p{Pc}\p{L}]\w*
              (?:(?:[?!]?\.|[?!:]:|->)
              (?:(?:[\p{Pc}\p{L}]\w*)))*
              )\s*
            name: entity.name.class.decorator.so
          - match: |
              (?x)\s*
              \s*\b
              (?:
              (# Access modifiers
              public|private|protected|readonly|a?sync|inline|lazy|eager|transparent|transient|partial|whole
              |lawful|rogue|early|late|unique|handle|override|abstract|volatile|static|dynamic|threadsafe|final
              )|
              (# Function or method modifiers
              [gs]etter|[dr]efer|recursive|generator|operator|(?:im)?(?:mut|pure)|local|global|native|opaque
              |(?:un)?(?:signed|safe|checked|locked|fixed|sized|bound|sealed)
              )|
              (# Property modifiers
              (?:pre|in|post|suf|af|trans|interface)fix|
              (?:u|bi|ter|)nary|oper
              )
              )\b\s*
            captures:
              1: {name: storage.modifier.so}
              2: {name: storage.type.accessor.so}
              3: {name: storage.type.property.so}

  support:
    patterns:
      - comment: Swift
      - include: source.swift#builtin-properties
      - include: source.swift#builtin-types
      - include: source.swift#builtin-functions

      - comment: JavaScript
      - include: source.js#support-objects
      - include: "#support-js"

      - comment: Python
      - include: source.python#builtin-functions
      - include: source.python#builtin-types
      - include: source.python#magic-function-names
      - include: source.python#magic-variable-names

      - comment: PHP
      - include: source.php#support
      - include: source.php#class-builtin
      - include: "#support-php"

      - comment: Other

  declaration-keywords:
    comment: clause keywords
    match: |
      (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(?:
      (func?|function|proc|process|macro)# function
      |(let|va[rl]|const)# variable
      |(class|extend)# class
      |(given|constraint)# constraint
      |(enum|relation)# enumeration
      |(project|attribute)# project
      |(fragment|struct)# fragment
      |(interface|schema)# interface
      |(module|package)# module
      |(namespace|lattice)# function
      |(object|record)# object
      |(raw)# markup
      |(data|query)# indented GraphQL
      |(style|component|element)# inline CSS
      |(trait|friend)# trait
      |(type|alias)# type alias
      |(declare)# declaration
      )\b\s*
    captures:
      1: {name: storage.type.function.so}
      2: {name: storage.type.so}
      3: {name: storage.type.class.so}
      4: {name: storage.type.constraint.so}
      5: {name: storage.type.enum.so}
      6: {name: storage.type.project.so}
      7: {name: storage.type.fragment.so}
      8: {name: storage.type.interface.so}
      9: {name: storage.type.module.so}
      10: {name: storage.type.namespace.so}
      11: {name: storage.type.object.so}
      12: {name: storage.type.raw.so}
      13: {name: storage.type.schema.so}
      14: {name: storage.type.style.so}
      15: {name: storage.type.trait.so}
      16: {name: keyword.other.typedef.so}
      17: {name: keyword.other.declare.so}

  general-keywords:
    comment: general keywords
    match: |
      (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(?:
      (if|else\s*(?:if|unless)?|els?if|ell?ess|unless|guard)#1
      |(for|each|repeat\s*\b\s*(?:while|until)?|while|until|repeat)#2
      |(switch|case|fail|default|fallthru)#3
      |(match|when|pass)#4
      |(try|retry|throw|raise|catch|rescue|finally)#5
      |(with)#6
      |(ref|[dr]efer|show|hide|enter|exit)#7
      |(then)#8
      |(debug|check|assert)#9
      |(break|continue|halt|skip|return|give|label|await|yield|throw|raise|yield\b\s+\bfrom)# 10
      |((?:im|ex)port|show|hide)# 11
      |(parallel|series|spawn|discard)#12
      |(do|redo)#13
      |(begin|end)#14
      )\b\s*
    captures:
      1: {name: keyword.control.conditional.so}
      2: {name: keyword.control.loop.so}
      3: {name: keyword.control.switch.so}
      4: {name: keyword.control.match.so}
      5: {name: keyword.control.error.so}
      6: {name: keyword.control.with.so}
      7: {name: keyword.control.so}
      8: {name: keyword.control.then.so}
      9: {name: keyword.other.$10.so}
      10: {name: keyword.control.flow.so}
      11: {name: keyword.control.module.so}
      12: {name: keyword.control.thread.so}
      13: {name: keyword.control.do.so}
      14: {name: keyword.control.$14.so}

  expression-keywords:
    comment: expression keywords
    match: |
      (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(?:
      (in|of|as|is|new|infer
      |typeof|nameof|sizeof|keyof|pairof|valueof)
      |(length)|(delete)|(to|til|thru|at|by)|(unset)
      |(n?and|x?n?or|not)
      )\b\s*
    captures:
      1: {name: keyword.operator.expression.$1.so}
      2: {name: keyword.operator.expression.length.so}
      3: {name: keyword.operator.expression.delete.so}
      4: {name: keyword.operator.expression.range.so}
      5: {name: keyword.operator.expression.void.so}
      6: {name: keyword.operator.expression.logical.so}

  keywords:
    patterns:
      - include: "#sql-expression"
      - include: "#module-expression"
      - include: "#control-expression"
      - include: "#query-expression"
      - match: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(let|va[rl]|const)\b\s*
        name: storage.type.so
      - match: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(declare)\b\s*
        name: keyword.other.$1.so
      - include: "#modifier-keywords"
      - include: "#declaration-keywords"
      - include: "#expression-keywords"
      - include: "#general-keywords"

    repository:
      sql-expression:
        patterns:
          - captures:
              1: {name: keyword.other.create.so}
              2: {name: keyword.other.table.so}
              5: {name: entity.name.function.so}
            match:
              (?:\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(create(?:\s+or\s+replace)?|replace)\s+(aggregate|conversion|database|domain|function|group|(unique\s+)?index|language|operator
              class|operator|rule|schema|sequence|table|tablespace|trigger|type|user|view)\s+)(['"`]?)(\w+)\4
            name: meta.create.so
          - captures:
              1: {name: keyword.other.drop.so}
              2: {name: keyword.other.table.so}
            match:
              (?:\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(drop|delete)\s+(aggregate|conversion|database|domain|function|group|index|language|operator
              class|operator|rule|schema|sequence|table|tablespace|trigger|type|user|view))
            name: meta.drop.so
          - captures:
              1: {name: keyword.other.drop.so}
              2: {name: keyword.other.table.so}
              3: {name: entity.name.function.so}
              4: {name: keyword.other.cascade.so}
            match: (?:\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(drop|delete)\s+(table)\s+(\w+)(\s+cascade)?\b)
            name: meta.drop.so
          - captures:
              1: {name: keyword.other.alter.so}
              2: {name: keyword.other.table.so}
            match:
              (?:\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(alter|update)\s+(aggregate|conversion|database|domain|function|group|index|language|operator
              class|operator|proc(edure)?|rule|schema|sequence|table|tablespace|trigger|type|user|view)\s+)
            name: meta.alter.so

      control-expression:
        applyEndPatternLast: 1
        begin: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(halt|skip|break|continue|goto|label)\b
        end: (?=\O)|$
        beginCaptures:
          1: {name: keyword.control.flow.so}
        patterns:
          - match: \s*([\p{Pc}\p{L}]\w*)\s*
            name: constant.other.label.so

      module-expression:
        patterns:
          - applyEndPatternLast: 1
            begin: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(import|export|open|close|use|using)\b\s*
            end: (?=\O)|$
            beginCaptures:
              1: {name: keyword.control.module.so}
            patterns:
              - match: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(from|to|as|all|any|show|hide|to|n?and|x?n?or|not)\b\s*
                name: keyword.control.module.so
              - match: \s*\*
                name: keyword.operator.module.all.so
              - include: "#modifier-keywords"
              - include: "#declaration-keywords"
              - include: "#type-keywords"
              - match: *entity-name
                name: variable.other.readwrite.alias.so
              - include: "#strings-unquoted"
              - include: "#strings-quoted"
              - include: "#operators"
              - include: "#punctuation"
              - include: source.yaml#flow-collection

      query-expression:
        patterns:
          - begin: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(from)\b\s*
            end: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(in|of)\b\s*
            captures:
              1: {name: keyword.query.so}
            patterns:
              - include: $self
          - match: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b((\b(fold|scan)\b)\s*(\b(left|right)\b)?\s*(\b(by|while|until|with)\b)?)\b\s*
            name: keyword.query.so
          - begin: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(group)\b\s*
            end: \s*\b(by)\b\s*
            captures:
              1: {name: keyword.query.so}
            patterns:
              - include: $self
          - begin: (?x)\s*\b(join)\b\s*
            end: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(in|of)\b\s*
            captures:
              1: {name: keyword.query.so}
            patterns:
              - include: $self
          - match: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(equals?|[io]nto)\b\s*
            name: keyword.query.so
          - match: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b((\b(order)\b)\s*(\b((a|de)sc)\b)?\s*(\b(by)\b)?)\b\s*
            name: keyword.query.so
          - match: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(select)\b\s*
            name: keyword.query.so
          - match: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b((\b(take|drop)\b)\s*(\b(left|right|init|head|tail|last)\b)?\s*(\b(by|while|until|with)\b)?)\b\s*
            name: keyword.query.so
          - match: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(where)\b\s*
            name: keyword.query.so

  parameter-brackets:
    begin: \s*(\()
    end: \s*(\))
    captures:
      1: {name: punctuation.definition.parameters.so}
    patterns: &function-params
      - include: "#clauses"
      - include: "#keywords"
      - match: (?i)\s*\?[\p{Pc}\p{L}]\w*\b\s*
        name: variable.parameter.optional.so
      - match: (?i)\s*\*[\p{Pc}\p{L}]\w*\b\s*
        name: variable.parameter.spread.so
      - match: (?i)\s*[&~][\p{Pc}\p{L}]\w*\b\s*
        name: variable.parameter.name.so
      - match: (?i)\s*\%[\p{Pc}\p{L}]\w*\b\s*
        name: variable.parameter.reference.so
      - match: (?i)\s*\$[\p{Pc}\p{L}]\w*\b\s*
        name: variable.parameter.other.so
      - match: (?i)\s*\b[\p{Pc}\p{L}]\w*\b\s*
        name: variable.parameter.so
      - include: "$self"

  block-entities:
    repository:
      type-square-brackets: *type-square-brackets
      type-round-brackets: *type-round-brackets
      type-curly-brackets: *type-curly-brackets

    patterns:
      - include: "#definition-keywords"
      - include: "#code-block"
      - include: "#type-keywords"
      - include: "#illegal-keywords"
      - include: "#type-square-brackets"
      - include: "#parameter-brackets"
      - include: "#round-brackets"
      - include: "#type-annotation"
      - match: \s*(?<!\*)\*(?!\*)\s*
        name: keyword.generator.asterisk.so
      - include: "#operators"
      - applyEndPatternLast: 1
        begin: \s*(:)(?:(?=::)|(?![\p{S}\p{P}&&[^,;'"`\\\p{Pc}({\[)}\]]]))
        end: (?=\O)|$
        beginCaptures:
          1: {name: punctuation.definition.annotation.so}
        patterns:
          - include: "#types"

  declarations:
    patterns:
      - include: "#function"
      - include: "#raw"
      - include: "#schema"
      - include: "#style"
      - include: "#class"
      - include: "#enum"
      - include: "#interface"
      - include: "#trait"
      - include: "#fragment"
      - include: "#module"
      - include: "#namespace"
      - include: "#object"
      - include: "#constraint"
      - include: "#project"
      - include: "#protocol"

    repository:
      class:
        applyEndPatternLast: 1
        begin: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(class|extend)\b\s*
        end: (?<=})|(?=\O)|$
        beginCaptures:
          1: {name: storage.type.class.so}
        patterns:
          - include: "#block-entities"
          - match: *entity-name
            name: entity.name.class.so
      constraint:
        applyEndPatternLast: 1
        begin: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(given|constraint)\b\s*
        end: (?<=})|(?=\O)|$
        beginCaptures:
          1: {name: storage.type.constraint.so}
        patterns:
          - include: "#block-entities"
          - match: *entity-name
            name: entity.name.constraint.so
      enum:
        applyEndPatternLast: 1
        begin: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(enum|relation)\b\s*
        end: (?<=})|(?=\O)|$
        name: meta.enum.declaration.so
        beginCaptures:
          1: {name: storage.type.enum.so}
          2: {name: entity.name.enum.so}
        patterns:
          - include: "#block-entities"
          - match: *entity-name
            name: entity.name.enum.so
      fragment:
        applyEndPatternLast: 1
        begin: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(fragment|struct)\b\s*
        end: (?<=})|(?=\O)|$
        beginCaptures:
          1: {name: storage.type.fragment.so}
        patterns:
          - include: "#block-entities"
          - match: *entity-name
            name: entity.name.fragment.so
      function:
        applyEndPatternLast: 1
        begin: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(func?|function|proc|process|macro)\b\s*
        end: (?<=})|(?=\O)|$
        beginCaptures:
          1: {name: storage.type.function.so}
        patterns:
          - include: "#block-entities"
          - match: *entity-name
            name: entity.name.function.so
      interface:
        applyEndPatternLast: 1
        begin: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(interface|schema)\b\s*
        end: (?<=})|(?=\O)|$
        beginCaptures:
          1: {name: storage.type.interface.so}
        patterns:
          - include: "#block-entities"
          - match: *entity-name
            name: entity.name.interface.so
      module:
        applyEndPatternLast: 1
        begin: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(module|package)\b\s*
        end: (?<=})|(?=\O)|$
        beginCaptures:
          1: {name: storage.type.module.so}
        patterns:
          - include: "#block-entities"
          - match: *entity-name
            name: entity.name.module.so
      namespace:
        applyEndPatternLast: 1
        begin: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(namespace|lattice)\b\s*
        end: (?<=})|(?=\O)|$
        beginCaptures:
          1: {name: storage.type.namespace.so}
        patterns:
          - include: "#block-entities"
          - match: *entity-name
            name: entity.name.namespace.so
      object:
        applyEndPatternLast: 1
        begin: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(object|record)\b\s*
        end: (?<=})|(?=\O)|$
        beginCaptures:
          1: {name: storage.type.object.so}
        patterns:
          - include: "#block-entities"
          - match: *entity-name
            name: entity.name.object.so
      protocol:
        applyEndPatternLast: 1
        begin: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(protocol|member)\b\s*
        end: (?<=})|(?=\O)|$
        beginCaptures:
          1: {name: storage.type.protocol.so}
        patterns:
          - include: "#block-entities"
          - match: *entity-name
            name: entity.name.protocol.so
      project:
        applyEndPatternLast: 1
        begin: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(project|attribute)\b\s*
        end: (?<=})|(?=\O)|$
        beginCaptures:
          1: {name: storage.type.protocol.so}
        patterns:
          - include: "#block-entities"
          - match: *entity-name
            name: entity.name.project.so
      raw:
        applyEndPatternLast: 1
        begin: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(raw)\b\s*
        end: (?<=})|(?=\O)|$
        beginCaptures:
          1: {name: storage.type.raw.so}
        patterns:
          - include: "#block-entities"
          - match: *entity-name
            name: entity.name.raw.so
      schema:
        applyEndPatternLast: 1
        begin: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(data|query)\b\s*
        end: (?<=})|(?=\O)|$
        beginCaptures:
          1: {name: storage.type.schema.so}
        patterns:
          - include: "#block-entities"
          - match: *entity-name
            name: entity.name.schema.so
      style:
        applyEndPatternLast: 1
        begin: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(style|component|element)\b\s*
        end: (?<=})|(?=\O)|$
        beginCaptures:
          1: {name: storage.type.style.so}
        patterns:
          - include: "#block-entities"
          - match: *entity-name
            name: entity.name.style.so
      trait:
        applyEndPatternLast: 1
        begin: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(trait|friend)\b\s*
        end: (?<=})|(?=\O)|$
        beginCaptures:
          1: {name: storage.type.trait.so}
        patterns:
          - include: "#block-entities"
          - match: *entity-name
            name: entity.name.trait.so

  clauses:
    patterns:
      - include: "#arguments-clause"
      - include: "#for-clause"
      - include: "#if-clause"
      - include: "#switch-clause"
      - include: "#match-clause"
      - include: "#catch-clause"
      - include: "#with-clause"
      - include: "#thread-clause"
      - include: "#do-clause"
      - include: "#when-clause"
      - include: "#case-clause"
      - include: "#type-clause"
      - include: "#new-clause"
      - include: "#method-clause"
      - include: "#function-clause"

    repository:
      function-params:
        patterns: *function-params

      arguments-clause:
        patterns:
          - begin: |
              (?x)
              (?<=(?:[({\[]\|?|\b(?:#keywords
              (?:re)?do|equals?|[io]nto|select|where|when|case
              |(?:\b(?:fold|scan)\b)\s*(?:\b(?:left|right)\b)?\s*(?:\b(?:by|while|until|with)\b)?
              |(?:\b(?:take|drop)\b)\s*(?:\b(?:left|right|init|head|tail|last)\b)?\s*(?:\b(?:by|while|until|with)\b)?
              )\b)\s*)
              (\|)
              (?!\|)
            captures:
              1: {name: punctuation.separator.arguments.so}
            end: (?<!\|)(\|)(?!\|)
            patterns:
              - include: "#function-params"

      pattern-brackets:
        begin: \s*(\()
        end: \s*(\))
        captures:
          1: {name: punctuation.definition.parameters.so}
        patterns:
          - include: "#function-params"

      method-clause:
        patterns:
          - begin: |
              (?x)(?<!\.\.+)(?<=[!?~]?\.=?|[?!:]:=?|->)
              ([\p{Pc}\p{L}]\w*)\s+
              ([?:]?=)\s+
              (
              (?:(?:# Access modifiers
              public|private|protected|readonly|a?sync|inline|lazy|eager|transparent|transient|partial|whole
              |lawful|rogue|early|late|unique|handle|override|abstract|volatile|static|dynamic|threadsafe|final
              # Function or method modifiers
              |[gs]etter|[dr]efer|recursive|generator|operator|(?:im)?(?:mut|pure)|local|global|native|opaque
              |(?:un)?(?:signed|safe|checked|locked|fixed|sized|bound|sealed)
              |# Function or method modifiers
              (?:pre|in|post|suf|af|trans|interface)fix|
              (?:u|bi|ter|)nary|oper
              |# Decorators
              @(?:
              [\p{Pc}\p{L}]\w*
              (?:(?:[?!]?\.|[?!:]:|->)
              (?:(?:[\p{Pc}\p{L}]\w*)))*
              )
              )\s*\b)*
              )\s*
              (\|)
              (?!\|)
            end: (?<!\|)(\|)(?!\|)
            beginCaptures:
              1: {name: entity.name.function.method.so}
              2: {name: keyword.operator.assignment.so}
              3: {patterns: *modifier-keywords}
              4: {name: punctuation.separator.arguments.so}
            endCaptures:
              1: {name: punctuation.separator.arguments.so}
            patterns:
              - include: "#function-params"
          - comment: |
              Method def before function keyword
              x = def()
            match: |
              (?x)(?<!\.\.+)(?<=[!?~]?\.=?|[?!:]:=?|->)
              ([\p{Pc}\p{L}]\w*)\s+
              ([?:]?=)\s+
              ([\p{Pc}\p{L}]\w*)\s+
              ([?:]?=)\s+
              ((?:
              \s*(?:
              (?:# Access modifiers
              public|private|protected|readonly|a?sync|inline|lazy|eager|transparent|transient|partial|whole
              |lawful|rogue|early|late|unique|handle|override|abstract|volatile|static|dynamic|threadsafe|final
              # Function or method modifiers
              |[gs]etter|[dr]efer|recursive|generator|operator|(?:im)?(?:mut|pure)|local|global|native|opaque
              |(?:un)?(?:signed|safe|checked|locked|fixed|sized|bound|sealed)
              |# Function or method modifiers
              (?:pre|in|post|suf|af|trans|interface)fix|
              (?:u|bi|ter|)nary|oper
              |# Decorators
              @(?:
              [\p{Pc}\p{L}]\w*
              (?:(?:[?!]?\.|[?!:]:|->)
              (?:(?:[\p{Pc}\p{L}]\w*)))*
              )
              ))
              \s*)*)
              (?=\s*\b
              (?:
              func?|function|proc|process|macro
              )\b
              )
            captures:
              1: {name: entity.name.function.method.so}
              2: {name: keyword.operator.assignment.so}
              3: {patterns: *modifier-keywords}

      function-clause:
        patterns:
          - begin: |
              (?x)\s*
              ([\p{Pc}\p{L}]\w*)\s+
              ([?:]?=)\s+
              (
              (?:(?:# Access modifiers
              public|private|protected|readonly|a?sync|inline|lazy|eager|transparent|transient|partial|whole
              |lawful|rogue|early|late|unique|handle|override|abstract|volatile|static|dynamic|threadsafe|final
              # Function or method modifiers
              |[gs]etter|[dr]efer|recursive|generator|operator|(?:im)?(?:mut|pure)|local|global|native|opaque
              |(?:un)?(?:signed|safe|checked|locked|fixed|sized|bound|sealed)
              |# Function or method modifiers
              (?:pre|in|post|suf|af|trans|interface)fix|
              (?:u|bi|ter|)nary|oper
              |# Decorators
              @(?:
              [\p{Pc}\p{L}]\w*
              (?:(?:[?!]?\.|[?!:]:|->)
              (?:(?:[\p{Pc}\p{L}]\w*)))*
              )
              )\s*\b)*
              )\s*
              (\|)
              (?!\|)
            end: (?<!\|)(\|)(?!\|)
            beginCaptures:
              1: {name: entity.name.function.so}
              2: {name: keyword.operator.assignment.so}
              3: {patterns: *modifier-keywords}
              4: {name: punctuation.separator.arguments.so}
            endCaptures:
              1: {name: punctuation.separator.arguments.so}
            patterns:
              - include: "#function-params"
          - comment: |
              Function def before function keyword
              x = def()
            match: |
              (?x)\s*
              ([\p{Pc}\p{L}]\w*)\s+
              ([?:]?=)\s+
              ((?:
              \s*(?:
              (?:# Access modifiers
              public|private|protected|readonly|a?sync|inline|lazy|eager|transparent|transient|partial|whole
              |lawful|rogue|early|late|unique|handle|override|abstract|volatile|static|dynamic|threadsafe|final
              # Function or method modifiers
              |[gs]etter|[dr]efer|recursive|generator|operator|(?:im)?(?:mut|pure)|local|global|native|opaque
              |(?:un)?(?:signed|safe|checked|locked|fixed|sized|bound|sealed)
              |# Function or method modifiers
              (?:pre|in|post|suf|af|trans|interface)fix|
              (?:u|bi|ter|)nary|oper
              |# Decorators
              @(?:
              [\p{Pc}\p{L}]\w*
              (?:(?:[?!]?\.|[?!:]:|->)
              (?:(?:[\p{Pc}\p{L}]\w*)))*
              )
              ))
              \s*)*)
              (?=\s*\b
              (?:
              func?|function|proc|process|macro
              )\b
              )
            captures:
              1: {name: entity.name.function.so}
              2: {name: keyword.operator.assignment.so}
              3: {patterns: *modifier-keywords}

      new-clause:
        applyEndPatternLast: 1
        begin: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(new)\b
        end: (?=\O)|$
        beginCaptures:
          1: {name: keyword.operator.expression.$1.so}
        patterns:
          - match: \s*([\p{Pc}\p{L}]\w*)
            name: entity.name.instance.so
          - include: "#block-entities"

      type-clause:
        patterns:
          - applyEndPatternLast: 1
            begin: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(as|is)\b
            end: (?=\O)|$
            beginCaptures:
              1: {name: keyword.operator.expression.$1.so}
            patterns:
              - include: "#types"
          - applyEndPatternLast: 1
            begin: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(type|alias)\b
            end: (?=\O)|$
            beginCaptures:
              1: {name: keyword.other.typedef.so}
            patterns:
              - match: \s*([?:]?=)\s*
                captures:
                  1: {name: keyword.operator.assignment.so}
              - include: "#types"
          - applyEndPatternLast: 1
            begin: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b((?:return|give|await|yield|throw|raise)s)\b
            end: (?=\O)|$
            beginCaptures:
              1: {name: keyword.modifier.so}
            patterns:
              - include: "#types"

      case-clause:
        begin: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(case|fail|default)\b
        end: (?<=})|(?=;|(?<=\s)(?:->|(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\bthen\b)|$)
        beginCaptures:
          1: {name: keyword.control.switch.so}
        patterns:
          - include: "#code-block"
          - include: $self

      catch-clause:
        begin: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(try|retry|catch|rescue|finally)\b
        end: (?<=})|(?=;|(?<=\s)(?:->|(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\bthen\b)|$)
        name: meta.catch.so
        beginCaptures:
          1: {name: keyword.control.error.so}
        patterns:
          - begin: \s*(\()
            end: \s*(\))
            captures:
              1: {name: punctuation.definition.expression.so}
            patterns:
              - match: \s*\b(as)\b
                name: keyword.control.error.so
              - include: "#code-block"
              - include: $self
          - match: \s*\b(as)\b
            name: keyword.control.error.so
          - include: "#code-block"
          - include: $self

      thread-clause:
        begin: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(parallel|series|spawn|discard|fixed|lock)\b
        end: (?<=})|(?=;|(?<=\s)(?:->|(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\bthen\b)|$)
        name: meta.thread.so
        beginCaptures:
          1: {name: keyword.control.thread.so}
        patterns:
          - begin: \s*(\()
            end: \s*(\))
            captures:
              1: {name: punctuation.definition.expression.so}
            patterns:
              - match: \s*\b(as)\b
                name: keyword.control.thread.so
              - include: "#code-block"
              - include: $self
          - match: \s*\b(as)\b
            name: keyword.control.thread.so
          - include: "#code-block"
          - include: $self

      do-clause:
        begin: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(do|redo)\b
        end: (?<=})|(?=;|(?<=\s)(?:->|(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\bthen\b)|$)
        name: meta.do.so
        beginCaptures:
          1: {name: keyword.control.do.so}
        patterns:
          - include: "#code-block"
          - include: $self

      for-clause:
        begin: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(for|each|repeat\s*\b\s*(?:while|until)?|while|until|repeat)\b
        end: (?<=})|(?=;|(?<=\s)(?:->|(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\bthen\b)|$)
        name: meta.for.so
        beginCaptures:
          1: {name: keyword.control.loop.so}
        patterns:
          - &for-clause-keywords
            match: \s*\b(in|of|to|til|thru|at|by)\b
            name: keyword.control.loop.so
          - begin: \s*(\()
            end: \s*(\))
            captures:
              1: {name: punctuation.definition.expression.so}
            patterns:
              - *for-clause-keywords
              - include: "#code-block"
              - include: $self
          - include: "#code-block"
          - include: $self

      if-clause:
        begin: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(if|else\s*(?:if|unless)?|els?if|ell?ess|unless|guard)\b
        end: (?<=})|(?=;|(?<=\s)(?:->|(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\bthen\b)|$)
        name: meta.if.so
        beginCaptures:
          1: {name: keyword.control.conditional.so}
        patterns:
          - include: "#code-block"
          - include: $self

      match-clause:
        begin: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(match)\b
        end: (?<=})|(?=;|(?<=\s)(?:->|(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\bthen\b)|$)
        name: meta.match.so
        beginCaptures:
          1: {name: keyword.control.match.so}
        patterns:
          - include: "#code-block"
          - include: $self

      switch-clause:
        begin: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(switch)\b
        end: (?<=})|(?=;|(?<=\s)(?:->|(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\bthen\b)|$)
        name: meta.switch.so
        beginCaptures:
          1: {name: keyword.control.switch.so}
        patterns:
          - include: "#code-block"
          - include: $self

      when-clause:
        begin: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(when)\b
        end: (?<=})|(?=;|(?<=\s)(?:->|(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\bthen\b)|$)
        beginCaptures:
          1: {name: keyword.control.match.so}
        patterns:
          - begin: \s*(\()
            end: \s*(\))
            captures:
              1: {name: punctuation.definition.expression.so}
            patterns:
              - include: "#type-operators"
              - include: "#code-block"
              - include: $self
          - include: "#type-operators"
          - include: "#code-block"
          - include: $self

      with-clause:
        begin: (?x)\s*(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\b(with)\b
        end: (?<=})|(?=;|(?<=\s)(?:->|(?<!(?:(?<!\.)\.|[?!:]:)=?|->)\bthen\b)|$)
        name: meta.with.so
        beginCaptures:
          1: {name: keyword.control.with.so}
        patterns:
          - &with-clause-keywords
            match: \s*\b(as)\b
            name: keyword.control.with.so
          - begin: \s*(\()
            end: \s*(\))
            captures:
              1: {name: punctuation.definition.expression.so}
            patterns:
              - *with-clause-keywords
              - include: "#code-block"
              - include: $self
          - include: "#code-block"
          - include: $self

  punctuation:
    patterns:
      - include: "#line-continuation"
      - include: "#comma"
      - include: "#right-arrow"
      - include: "#semicolon"
      - include: "#double-semi"

    repository:
      line-continuation:
        match: (\\)\s*(?=/[/*+]|$)
        captures:
          1: {name: punctuation.separator.continuation.line.so}
      comma:
        match: \s*(,)
        captures:
          1: {name: punctuation.separator.comma.so}
      right-arrow:
        match: (?:^|['"`\\({\[\s]*)(->)(?:$|['"`\\\s)}\]])
        captures:
          1: {name: punctuation.definition.arrow.so}
      double-semi:
        match: \s*(;;)
        captures:
          1: {name: punctuation.terminator.statement.so}
      semicolon:
        match: \s*(;)(?!;)
        captures:
          1: {name: punctuation.terminator.expression.so}

  brackets:
    patterns:
      - include: "#curly-brackets"
      - include: "#code-block"
      - include: "#square-brackets"
      - include: "#round-brackets"

  code-block:
    patterns:
      - begin: (\{\|)\s*
        end: \s*(\|\})
        captures:
          1: {name: punctuation.definition.function.so}
        patterns:
          - include: $self
      - begin: (\{)\s*
        end: \s*(\})
        captures:
          1: {name: punctuation.definition.block.so}
        patterns:
          - include: $self

  curly-brackets:
    repository:
      punctuation:
        patterns:
          - match: ","
            name: punctuation.separator.mapping.so
          - match: (?<!\s):(?!:)
            name: punctuation.separator.key-value.so
          - match: (?<=^|[({\[])\s*([*+-](?:\s+[*+-])*)
            name: punctuation.definition.block.sequence.item.so

    patterns:
      - begin: (?<=(?::|:?=|->)\s+|[({\[]\s*|\b(?:var|let|const)\b\s*)(\{\|)\s*
        end: \s*(\|\})
        captures:
          1: {name: punctuation.definition.mapping.so}
        patterns:
          - include: "#labels"
          - include: "#punctuation"
          - include: $self
      - begin: (?<=(?::|:?=|->)\s+|[({\[]\s*|\b(?:var|let|const)\b\s*)(\{)\s*
        end: \s*(\})
        captures:
          1: {name: punctuation.definition.dictionary.so}
        patterns:
          - include: "#labels"
          - include: "#punctuation"
          - include: $self

  round-brackets:
    repository:
      punctuation:
        patterns:
          - match: ","
            name: punctuation.separator.arguments.so

    patterns:
      - begin: (\(\|)\s*
        end: \s*(\|\))
        captures:
          1: {name: punctuation.definition.parameters.so}
        patterns:
          - include: "#punctuation"
          - include: $self
      - begin: (\()\s*
        end: \s*(\))
        captures:
          1: {name: punctuation.definition.expression.so}
        patterns:
          - include: "#punctuation"
          - include: $self

  square-brackets:
    repository:
      punctuation:
        patterns:
          - match: (?<=\b|^|[)}\]'"`\\\s])(:)(?=\b|$|[({\['"`\\\s])
            captures:
              1: {name: punctuation.separator.slice.so}
          - match: ","
            name: punctuation.separator.sequence.so

    patterns:
      - begin: (\[<)\s*
        end: \s*(>\])
        captures:
          1: {name: punctuation.definition.typeparameters.so}
        patterns:
          - include: "#types"
          - include: $self
      - begin: (\[\|)\s*
        end: \s*(\|\])
        captures:
          1: {name: punctuation.definition.sequence.so}
        patterns:
          - include: "#punctuation"
          - include: $self
      - begin: (\[)\s*
        end: \s*(\])
        captures:
          1: {name: punctuation.definition.array.so}
        patterns:
          - include: "#punctuation"
          - include: $self

  support-js:
    patterns:
      - begin: \s*+\b(WeakSet|WeakMap|URIError|Uint8ClampedArray|Uint8Array|Uint32Array|Uint16Array|TypeError|TypedArray|SyntaxError|Symbol|String|SharedArrayBuffer|Set|RegExp|Reflect|ReferenceError|RangeError|Proxy|Promise|Object|Number|NaN|Math|Map|JSON|InternalError|Int8Array|Int32Array|Int16Array|Infinity|GeneratorFunction|Generator|Function|Float64Array|Float32Array|EvalError|Error|Date|DataView|Boolean|Atomics|ArrayBuffer|Array)\b
        end: (?=.)
        applyEndPatternLast: 1
        beginCaptures:
          1: {name: support.class.builtin.js}
        patterns:
          - include: "#round-brackets"
      - begin: \s*+\b((SIMD)((\.)(Uint8x16|Uint32x4|Uint16x8|Int8x16|Int32x4|Int16x8|Float64x2|Float32x4|Bool8x16|Bool64x2|Bool32x4|Bool16x8))?)\b
        end: (?=.)
        applyEndPatternLast: 1
        beginCaptures:
          2: {name: support.class.builtin.js}
          4: {name: keyword.operator.accessor.js}
          5: {name: support.class.builtin.js}
        patterns:
          - include: "#round-brackets"
      - begin: \s*+\b((Intl)((\.)(NumberFormat|DateTimeFormat|Collator))?)\b
        end: (?=.)
        applyEndPatternLast: 1
        beginCaptures:
          2: {name: support.class.builtin.js}
          4: {name: keyword.operator.accessor.js}
          5: {name: support.class.builtin.js}
        patterns:
          - include: "#round-brackets"
      - begin: (?<!\.)\s*+\b(decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|escape|eval|isFinite|isNaN|parseFloat|parseInt|unescape)\b
        end: (?=.)
        applyEndPatternLast: 1
        beginCaptures:
          1: {name: support.function.js}
        patterns:
          - include: "#round-brackets"
      - begin: (?<=\.)\s*+(shift|sort|splice|unshift|pop|push|reverse)\b
        end: (?=.)
        applyEndPatternLast: 1
        beginCaptures:
          1: {name: support.function.mutator.js}
        patterns:
          - include: "#round-brackets"
      - begin: (?<!\.)\s*+\b((Eval|Range|Reference|Syntax|Type|URI)?Error)\b
        end: (?=.)
        applyEndPatternLast: 1
        beginCaptures:
          1: {name: support.class.error.js}
        patterns:
          - include: "#round-brackets"
      - match: (?<!\.)\s*+\b(debugger)\b
        captures:
          1: {name: keyword.other.js}
      - match: (?<!\.)\s*+\b(document|window)\b
        captures:
          1: {name: support.type.object.dom.js}
      - match: \s*+\b(ELEMENT_NODE|ATTRIBUTE_NODE|TEXT_NODE|CDATA_SECTION_NODE|ENTITY_REFERENCE_NODE|ENTITY_NODE|PROCESSING_INSTRUCTION_NODE|COMMENT_NODE|DOCUMENT_NODE|DOCUMENT_TYPE_NODE|DOCUMENT_FRAGMENT_NODE|NOTATION_NODE|INDEX_SIZE_ERR|DOMSTRING_SIZE_ERR|HIERARCHY_REQUEST_ERR|WRONG_DOCUMENT_ERR|INVALID_CHARACTER_ERR|NO_DATA_ALLOWED_ERR|NO_MODIFICATION_ALLOWED_ERR|NOT_FOUND_ERR|NOT_SUPPORTED_ERR|INUSE_ATTRIBUTE_ERR)\b
        captures:
          1: {name: support.constant.dom.js}
      - begin: (?<!\.)\s*+\b(Console)(?:(\.)(warn|info|log|error|time|timeEnd|assert))?\b
        end: (?=.)
        applyEndPatternLast: 1
        beginCaptures:
          1: {name: support.type.object.console.js}
          2: {name: keyword.operator.accessor.js}
          3: {name: support.function.console.js}
        patterns:
          - include: "#round-brackets"
      - match: (?<!\.)\s*+\b(Process)(?:(\.)(stdout|stderr|stdin|argv|execPath|execArgv|env|exitCode|version|versions|config|pid|title|arch|platform|mainModule))?\b
        captures:
          1: {name: support.type.object.process.js}
          2: {name: keyword.operator.accessor.js}
          3: {name: support.type.object.process.js}
      - begin: (?<!\.)\s*+\b(Process)(?:(\.)(abort|chdir|cwd|exit|getgid|setgid|getuid|setuid|setgroups|getgroups|initgroups|kill|memoryUsage|nextTick|umask|uptime|hrtime))?\b
        end: (?=.)
        applyEndPatternLast: 1
        beginCaptures:
          1: {name: support.type.object.process.js}
          2: {name: keyword.operator.accessor.js}
          3: {name: support.function.process.js}
        patterns:
          - include: "#round-brackets"
      - match: (((?<!\.)\s*+\bModule\.((?<!\,)exports|id|require|parent|filename|loaded|children)|exports))\b
        captures:
          1: {name: support.type.object.module.js}
          2: {name: keyword.operator.accessor.js}
          3: {name: support.type.object.module.js}
      - match: (?<!\.)\s*+\b(global|GLOBAL|root|__dirname|__filename)\b
        captures:
          1: {name: support.type.object.node.js}
      - begin: \s*+\b(Buffer|EventEmitter|Server|Pipe|Socket|REPLServer|ReadStream|WriteStream|Stream|Inflate|Deflate|InflateRaw|DeflateRaw|GZip|GUnzip|Unzip|Zip)\b
        end: (?=.)
        applyEndPatternLast: 1
        beginCaptures:
          1: {name: support.class.node.js}
        patterns:
          - include: "#round-brackets"
